//
// File generated by HDevelop for HALCON/.NET (C#) Version 18.11.0.0
// Non-ASCII strings in this file are encoded in local-8-bit encoding (cp936).
// 
// Please note that non-ASCII characters in string constants are exported
// as octal codes in order to guarantee that the strings are correctly
// created on all systems, independent on any compiler settings.
// 
// Source files with different encoding should not be mixed in one project.
//
//  This file is intended to be used with the HDevelopTemplate or
//  HDevelopTemplateWPF projects located under %HALCONEXAMPLES%\c#

using System;
using HalconDotNet;

public partial class HDevelopExport
{
  public HTuple hv_ExpDefaultWinHandle;

  // Procedures 
  // Local procedures 
  public void _affineTransRect2Single (HTuple hv_row, HTuple hv_col, HTuple hv_radian, 
      HTuple hv_len1, HTuple hv_len2, HTuple hv_map, out HTuple hv_rowOut, out HTuple hv_colOut, 
      out HTuple hv_radianOut, out HTuple hv_len1Out, out HTuple hv_len2Out)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_topCenterCol = new HTuple(), hv_topCenterRow = new HTuple();
    HTuple hv_topCenterRowTrans = new HTuple(), hv_topCenterColTrans = new HTuple();
    HTuple hv_vecCol = new HTuple(), hv_vecRow = new HTuple();
    HTuple hv_epslon = new HTuple();
    // Initialize local and output iconic variables 
    hv_rowOut = new HTuple();
    hv_colOut = new HTuple();
    hv_radianOut = new HTuple();
    hv_len1Out = new HTuple();
    hv_len2Out = new HTuple();
    try
    {

      hv_rowOut.Dispose();hv_colOut.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_map, hv_row, hv_col, out hv_rowOut, out hv_colOut);
      hv_len1Out.Dispose();
      hv_len1Out = new HTuple(hv_len1);
      hv_len2Out.Dispose();
      hv_len2Out = new HTuple(hv_len2);

      hv_topCenterCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_topCenterCol = hv_col+((hv_radian.TupleCos()
          )*hv_len1);
      }
      hv_topCenterRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_topCenterRow = hv_row-((hv_radian.TupleSin()
          )*hv_len2);
      }

      hv_topCenterRowTrans.Dispose();hv_topCenterColTrans.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_map, hv_topCenterRow, hv_topCenterCol, out hv_topCenterRowTrans, 
          out hv_topCenterColTrans);



      hv_vecCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_vecCol = hv_topCenterColTrans-hv_colOut;
      }
      hv_vecRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_vecRow = hv_topCenterRowTrans-hv_rowOut;
      }
      hv_epslon.Dispose();
      hv_epslon = 0.0000000001;
      if ((int)(new HTuple(((hv_vecRow.TupleAbs())).TupleLess(hv_epslon))) != 0)
      {
        hv_vecRow.Dispose();
        hv_vecRow = new HTuple(hv_epslon);
      }

      if ((int)((new HTuple(hv_vecCol.TupleGreaterEqual(0))).TupleAnd(new HTuple(hv_vecRow.TupleGreaterEqual(
          0)))) != 0)
      {
        //右下
        hv_radianOut.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_radianOut = -(((hv_vecRow/hv_vecCol)).TupleAtan()
            );
        }
      }
      else if ((int)((new HTuple(hv_vecCol.TupleGreaterEqual(0))).TupleAnd(
          new HTuple(hv_vecRow.TupleLess(0)))) != 0)
      {
        //右上
        hv_radianOut.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_radianOut = -(((hv_vecRow/hv_vecCol)).TupleAtan()
            );
        }
      }
      else if ((int)((new HTuple(hv_vecCol.TupleLess(0))).TupleAnd(new HTuple(hv_vecRow.TupleGreaterEqual(
          0)))) != 0)
      {
        //左下
        hv_radianOut.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_radianOut = ((new HTuple(-180)).TupleRad()
            )-(((hv_vecRow/hv_vecCol)).TupleAtan());
        }
      }
      else
      {
        //左上
        hv_radianOut.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_radianOut = ((new HTuple(180)).TupleRad()
            )-(((hv_vecRow/hv_vecCol)).TupleAtan());
        }
      }




      hv_topCenterCol.Dispose();
      hv_topCenterRow.Dispose();
      hv_topCenterRowTrans.Dispose();
      hv_topCenterColTrans.Dispose();
      hv_vecCol.Dispose();
      hv_vecRow.Dispose();
      hv_epslon.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_topCenterCol.Dispose();
      hv_topCenterRow.Dispose();
      hv_topCenterRowTrans.Dispose();
      hv_topCenterColTrans.Dispose();
      hv_vecCol.Dispose();
      hv_vecRow.Dispose();
      hv_epslon.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void _genSubRect2 (out HObject ho_rect2Out, HTuple hv_row, HTuple hv_col, 
      HTuple hv_radian, HTuple hv_len1, HTuple hv_len2, HTuple hv_lineX1, HTuple hv_lineY1, 
      HTuple hv_lineX2, HTuple hv_lineY2, HTuple hv_newWidth)
  {



    // Local iconic variables 

    HObject ho_Rectangle;

    // Local control variables 

    HTuple hv_rowEndPoint = new HTuple(), hv_colEndPoint = new HTuple();
    HTuple hv_IsOverlapping = new HTuple(), hv_rowOut = new HTuple();
    HTuple hv_colOut = new HTuple(), hv_radianNormal = new HTuple();
    HTuple hv_radianOut = new HTuple(), hv_len1Out = new HTuple();
    HTuple hv_len2Out = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_rect2Out);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    try
    {
      ho_Rectangle.Dispose();
      HOperatorSet.GenRectangle2ContourXld(out ho_Rectangle, hv_row, hv_col, hv_radian, 
          hv_len1, hv_len2);
      hv_rowEndPoint.Dispose();hv_colEndPoint.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLineContourXld(ho_Rectangle, hv_lineY1, hv_lineX1, 
          hv_lineY2, hv_lineX2, out hv_rowEndPoint, out hv_colEndPoint, out hv_IsOverlapping);

      if ((int)((new HTuple((new HTuple(hv_rowEndPoint.TupleLength())).TupleNotEqual(
          2))).TupleOr(new HTuple((new HTuple(hv_colEndPoint.TupleLength())).TupleNotEqual(
          2)))) != 0)
      {
        throw new HalconException("Only two end points should be found!");
      }

      hv_rowOut.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rowOut = (hv_rowEndPoint.TupleSum()
          )/2.0;
      }
      hv_colOut.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_colOut = (hv_colEndPoint.TupleSum()
          )/2.0;
      }

      hv_radianNormal.Dispose();
      HOperatorSet.LineOrientation(hv_lineY1, hv_lineX1, hv_lineY2, hv_lineX2, out hv_radianNormal);
      hv_radianOut.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianOut = hv_radianNormal+((new HTuple(90)).TupleRad()
          );
      }

      hv_len1Out.Dispose();
      hv_len1Out = new HTuple(hv_newWidth);
      hv_len2Out.Dispose();
      hv_len2Out = new HTuple(hv_len2);

      ho_rect2Out.Dispose();
      HOperatorSet.GenRectangle2(out ho_rect2Out, hv_rowOut, hv_colOut, hv_radianOut, 
          hv_len1Out, hv_len2Out);

      ho_Rectangle.Dispose();

      hv_rowEndPoint.Dispose();
      hv_colEndPoint.Dispose();
      hv_IsOverlapping.Dispose();
      hv_rowOut.Dispose();
      hv_colOut.Dispose();
      hv_radianNormal.Dispose();
      hv_radianOut.Dispose();
      hv_len1Out.Dispose();
      hv_len2Out.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Rectangle.Dispose();

      hv_rowEndPoint.Dispose();
      hv_colEndPoint.Dispose();
      hv_IsOverlapping.Dispose();
      hv_rowOut.Dispose();
      hv_colOut.Dispose();
      hv_radianNormal.Dispose();
      hv_radianOut.Dispose();
      hv_len1Out.Dispose();
      hv_len2Out.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void _getUnmarkedBoundary (HTuple hv_boundarySearched, HTuple hv_m, HTuple hv_b, 
      HTuple hv_imageWidth, HTuple hv_imageHeight, out HTuple hv_x, out HTuple hv_y)
  {


    // Initialize local and output iconic variables 
    hv_x = new HTuple();
    hv_y = new HTuple();




    return;
  }

  public void _pinPointFindLine (HObject ho_inputImage, out HObject ho_findLineRegion, 
      HTuple hv_lineX1, HTuple hv_lineX2, HTuple hv_lineY1, HTuple hv_lineY2, HTuple hv_radian, 
      HTuple hv_newWidth, HTuple hv_EdgesOnly, HTuple hv_cannyHigh, HTuple hv_cannyLow, 
      HTuple hv_sigma, HTuple hv_kernelWidth, HTuple hv_longestOnly, out HTuple hv_RowBegin, 
      out HTuple hv_ColBegin, out HTuple hv_RowEnd, out HTuple hv_ColEnd, out HTuple hv_EdgesX, 
      out HTuple hv_EdgesY)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_Edges;

    // Local control variables 

    HTuple hv_contourLength = new HTuple(), hv_Nr = new HTuple();
    HTuple hv_Nc = new HTuple(), hv_Dist = new HTuple(), hv_Indices = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_findLineRegion);
    HOperatorSet.GenEmptyObj(out ho_Edges);
    hv_RowBegin = new HTuple();
    hv_ColBegin = new HTuple();
    hv_RowEnd = new HTuple();
    hv_ColEnd = new HTuple();
    hv_EdgesX = new HTuple();
    hv_EdgesY = new HTuple();
    try
    {
      ho_findLineRegion.Dispose();ho_Edges.Dispose();
      GetEdgesInSubRect2(ho_inputImage, out ho_findLineRegion, out ho_Edges, hv_lineX1, 
          hv_lineY1, hv_lineX2, hv_lineY2, hv_radian, hv_newWidth, hv_sigma, hv_cannyLow, 
          hv_cannyHigh, hv_kernelWidth, hv_longestOnly);

      //maxLength := 0
      //selectedIndex := 0
      //count_obj (Edges, numEdges)
      //if (numEdges > 1)
        //for Index := 1 to numEdges by 1
          //select_obj (Edges, Edge, Index)
          //length_xld (Edge, Length)
          //if (Length > maxLength)
            //maxLength := Length
            //selectedIndex := Index
          //endif
        //endfor
        //select_obj (Edges, Edges, selectedIndex)


      //endif

      {
      HObject ExpTmpOutVar_0;hv_contourLength.Dispose();
      LongestXLD(ho_Edges, out ExpTmpOutVar_0, out hv_contourLength);
      ho_Edges.Dispose();
      ho_Edges = ExpTmpOutVar_0;
      }

      ho_findLineRegion.Dispose();
      ho_findLineRegion = new HObject(ho_Edges);

      if ((int)(new HTuple(hv_EdgesOnly.TupleEqual("true"))) != 0)
      {
        hv_EdgesY.Dispose();hv_EdgesX.Dispose();
        HOperatorSet.GetContourXld(ho_Edges, out hv_EdgesY, out hv_EdgesX);
        ho_Edges.Dispose();

        hv_contourLength.Dispose();
        hv_Nr.Dispose();
        hv_Nc.Dispose();
        hv_Dist.Dispose();
        hv_Indices.Dispose();

        return;
      }

      hv_RowBegin.Dispose();hv_ColBegin.Dispose();hv_RowEnd.Dispose();hv_ColEnd.Dispose();hv_Nr.Dispose();hv_Nc.Dispose();hv_Dist.Dispose();
      HOperatorSet.FitLineContourXld(ho_Edges, "tukey", -1, 0, 5, 2, out hv_RowBegin, 
          out hv_ColBegin, out hv_RowEnd, out hv_ColEnd, out hv_Nr, out hv_Nc, out hv_Dist);

      if ((int)(new HTuple((new HTuple(hv_Dist.TupleLength())).TupleGreater(1))) != 0)
      {
        hv_Indices.Dispose();
        HOperatorSet.TupleSortIndex(hv_Dist, out hv_Indices);
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_RowBegin = hv_RowBegin.TupleSelect(
            1);
        hv_RowBegin.Dispose();
        hv_RowBegin = ExpTmpLocalVar_RowBegin;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_ColBegin = hv_ColBegin.TupleSelect(
            1);
        hv_ColBegin.Dispose();
        hv_ColBegin = ExpTmpLocalVar_ColBegin;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_RowEnd = hv_RowEnd.TupleSelect(
            1);
        hv_RowEnd.Dispose();
        hv_RowEnd = ExpTmpLocalVar_RowEnd;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_ColEnd = hv_ColEnd.TupleSelect(
            1);
        hv_ColEnd.Dispose();
        hv_ColEnd = ExpTmpLocalVar_ColEnd;
        }
        }
      }
      ho_Edges.Dispose();

      hv_contourLength.Dispose();
      hv_Nr.Dispose();
      hv_Nc.Dispose();
      hv_Dist.Dispose();
      hv_Indices.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Edges.Dispose();

      hv_contourLength.Dispose();
      hv_Nr.Dispose();
      hv_Nc.Dispose();
      hv_Dist.Dispose();
      hv_Indices.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void _search_boundary (HTuple hv_boundariesToSearch, HTuple hv_m, HTuple hv_b, 
      HTuple hv_imageWidth, HTuple hv_imageHeight, out HTuple hv_result, out HTuple hv_x, 
      out HTuple hv_y)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_hasElement = new HTuple(), hv_hasNull = new HTuple();
    // Initialize local and output iconic variables 
    hv_result = new HTuple();
    hv_x = new HTuple();
    hv_y = new HTuple();
    try
    {
      //down
      hv_hasElement.Dispose();
      StringTupleContains(hv_boundariesToSearch, "down", out hv_hasElement);
      hv_hasNull.Dispose();
      StringTupleContains(hv_boundariesToSearch, "null", out hv_hasNull);

      if ((int)((new HTuple(hv_hasElement.TupleEqual("true"))).TupleOr(new HTuple(hv_hasNull.TupleEqual(
          "true")))) != 0)
      {
        hv_y.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_y = hv_imageHeight-1;
        }
        hv_x.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_x = (hv_y-hv_b)/hv_m;
        }

        if ((int)((new HTuple(hv_x.TupleGreaterEqual(0))).TupleAnd(new HTuple(hv_x.TupleLess(
            hv_imageWidth)))) != 0)
        {
          hv_result.Dispose();
          hv_result = "down";

          hv_hasElement.Dispose();
          hv_hasNull.Dispose();

          return;
        }
      }

      //up
      hv_hasElement.Dispose();
      StringTupleContains(hv_boundariesToSearch, "up", out hv_hasElement);
      hv_hasNull.Dispose();
      StringTupleContains(hv_boundariesToSearch, "null", out hv_hasNull);

      if ((int)((new HTuple(hv_hasElement.TupleEqual("true"))).TupleOr(new HTuple(hv_hasNull.TupleEqual(
          "true")))) != 0)
      {
        hv_y.Dispose();
        hv_y = 0;
        hv_x.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_x = (hv_y-hv_b)/hv_m;
        }

        if ((int)((new HTuple(hv_x.TupleGreaterEqual(0))).TupleAnd(new HTuple(hv_x.TupleLess(
            hv_imageWidth)))) != 0)
        {
          hv_result.Dispose();
          hv_result = "up";

          hv_hasElement.Dispose();
          hv_hasNull.Dispose();

          return;
        }
      }

      //left
      hv_hasElement.Dispose();
      StringTupleContains(hv_boundariesToSearch, "left", out hv_hasElement);
      hv_hasNull.Dispose();
      StringTupleContains(hv_boundariesToSearch, "null", out hv_hasNull);

      if ((int)((new HTuple(hv_hasElement.TupleEqual("true"))).TupleOr(new HTuple(hv_hasNull.TupleEqual(
          "true")))) != 0)
      {
        hv_x.Dispose();
        hv_x = 0;
        hv_y.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_y = (hv_m*hv_x)+hv_b;
        }

        if ((int)((new HTuple(hv_y.TupleGreaterEqual(0))).TupleAnd(new HTuple(hv_y.TupleLess(
            hv_imageHeight)))) != 0)
        {
          hv_result.Dispose();
          hv_result = "left";

          hv_hasElement.Dispose();
          hv_hasNull.Dispose();

          return;
        }
      }


      //right
      hv_hasElement.Dispose();
      StringTupleContains(hv_boundariesToSearch, "right", out hv_hasElement);
      hv_hasNull.Dispose();
      StringTupleContains(hv_boundariesToSearch, "null", out hv_hasNull);

      if ((int)((new HTuple(hv_hasElement.TupleEqual("true"))).TupleOr(new HTuple(hv_hasNull.TupleEqual(
          "true")))) != 0)
      {
        hv_x.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_x = hv_imageWidth-1;
        }
        hv_y.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_y = (hv_m*hv_x)+hv_b;
        }

        if ((int)((new HTuple(hv_y.TupleGreaterEqual(0))).TupleAnd(new HTuple(hv_y.TupleLess(
            hv_imageHeight)))) != 0)
        {
          hv_result.Dispose();
          hv_result = "right";

          hv_hasElement.Dispose();
          hv_hasNull.Dispose();

          return;
        }
      }

      hv_result.Dispose();
      hv_result = "null";


      hv_hasElement.Dispose();
      hv_hasNull.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_hasElement.Dispose();
      hv_hasNull.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void AffineTransRect2 (HTuple hv_row, HTuple hv_col, HTuple hv_radian, HTuple hv_len1, 
      HTuple hv_len2, HTuple hv_map, out HTuple hv_rowOut, out HTuple hv_colOut, out HTuple hv_radianOut, 
      out HTuple hv_len1Out, out HTuple hv_len2Out)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_i = new HTuple(), hv_rowO = new HTuple();
    HTuple hv_colO = new HTuple(), hv_radianO = new HTuple();
    HTuple hv_len1O = new HTuple(), hv_len2O = new HTuple();
    // Initialize local and output iconic variables 
    hv_rowOut = new HTuple();
    hv_colOut = new HTuple();
    hv_radianOut = new HTuple();
    hv_len1Out = new HTuple();
    hv_len2Out = new HTuple();
    try
    {
      hv_rowOut.Dispose();
      hv_rowOut = new HTuple();
      hv_colOut.Dispose();
      hv_colOut = new HTuple();
      hv_radianOut.Dispose();
      hv_radianOut = new HTuple();
      hv_len1Out.Dispose();
      hv_len1Out = new HTuple();
      hv_len2Out.Dispose();
      hv_len2Out = new HTuple();

      for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_row.TupleLength()))-1); hv_i = (int)hv_i + 1)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_rowO.Dispose();hv_colO.Dispose();hv_radianO.Dispose();hv_len1O.Dispose();hv_len2O.Dispose();
        _affineTransRect2Single(hv_row.TupleSelect(hv_i), hv_col.TupleSelect(hv_i), 
            hv_radian.TupleSelect(hv_i), hv_len1.TupleSelect(hv_i), hv_len2.TupleSelect(
            hv_i), hv_map, out hv_rowO, out hv_colO, out hv_radianO, out hv_len1O, 
            out hv_len2O);
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_rowOut = hv_rowOut.TupleConcat(
            hv_rowO);
        hv_rowOut.Dispose();
        hv_rowOut = ExpTmpLocalVar_rowOut;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_colOut = hv_colOut.TupleConcat(
            hv_colO);
        hv_colOut.Dispose();
        hv_colOut = ExpTmpLocalVar_colOut;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_radianOut = hv_radianOut.TupleConcat(
            hv_radianO);
        hv_radianOut.Dispose();
        hv_radianOut = ExpTmpLocalVar_radianOut;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_len1Out = hv_len1Out.TupleConcat(
            hv_len1O);
        hv_len1Out.Dispose();
        hv_len1Out = ExpTmpLocalVar_len1Out;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_len2Out = hv_len2Out.TupleConcat(
            hv_len2O);
        hv_len2Out.Dispose();
        hv_len2Out = ExpTmpLocalVar_len2Out;
        }
        }
      }
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_i.Dispose();
      hv_rowO.Dispose();
      hv_colO.Dispose();
      hv_radianO.Dispose();
      hv_len1O.Dispose();
      hv_len2O.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void AngledLineThatPasses (HTuple hv_centerX, HTuple hv_centerY, HTuple hv_radian, 
      out HTuple hv_x1, out HTuple hv_y1)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_m = new HTuple(), hv_b = new HTuple();
    // Initialize local and output iconic variables 
    hv_x1 = new HTuple();
    hv_y1 = new HTuple();
    try
    {

      hv_m.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_m = hv_radian.TupleTan()
          ;
      }
      hv_b.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_b = hv_centerY-(hv_m*hv_centerX);
      }

      hv_x1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_x1 = hv_centerX+100;
      }
      hv_y1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_y1 = (hv_m*hv_x1)+hv_b;
      }




      hv_m.Dispose();
      hv_b.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_m.Dispose();
      hv_b.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void DegreeRelativeToAbs (HTuple hv_RotationMat, HTuple hv_DegreeRelative, 
      out HTuple hv_DegreeAbs)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_VecX = new HTuple(), hv_VecY = new HTuple();
    HTuple hv_xUnitNewOrgToFeatureAbs = new HTuple(), hv_yUnitNewOrgToFeatureAbs = new HTuple();
    HTuple hv_angleAbs = new HTuple();
    // Initialize local and output iconic variables 
    hv_DegreeAbs = new HTuple();
    try
    {
      hv_VecX.Dispose();hv_VecY.Dispose();
      DegreeToUnitVector(hv_DegreeRelative, out hv_VecX, out hv_VecY);
      hv_xUnitNewOrgToFeatureAbs.Dispose();hv_yUnitNewOrgToFeatureAbs.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_RotationMat, hv_VecX, hv_VecY, out hv_xUnitNewOrgToFeatureAbs, 
          out hv_yUnitNewOrgToFeatureAbs);
      hv_angleAbs.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_angleAbs = -(hv_yUnitNewOrgToFeatureAbs.TupleAtan2(
          hv_xUnitNewOrgToFeatureAbs));
      }
      hv_DegreeAbs.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DegreeAbs = hv_angleAbs.TupleDeg()
          ;
      }


      hv_VecX.Dispose();
      hv_VecY.Dispose();
      hv_xUnitNewOrgToFeatureAbs.Dispose();
      hv_yUnitNewOrgToFeatureAbs.Dispose();
      hv_angleAbs.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_VecX.Dispose();
      hv_VecY.Dispose();
      hv_xUnitNewOrgToFeatureAbs.Dispose();
      hv_yUnitNewOrgToFeatureAbs.Dispose();
      hv_angleAbs.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void DegreeToUnitVector (HTuple hv_Degree, out HTuple hv_VecX, out HTuple hv_VecY)
  {



    // Local iconic variables 
    // Initialize local and output iconic variables 
    hv_VecX = new HTuple();
    hv_VecY = new HTuple();
    hv_VecX.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_VecX = ((hv_Degree.TupleRad()
        )).TupleCos();
    }
    hv_VecY.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_VecY = ((hv_Degree.TupleRad()
        )).TupleSin();
    }


    return;
  }

  public void DistanceInWorld_PP (HTuple hv_row1, HTuple hv_col1, HTuple hv_row2, 
      HTuple hv_col2, HTuple hv_MapToWorld, out HTuple hv_Distance)
  {



    // Local control variables 

    HTuple hv_col2World = new HTuple(), hv_row2World = new HTuple();
    HTuple hv_col1World = new HTuple(), hv_row1World = new HTuple();
    // Initialize local and output iconic variables 
    hv_Distance = new HTuple();
    try
    {
      hv_col2World.Dispose();hv_row2World.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_MapToWorld, hv_col2, hv_row2, out hv_col2World, 
          out hv_row2World);
      hv_col1World.Dispose();hv_row1World.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_MapToWorld, hv_col1, hv_row1, out hv_col1World, 
          out hv_row1World);

      hv_Distance.Dispose();
      HOperatorSet.DistancePp(hv_row1World, hv_col1World, hv_row2World, hv_col2World, 
          out hv_Distance);

      hv_col2World.Dispose();
      hv_row2World.Dispose();
      hv_col1World.Dispose();
      hv_row1World.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_col2World.Dispose();
      hv_row2World.Dispose();
      hv_col1World.Dispose();
      hv_row1World.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void DistancePLInWorld (HTuple hv_lineStartX, HTuple hv_lineStartY, HTuple hv_lineEndX, 
      HTuple hv_lineEndY, HTuple hv_ptX, HTuple hv_ptY, HTuple hv_mapToWorld, out HTuple hv_distanceWorld, 
      out HTuple hv_distancePixel)
  {



    // Local control variables 

    HTuple hv_ptXWorld = new HTuple(), hv_ptYWorld = new HTuple();
    HTuple hv_X1World = new HTuple(), hv_Y1World = new HTuple();
    HTuple hv_X2World = new HTuple(), hv_Y2World = new HTuple();
    // Initialize local and output iconic variables 
    hv_distanceWorld = new HTuple();
    hv_distancePixel = new HTuple();
    try
    {


      hv_distancePixel.Dispose();
      HOperatorSet.DistancePl(hv_ptY, hv_ptX, hv_lineStartY, hv_lineStartX, hv_lineEndY, 
          hv_lineEndX, out hv_distancePixel);



      hv_ptXWorld.Dispose();hv_ptYWorld.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_mapToWorld, hv_ptX, hv_ptY, out hv_ptXWorld, 
          out hv_ptYWorld);
      hv_X1World.Dispose();hv_Y1World.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_mapToWorld, hv_lineStartX, hv_lineStartY, 
          out hv_X1World, out hv_Y1World);
      hv_X2World.Dispose();hv_Y2World.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_mapToWorld, hv_lineEndX, hv_lineEndY, out hv_X2World, 
          out hv_Y2World);


      hv_distanceWorld.Dispose();
      HOperatorSet.DistancePl(hv_ptYWorld, hv_ptXWorld, hv_Y1World, hv_X1World, hv_Y2World, 
          hv_X2World, out hv_distanceWorld);

      hv_ptXWorld.Dispose();
      hv_ptYWorld.Dispose();
      hv_X1World.Dispose();
      hv_Y1World.Dispose();
      hv_X2World.Dispose();
      hv_Y2World.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_ptXWorld.Dispose();
      hv_ptYWorld.Dispose();
      hv_X1World.Dispose();
      hv_Y1World.Dispose();
      hv_X2World.Dispose();
      hv_Y2World.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void EstimateGaussian1D (HTuple hv_Xs, out HTuple hv_Mean, out HTuple hv_Deviation)
  {


    // Initialize local and output iconic variables 
    hv_Mean = new HTuple();
    hv_Deviation = new HTuple();
    hv_Mean.Dispose();
    HOperatorSet.TupleMean(hv_Xs, out hv_Mean);
    hv_Deviation.Dispose();
    HOperatorSet.TupleDeviation(hv_Xs, out hv_Deviation);



    return;
  }

  public void FindLineAdaptiveSingle (HObject ho_inputImage, out HObject ho_findLineRect, 
      out HObject ho_lineRegion, out HObject ho_lineContours, HTuple hv_row, HTuple hv_col, 
      HTuple hv_radian, HTuple hv_len1, HTuple hv_len2, HTuple hv_numSubRects, HTuple hv_transition, 
      HTuple hv_threshold, HTuple hv_sigma1, HTuple hv_sigma2, HTuple hv_firstOrLast, 
      HTuple hv_widthRatio, HTuple hv_ignoreFraction, HTuple hv_newWidth, HTuple hv_cannyLow, 
      HTuple hv_cannyHigh, HTuple hv_kernelWidth, HTuple hv_longestOnly, out HTuple hv_lineX1, 
      out HTuple hv_lineY1, out HTuple hv_lineX2, out HTuple hv_lineY2, out HTuple hv_XsUsed, 
      out HTuple hv_YsUsed, out HTuple hv_XsIgnored, out HTuple hv_YsIgnored)
  {




    // Local iconic variables 

    HObject ho_subRect, ho_Edges, ho_outputContour;

    // Local control variables 

    HTuple hv_Xs = new HTuple(), hv_Ys = new HTuple();
    HTuple hv_contourLength = new HTuple(), hv_minLength = new HTuple();
    HTuple hv_Nr = new HTuple(), hv_Nc = new HTuple(), hv_Dist = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_findLineRect);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    HOperatorSet.GenEmptyObj(out ho_lineContours);
    HOperatorSet.GenEmptyObj(out ho_subRect);
    HOperatorSet.GenEmptyObj(out ho_Edges);
    HOperatorSet.GenEmptyObj(out ho_outputContour);
    hv_lineX1 = new HTuple();
    hv_lineY1 = new HTuple();
    hv_lineX2 = new HTuple();
    hv_lineY2 = new HTuple();
    hv_XsUsed = new HTuple();
    hv_YsUsed = new HTuple();
    hv_XsIgnored = new HTuple();
    hv_YsIgnored = new HTuple();
    try
    {

      ho_findLineRect.Dispose();hv_Xs.Dispose();hv_Ys.Dispose();
      VisionProStyleFindLine(ho_inputImage, out ho_findLineRect, hv_transition, hv_row, 
          hv_col, hv_radian, hv_len1, hv_len2, hv_numSubRects, hv_threshold, hv_sigma1, 
          hv_firstOrLast, "false", "first", 0, 100, out hv_Xs, out hv_Ys);


      hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
      FitLine2D(hv_Xs, hv_Ys, hv_ignoreFraction, out hv_lineX1, out hv_lineY1, out hv_lineX2, 
          out hv_lineY2, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored);
      ho_subRect.Dispose();ho_Edges.Dispose();
      GetEdgesInSubRect2(ho_inputImage, out ho_subRect, out ho_Edges, hv_lineX1, 
          hv_lineY1, hv_lineX2, hv_lineY2, hv_radian, hv_newWidth, hv_sigma2, hv_cannyLow, 
          hv_cannyHigh, hv_kernelWidth, hv_longestOnly);
      ho_outputContour.Dispose();hv_contourLength.Dispose();
      LongestXLD(ho_Edges, out ho_outputContour, out hv_contourLength);

      hv_minLength.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_minLength = hv_widthRatio*hv_len2;
      }

      if ((int)(new HTuple(hv_contourLength.TupleLess(hv_minLength))) != 0)
      {
        //using leaset square fit
        ho_lineContours.Dispose();
        HOperatorSet.GenEmptyObj(out ho_lineContours);
      }
      else
      {
        //using turkey
        hv_lineY1.Dispose();hv_lineX1.Dispose();hv_lineY2.Dispose();hv_lineX2.Dispose();hv_Nr.Dispose();hv_Nc.Dispose();hv_Dist.Dispose();
        HOperatorSet.FitLineContourXld(ho_outputContour, "tukey", -1, 0, 5, 2, out hv_lineY1, 
            out hv_lineX1, out hv_lineY2, out hv_lineX2, out hv_Nr, out hv_Nc, out hv_Dist);
        ho_findLineRect.Dispose();
        ho_findLineRect = new HObject(ho_subRect);
        ho_lineContours.Dispose();
        ho_lineContours = new HObject(ho_outputContour);

      }


      ho_lineRegion.Dispose();
      GenLineRegion(out ho_lineRegion, hv_lineX1, hv_lineY1, hv_lineX2, hv_lineY2, 
          5120, 5120);


      ho_subRect.Dispose();
      ho_Edges.Dispose();
      ho_outputContour.Dispose();

      hv_Xs.Dispose();
      hv_Ys.Dispose();
      hv_contourLength.Dispose();
      hv_minLength.Dispose();
      hv_Nr.Dispose();
      hv_Nc.Dispose();
      hv_Dist.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_subRect.Dispose();
      ho_Edges.Dispose();
      ho_outputContour.Dispose();

      hv_Xs.Dispose();
      hv_Ys.Dispose();
      hv_contourLength.Dispose();
      hv_minLength.Dispose();
      hv_Nr.Dispose();
      hv_Nc.Dispose();
      hv_Dist.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void FindLineGradiant (HObject ho_inputImage, out HObject ho_findLineRegion, 
      out HObject ho_lineRegion, HTuple hv_row, HTuple hv_col, HTuple hv_radian, HTuple hv_len1, 
      HTuple hv_len2, HTuple hv_numSubRects, HTuple hv_ignoreFraction, HTuple hv_transition, 
      HTuple hv_threshold, HTuple hv_sigma1, HTuple hv_firstOrLast, out HTuple hv_XsUsed, 
      out HTuple hv_YsUsed, out HTuple hv_XsIgnored, out HTuple hv_YsIgnored, out HTuple hv_lineX1, 
      out HTuple hv_lineY1, out HTuple hv_lineX2, out HTuple hv_lineY2)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_findLineRegions;

    // Local control variables 

    HTuple hv_imageWidth = new HTuple(), hv_imageHeight = new HTuple();
    HTuple hv_EdgesX = new HTuple(), hv_EdgesY = new HTuple();
    HTuple hv_i = new HTuple(), hv_Xs = new HTuple(), hv_Ys = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_findLineRegion);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    HOperatorSet.GenEmptyObj(out ho_findLineRegions);
    hv_XsUsed = new HTuple();
    hv_YsUsed = new HTuple();
    hv_XsIgnored = new HTuple();
    hv_YsIgnored = new HTuple();
    hv_lineX1 = new HTuple();
    hv_lineY1 = new HTuple();
    hv_lineX2 = new HTuple();
    hv_lineY2 = new HTuple();
    try
    {
      hv_imageWidth.Dispose();hv_imageHeight.Dispose();
      HOperatorSet.GetImageSize(ho_inputImage, out hv_imageWidth, out hv_imageHeight);
      hv_EdgesX.Dispose();
      hv_EdgesX = new HTuple();
      hv_EdgesY.Dispose();
      hv_EdgesY = new HTuple();


      ho_findLineRegions.Dispose();
      HOperatorSet.GenEmptyObj(out ho_findLineRegions);

      for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_row.TupleLength()))-1); hv_i = (int)hv_i + 1)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        ho_findLineRegion.Dispose();hv_Xs.Dispose();hv_Ys.Dispose();
        VisionProStyleFindLine(ho_inputImage, out ho_findLineRegion, hv_transition, 
            hv_row.TupleSelect(hv_i), hv_col.TupleSelect(hv_i), hv_radian.TupleSelect(
            hv_i), hv_len1.TupleSelect(hv_i), hv_len2.TupleSelect(hv_i), hv_numSubRects, 
            hv_threshold.TupleSelect(hv_i), hv_sigma1, hv_firstOrLast, "false", "first", 
            0, 100, out hv_Xs, out hv_Ys);
        }


        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgesX = hv_EdgesX.TupleConcat(
            hv_Xs);
        hv_EdgesX.Dispose();
        hv_EdgesX = ExpTmpLocalVar_EdgesX;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgesY = hv_EdgesY.TupleConcat(
            hv_Ys);
        hv_EdgesY.Dispose();
        hv_EdgesY = ExpTmpLocalVar_EdgesY;
        }
        }
        {
        HObject ExpTmpOutVar_0;
        HOperatorSet.ConcatObj(ho_findLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
            );
        ho_findLineRegions.Dispose();
        ho_findLineRegions = ExpTmpOutVar_0;
        }

      }

      hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
      FitLine2D(hv_EdgesX, hv_EdgesY, hv_ignoreFraction, out hv_lineX1, out hv_lineY1, 
          out hv_lineX2, out hv_lineY2, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, 
          out hv_YsIgnored);
      ho_findLineRegion.Dispose();
      ho_findLineRegion = new HObject(ho_findLineRegions);


      ho_lineRegion.Dispose();
      GenLineRegion(out ho_lineRegion, hv_lineX1, hv_lineY1, hv_lineX2, hv_lineY2, 
          hv_imageWidth, hv_imageHeight);

      hv_XsUsed.Dispose();
      hv_XsUsed = new HTuple(hv_Xs);
      hv_YsUsed.Dispose();
      hv_YsUsed = new HTuple(hv_Ys);
      ho_findLineRegions.Dispose();

      hv_imageWidth.Dispose();
      hv_imageHeight.Dispose();
      hv_EdgesX.Dispose();
      hv_EdgesY.Dispose();
      hv_i.Dispose();
      hv_Xs.Dispose();
      hv_Ys.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_findLineRegions.Dispose();

      hv_imageWidth.Dispose();
      hv_imageHeight.Dispose();
      hv_EdgesX.Dispose();
      hv_EdgesY.Dispose();
      hv_i.Dispose();
      hv_Xs.Dispose();
      hv_Ys.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void FindLineGradiant_Pair (HObject ho_inputImage, out HObject ho_findLineRegion, 
      out HObject ho_lineRegion, HTuple hv_row, HTuple hv_col, HTuple hv_radian, HTuple hv_len1, 
      HTuple hv_len2, HTuple hv_numSubRects, HTuple hv_ignoreFraction, HTuple hv_transition, 
      HTuple hv_threshold, HTuple hv_sigma1, HTuple hv_firstOrLast, HTuple hv_whichPair, 
      HTuple hv_minWidth, HTuple hv_maxWidth, out HTuple hv_XsUsed, out HTuple hv_YsUsed, 
      out HTuple hv_XsIgnored, out HTuple hv_YsIgnored, out HTuple hv_lineX1, out HTuple hv_lineY1, 
      out HTuple hv_lineX2, out HTuple hv_lineY2)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_findLineRegions;

    // Local control variables 

    HTuple hv_imageWidth = new HTuple(), hv_imageHeight = new HTuple();
    HTuple hv_EdgesX = new HTuple(), hv_EdgesY = new HTuple();
    HTuple hv_i = new HTuple(), hv_Xs = new HTuple(), hv_Ys = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_findLineRegion);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    HOperatorSet.GenEmptyObj(out ho_findLineRegions);
    hv_XsUsed = new HTuple();
    hv_YsUsed = new HTuple();
    hv_XsIgnored = new HTuple();
    hv_YsIgnored = new HTuple();
    hv_lineX1 = new HTuple();
    hv_lineY1 = new HTuple();
    hv_lineX2 = new HTuple();
    hv_lineY2 = new HTuple();
    try
    {
      hv_imageWidth.Dispose();hv_imageHeight.Dispose();
      HOperatorSet.GetImageSize(ho_inputImage, out hv_imageWidth, out hv_imageHeight);
      hv_EdgesX.Dispose();
      hv_EdgesX = new HTuple();
      hv_EdgesY.Dispose();
      hv_EdgesY = new HTuple();


      ho_findLineRegions.Dispose();
      HOperatorSet.GenEmptyObj(out ho_findLineRegions);

      for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_row.TupleLength()))-1); hv_i = (int)hv_i + 1)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        ho_findLineRegion.Dispose();hv_Xs.Dispose();hv_Ys.Dispose();
        VisionProStyleFindLine(ho_inputImage, out ho_findLineRegion, hv_transition, 
            hv_row.TupleSelect(hv_i), hv_col.TupleSelect(hv_i), hv_radian.TupleSelect(
            hv_i), hv_len1.TupleSelect(hv_i), hv_len2.TupleSelect(hv_i), hv_numSubRects, 
            hv_threshold.TupleSelect(hv_i), hv_sigma1, hv_firstOrLast, "true", hv_whichPair, 
            hv_minWidth, hv_maxWidth, out hv_Xs, out hv_Ys);
        }


        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgesX = hv_EdgesX.TupleConcat(
            hv_Xs);
        hv_EdgesX.Dispose();
        hv_EdgesX = ExpTmpLocalVar_EdgesX;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgesY = hv_EdgesY.TupleConcat(
            hv_Ys);
        hv_EdgesY.Dispose();
        hv_EdgesY = ExpTmpLocalVar_EdgesY;
        }
        }
        {
        HObject ExpTmpOutVar_0;
        HOperatorSet.ConcatObj(ho_findLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
            );
        ho_findLineRegions.Dispose();
        ho_findLineRegions = ExpTmpOutVar_0;
        }

      }

      hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
      FitLine2D(hv_EdgesX, hv_EdgesY, hv_ignoreFraction, out hv_lineX1, out hv_lineY1, 
          out hv_lineX2, out hv_lineY2, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, 
          out hv_YsIgnored);
      ho_findLineRegion.Dispose();
      ho_findLineRegion = new HObject(ho_findLineRegions);


      ho_lineRegion.Dispose();
      GenLineRegion(out ho_lineRegion, hv_lineX1, hv_lineY1, hv_lineX2, hv_lineY2, 
          hv_imageWidth, hv_imageHeight);

      ho_findLineRegions.Dispose();

      hv_imageWidth.Dispose();
      hv_imageHeight.Dispose();
      hv_EdgesX.Dispose();
      hv_EdgesY.Dispose();
      hv_i.Dispose();
      hv_Xs.Dispose();
      hv_Ys.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_findLineRegions.Dispose();

      hv_imageWidth.Dispose();
      hv_imageHeight.Dispose();
      hv_EdgesX.Dispose();
      hv_EdgesY.Dispose();
      hv_i.Dispose();
      hv_Xs.Dispose();
      hv_Ys.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void fit_line2D_rough (HTuple hv_Xs, HTuple hv_Ys, out HTuple hv_lineX1, 
      out HTuple hv_lineY1, out HTuple hv_lineX2, out HTuple hv_lineY2)
  {



      // Local iconic variables 

      // Local control variables 

      HTuple hv_DeviationX = new HTuple(), hv_DeviationY = new HTuple();
      HTuple hv_isVertical = new HTuple(), hv_SumX = new HTuple();
      HTuple hv_AverageX = new HTuple(), hv_SumY = new HTuple();
      HTuple hv_AverageY = new HTuple(), hv_SumUpper = new HTuple();
      HTuple hv_SumLower = new HTuple(), hv_i = new HTuple();
      HTuple hv_incrementUpper = new HTuple(), hv_incrementLower = new HTuple();
      HTuple hv_m = new HTuple(), hv_b = new HTuple();
      HTuple   hv_Xs_COPY_INP_TMP = new HTuple(hv_Xs);
      HTuple   hv_Ys_COPY_INP_TMP = new HTuple(hv_Ys);

      // Initialize local and output iconic variables 
      hv_lineX1 = new HTuple();
      hv_lineY1 = new HTuple();
      hv_lineX2 = new HTuple();
      hv_lineY2 = new HTuple();
      try
      {
      if ((int)(new HTuple((new HTuple(hv_Xs_COPY_INP_TMP.TupleLength())).TupleEqual(
          0))) != 0)
      {
        throw new HalconException("No points being passed in");
      }

      //determine if a line is vertical
      hv_DeviationX.Dispose();
      HOperatorSet.TupleDeviation(hv_Xs_COPY_INP_TMP, out hv_DeviationX);
      hv_DeviationY.Dispose();
      HOperatorSet.TupleDeviation(hv_Ys_COPY_INP_TMP, out hv_DeviationY);
      hv_isVertical.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_isVertical = new HTuple(hv_DeviationY.TupleGreater(
          hv_DeviationX));
      }
      if ((int)(hv_isVertical) != 0)
      {
        {
        HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;
        swap(hv_Xs_COPY_INP_TMP, hv_Ys_COPY_INP_TMP, out ExpTmpOutVar_0, out ExpTmpOutVar_1);
        hv_Xs_COPY_INP_TMP.Dispose();
        hv_Xs_COPY_INP_TMP = ExpTmpOutVar_0;
        hv_Ys_COPY_INP_TMP.Dispose();
        hv_Ys_COPY_INP_TMP = ExpTmpOutVar_1;
        }
      }



      hv_SumX.Dispose();
      HOperatorSet.TupleSum(hv_Xs_COPY_INP_TMP, out hv_SumX);
      hv_AverageX.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_AverageX = hv_SumX/(new HTuple(hv_Xs_COPY_INP_TMP.TupleLength()
          ));
      }

      hv_SumY.Dispose();
      HOperatorSet.TupleSum(hv_Ys_COPY_INP_TMP, out hv_SumY);
      hv_AverageY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_AverageY = hv_SumY/(new HTuple(hv_Ys_COPY_INP_TMP.TupleLength()
          ));
      }

      hv_SumUpper.Dispose();
      hv_SumUpper = 0;
      hv_SumLower.Dispose();
      hv_SumLower = 0;
      for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_Xs_COPY_INP_TMP.TupleLength()))-1); hv_i = (int)hv_i + 1)
      {
        hv_incrementUpper.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_incrementUpper = ((hv_Xs_COPY_INP_TMP.TupleSelect(
            hv_i))-hv_AverageX)*((hv_Ys_COPY_INP_TMP.TupleSelect(hv_i))-hv_AverageY);
        }
        hv_incrementLower.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_incrementLower = (hv_AverageX-(hv_Xs_COPY_INP_TMP.TupleSelect(
            hv_i)))*(hv_AverageX-(hv_Xs_COPY_INP_TMP.TupleSelect(hv_i)));
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_SumUpper = hv_SumUpper+hv_incrementUpper;
        hv_SumUpper.Dispose();
        hv_SumUpper = ExpTmpLocalVar_SumUpper;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_SumLower = hv_SumLower+hv_incrementLower;
        hv_SumLower.Dispose();
        hv_SumLower = ExpTmpLocalVar_SumLower;
        }
        }
      }

      hv_m.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_m = hv_SumUpper/hv_SumLower;
      }
      hv_b.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_b = hv_AverageY-(hv_m*hv_AverageX);
      }



      //sample two point
      hv_lineX1.Dispose();
      HOperatorSet.TupleMax(hv_Xs_COPY_INP_TMP, out hv_lineX1);
      hv_lineX2.Dispose();
      HOperatorSet.TupleMin(hv_Xs_COPY_INP_TMP, out hv_lineX2);

      hv_lineY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_lineY1 = (hv_m*hv_lineX1)+hv_b;
      }
      hv_lineY2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_lineY2 = (hv_m*hv_lineX2)+hv_b;
      }

      if ((int)(hv_isVertical) != 0)
      {
        {
        HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;
        swap(hv_lineX1, hv_lineY1, out ExpTmpOutVar_0, out ExpTmpOutVar_1);
        hv_lineX1.Dispose();
        hv_lineX1 = ExpTmpOutVar_0;
        hv_lineY1.Dispose();
        hv_lineY1 = ExpTmpOutVar_1;
        }
        {
        HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;
        swap(hv_lineX2, hv_lineY2, out ExpTmpOutVar_0, out ExpTmpOutVar_1);
        hv_lineX2.Dispose();
        hv_lineX2 = ExpTmpOutVar_0;
        hv_lineY2.Dispose();
        hv_lineY2 = ExpTmpOutVar_1;
        }
      }


      hv_Xs_COPY_INP_TMP.Dispose();
      hv_Ys_COPY_INP_TMP.Dispose();
      hv_DeviationX.Dispose();
      hv_DeviationY.Dispose();
      hv_isVertical.Dispose();
      hv_SumX.Dispose();
      hv_AverageX.Dispose();
      hv_SumY.Dispose();
      hv_AverageY.Dispose();
      hv_SumUpper.Dispose();
      hv_SumLower.Dispose();
      hv_i.Dispose();
      hv_incrementUpper.Dispose();
      hv_incrementLower.Dispose();
      hv_m.Dispose();
      hv_b.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_Xs_COPY_INP_TMP.Dispose();
      hv_Ys_COPY_INP_TMP.Dispose();
      hv_DeviationX.Dispose();
      hv_DeviationY.Dispose();
      hv_isVertical.Dispose();
      hv_SumX.Dispose();
      hv_AverageX.Dispose();
      hv_SumY.Dispose();
      hv_AverageY.Dispose();
      hv_SumUpper.Dispose();
      hv_SumLower.Dispose();
      hv_i.Dispose();
      hv_incrementUpper.Dispose();
      hv_incrementLower.Dispose();
      hv_m.Dispose();
      hv_b.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void FitLine2D (HTuple hv_Xs, HTuple hv_Ys, HTuple hv_ignorePortion, out HTuple hv_lineX1, 
      out HTuple hv_lineY1, out HTuple hv_lineX2, out HTuple hv_lineY2, out HTuple hv_XsUsed, 
      out HTuple hv_YsUsed, out HTuple hv_XsIgnored, out HTuple hv_YsIgnored)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_totalPoints = new HTuple(), hv_numPointsLeft = new HTuple();
    HTuple hv_fiterrors = new HTuple(), hv_i = new HTuple();
    HTuple hv_Distance = new HTuple(), hv_Indices = new HTuple();
    HTuple hv_ErrorBest = new HTuple(), hv_index = new HTuple();
    // Initialize local and output iconic variables 
    hv_lineX1 = new HTuple();
    hv_lineY1 = new HTuple();
    hv_lineX2 = new HTuple();
    hv_lineY2 = new HTuple();
    hv_XsUsed = new HTuple();
    hv_YsUsed = new HTuple();
    hv_XsIgnored = new HTuple();
    hv_YsIgnored = new HTuple();
    try
    {
      hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();
      fit_line2D_rough(hv_Xs, hv_Ys, out hv_lineX1, out hv_lineY1, out hv_lineX2, 
          out hv_lineY2);

      hv_totalPoints.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_totalPoints = new HTuple(hv_Xs.TupleLength()
          );
      }
      //number of points to ignore
      hv_numPointsLeft.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_numPointsLeft = (1.0-hv_ignorePortion)*(new HTuple(hv_Xs.TupleLength()
          ));
      }

      //calculate fitness of each point
      hv_fiterrors.Dispose();
      hv_fiterrors = new HTuple();
      for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_Xs.TupleLength()))-1); hv_i = (int)hv_i + 1)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_Distance.Dispose();
        HOperatorSet.DistancePl(hv_Ys.TupleSelect(hv_i), hv_Xs.TupleSelect(hv_i), 
            hv_lineY1, hv_lineX1, hv_lineY2, hv_lineX2, out hv_Distance);
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_fiterrors = hv_fiterrors.TupleConcat(
            hv_Distance);
        hv_fiterrors.Dispose();
        hv_fiterrors = ExpTmpLocalVar_fiterrors;
        }
        }
      }

      hv_Indices.Dispose();
      HOperatorSet.TupleSortIndex(hv_fiterrors, out hv_Indices);

      //select the best fits
      hv_XsUsed.Dispose();
      hv_XsUsed = new HTuple();
      hv_YsUsed.Dispose();
      hv_YsUsed = new HTuple();
      hv_XsIgnored.Dispose();
      hv_XsIgnored = new HTuple();
      hv_YsIgnored.Dispose();
      hv_YsIgnored = new HTuple();
      hv_ErrorBest.Dispose();
      hv_ErrorBest = new HTuple();
      HTuple end_val21 = hv_totalPoints-1;
      HTuple step_val21 = 1;
      for (hv_i=0; hv_i.Continue(end_val21, step_val21); hv_i = hv_i.TupleAdd(step_val21))
      {
        hv_index.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_index = hv_Indices.TupleSelect(
            hv_i);
        }
        if ((int)(new HTuple(hv_i.TupleLess(hv_numPointsLeft))) != 0)
        {
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_XsUsed = hv_XsUsed.TupleConcat(
              hv_Xs.TupleSelect(hv_index));
          hv_XsUsed.Dispose();
          hv_XsUsed = ExpTmpLocalVar_XsUsed;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_YsUsed = hv_YsUsed.TupleConcat(
              hv_Ys.TupleSelect(hv_index));
          hv_YsUsed.Dispose();
          hv_YsUsed = ExpTmpLocalVar_YsUsed;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_ErrorBest = hv_ErrorBest.TupleConcat(
              hv_fiterrors.TupleSelect(hv_index));
          hv_ErrorBest.Dispose();
          hv_ErrorBest = ExpTmpLocalVar_ErrorBest;
          }
          }
        }
        else
        {
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_XsIgnored = hv_XsIgnored.TupleConcat(
              hv_Xs.TupleSelect(hv_index));
          hv_XsIgnored.Dispose();
          hv_XsIgnored = ExpTmpLocalVar_XsIgnored;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_YsIgnored = hv_YsIgnored.TupleConcat(
              hv_Ys.TupleSelect(hv_index));
          hv_YsIgnored.Dispose();
          hv_YsIgnored = ExpTmpLocalVar_YsIgnored;
          }
          }
        }
      }

      //fit line again
      hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();
      fit_line2D_rough(hv_XsUsed, hv_YsUsed, out hv_lineX1, out hv_lineY1, out hv_lineX2, 
          out hv_lineY2);



      hv_totalPoints.Dispose();
      hv_numPointsLeft.Dispose();
      hv_fiterrors.Dispose();
      hv_i.Dispose();
      hv_Distance.Dispose();
      hv_Indices.Dispose();
      hv_ErrorBest.Dispose();
      hv_index.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_totalPoints.Dispose();
      hv_numPointsLeft.Dispose();
      hv_fiterrors.Dispose();
      hv_i.Dispose();
      hv_Distance.Dispose();
      hv_Indices.Dispose();
      hv_ErrorBest.Dispose();
      hv_index.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GenCalibrationMaps (HObject ho_Image, HTuple hv_CamParams, HTuple hv_CamPose, 
      out HTuple hv_MapToWorld, out HTuple hv_MapToImage)
  {




    // Local iconic variables 

    // Local control variables 

    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_halfWidth = new HTuple(), hv_halfHeight = new HTuple();
    HTuple hv_centerX = new HTuple(), hv_centerY = new HTuple();
    HTuple hv_imageXs = new HTuple(), hv_imageYs = new HTuple();
    HTuple hv_i = new HTuple(), hv_j = new HTuple(), hv_imageX = new HTuple();
    HTuple hv_imageY = new HTuple(), hv_worldXs = new HTuple();
    HTuple hv_worldYs = new HTuple();
    // Initialize local and output iconic variables 
    hv_MapToWorld = new HTuple();
    hv_MapToImage = new HTuple();
    try
    {
      hv_Width.Dispose();hv_Height.Dispose();
      HOperatorSet.GetImageSize(ho_Image, out hv_Width, out hv_Height);
      //
      hv_halfWidth.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_halfWidth = hv_Width/3.0;
      }
      hv_halfHeight.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_halfHeight = hv_Height/3.0;
      }
      //
      hv_centerX.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_centerX = hv_Width/2.0;
      }
      hv_centerY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_centerY = hv_Height/2.0;
      }
      //
      hv_imageXs.Dispose();
      hv_imageXs = new HTuple();
      hv_imageYs.Dispose();
      hv_imageYs = new HTuple();
      //
      //
      for (hv_i=-1; (int)hv_i<=1; hv_i = (int)hv_i + 1)
      {
        for (hv_j=-1; (int)hv_j<=1; hv_j = (int)hv_j + 1)
        {
          hv_imageX.Dispose();
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          hv_imageX = hv_centerX+(hv_j*hv_halfWidth);
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_imageXs = hv_imageXs.TupleConcat(
              hv_imageX);
          hv_imageXs.Dispose();
          hv_imageXs = ExpTmpLocalVar_imageXs;
          }
          }
          hv_imageY.Dispose();
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          hv_imageY = hv_centerY+(hv_i*hv_halfHeight);
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_imageYs = hv_imageYs.TupleConcat(
              hv_imageY);
          hv_imageYs.Dispose();
          hv_imageYs = ExpTmpLocalVar_imageYs;
          }
          }
        }
      }
      //
      hv_worldXs.Dispose();hv_worldYs.Dispose();
      HOperatorSet.ImagePointsToWorldPlane(hv_CamParams, hv_CamPose, hv_imageYs, 
          hv_imageXs, 0.001, out hv_worldXs, out hv_worldYs);
      //
      hv_MapToImage.Dispose();
      HOperatorSet.VectorToHomMat2d(hv_worldXs, hv_worldYs, hv_imageXs, hv_imageYs, 
          out hv_MapToImage);
      hv_MapToWorld.Dispose();
      HOperatorSet.VectorToHomMat2d(hv_imageXs, hv_imageYs, hv_worldXs, hv_worldYs, 
          out hv_MapToWorld);
      //

      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_halfWidth.Dispose();
      hv_halfHeight.Dispose();
      hv_centerX.Dispose();
      hv_centerY.Dispose();
      hv_imageXs.Dispose();
      hv_imageYs.Dispose();
      hv_i.Dispose();
      hv_j.Dispose();
      hv_imageX.Dispose();
      hv_imageY.Dispose();
      hv_worldXs.Dispose();
      hv_worldYs.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_halfWidth.Dispose();
      hv_halfHeight.Dispose();
      hv_centerX.Dispose();
      hv_centerY.Dispose();
      hv_imageXs.Dispose();
      hv_imageYs.Dispose();
      hv_i.Dispose();
      hv_j.Dispose();
      hv_imageX.Dispose();
      hv_imageY.Dispose();
      hv_worldXs.Dispose();
      hv_worldYs.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GenLineRegion (out HObject ho_lineRegion, HTuple hv_lineXStart, HTuple hv_lineYStart, 
      HTuple hv_lineXEnd, HTuple hv_lineYEnd, HTuple hv_imageWidth, HTuple hv_imageHeight)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xDiff = new HTuple(), hv_yDiff = new HTuple();
    HTuple hv_epslon = new HTuple(), hv_m = new HTuple(), hv_b = new HTuple();
    HTuple hv_xStart = new HTuple(), hv_yStart = new HTuple();
    HTuple hv_xEnd = new HTuple(), hv_yEnd = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    try
    {
      if ((int)(new HTuple((new HTuple(hv_lineXStart.TupleLength())).TupleEqual(0))) != 0)
      {
        throw new HalconException("No points passed in");
      }
      hv_xDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xDiff = hv_lineXEnd-hv_lineXStart;
      }
      hv_yDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_yDiff = hv_lineYEnd-hv_lineYStart;
      }

      hv_epslon.Dispose();
      hv_epslon = 0.0000000001;
      if ((int)(new HTuple(((hv_xDiff.TupleAbs())).TupleLess(hv_epslon))) != 0)
      {
        hv_xDiff.Dispose();
        hv_xDiff = new HTuple(hv_epslon);
      }

      hv_m.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_m = hv_yDiff/hv_xDiff;
      }
      hv_b.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_b = hv_lineYStart-(hv_m*hv_lineXStart);
      }

      hv_xStart.Dispose();hv_yStart.Dispose();hv_xEnd.Dispose();hv_yEnd.Dispose();
      ImageLineIntersections(hv_m, hv_b, hv_imageWidth, hv_imageHeight, out hv_xStart, 
          out hv_yStart, out hv_xEnd, out hv_yEnd);

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_lineRegion.Dispose();
      HOperatorSet.GenContourPolygonXld(out ho_lineRegion, hv_yStart.TupleConcat(
          hv_yEnd), hv_xStart.TupleConcat(hv_xEnd));
      }

      hv_xDiff.Dispose();
      hv_yDiff.Dispose();
      hv_epslon.Dispose();
      hv_m.Dispose();
      hv_b.Dispose();
      hv_xStart.Dispose();
      hv_yStart.Dispose();
      hv_xEnd.Dispose();
      hv_yEnd.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_xDiff.Dispose();
      hv_yDiff.Dispose();
      hv_epslon.Dispose();
      hv_m.Dispose();
      hv_b.Dispose();
      hv_xStart.Dispose();
      hv_yStart.Dispose();
      hv_xEnd.Dispose();
      hv_yEnd.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GenVisibleMeasureRect (out HObject ho_ROI_0, HTuple hv_rect1_row, HTuple hv_rect1_col, 
      HTuple hv_rect1_rad, HTuple hv_rect1_len1, HTuple hv_rect1_len2, HTuple hv_Width, 
      HTuple hv_Height, out HTuple hv_MeasureHandle)
  {


    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    hv_MeasureHandle = new HTuple();
    ho_ROI_0.Dispose();
    HOperatorSet.GenRectangle2(out ho_ROI_0, hv_rect1_row, hv_rect1_col, hv_rect1_rad, 
        hv_rect1_len1, hv_rect1_len2);
    hv_MeasureHandle.Dispose();
    HOperatorSet.GenMeasureRectangle2(hv_rect1_row, hv_rect1_col, hv_rect1_rad, hv_rect1_len1, 
        hv_rect1_len2, hv_Width, hv_Height, "nearest_neighbor", out hv_MeasureHandle);


    return;
  }

  public void get_perpendicular_direction (HTuple hv_inputVectorX, HTuple hv_inputVectorY, 
      out HTuple hv_outputVectorX, out HTuple hv_outputVectorY)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xAssume = new HTuple(), hv_yAssume = new HTuple();
    HTuple hv_distAssume = new HTuple();
    // Initialize local and output iconic variables 
    hv_outputVectorX = new HTuple();
    hv_outputVectorY = new HTuple();
    try
    {
      //Should be deprecated

      //assume that a perticular vector perpendiclar to me is (xAssume, yAssume), let xAssume = 1
      hv_xAssume.Dispose();
      hv_xAssume = 1;
      hv_yAssume.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_yAssume = -(hv_inputVectorX/hv_inputVectorY);
      }
      hv_distAssume.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_distAssume = (((hv_yAssume*hv_yAssume)+(hv_xAssume*hv_xAssume))).TupleSqrt()
          ;
      }

      //calculate unit length direction vector
      hv_outputVectorX.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_outputVectorX = hv_xAssume/hv_distAssume;
      }
      hv_outputVectorY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_outputVectorY = hv_yAssume/hv_distAssume;
      }


      hv_xAssume.Dispose();
      hv_yAssume.Dispose();
      hv_distAssume.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_xAssume.Dispose();
      hv_yAssume.Dispose();
      hv_distAssume.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void get_perpendicular_line_that_passes (HTuple hv_lineXStart, HTuple hv_lineYStart, 
      HTuple hv_lineXEnd, HTuple hv_lineYEnd, HTuple hv_xPass, HTuple hv_yPass, out HTuple hv_lineXPerpendicular, 
      out HTuple hv_lineYPerpendicular)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xUnit = new HTuple(), hv_yUnit = new HTuple();
    HTuple hv_outputVectorX = new HTuple(), hv_outputVectorY = new HTuple();
    // Initialize local and output iconic variables 
    hv_lineXPerpendicular = new HTuple();
    hv_lineYPerpendicular = new HTuple();
    try
    {
      hv_xUnit.Dispose();hv_yUnit.Dispose();
      GetLineUnitVector(hv_lineXStart, hv_lineYStart, hv_lineXEnd, hv_lineYEnd, out hv_xUnit, 
          out hv_yUnit);
      hv_outputVectorX.Dispose();hv_outputVectorY.Dispose();
      get_perpendicular_direction(hv_xUnit, hv_yUnit, out hv_outputVectorX, out hv_outputVectorY);

      //another point on the perpendicular line can be determined by
      //adding perpendicular unit vector to the first point that we passed
      hv_lineXPerpendicular.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_lineXPerpendicular = hv_xPass+hv_outputVectorX;
      }
      hv_lineYPerpendicular.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_lineYPerpendicular = hv_yPass+hv_outputVectorY;
      }


      hv_xUnit.Dispose();
      hv_yUnit.Dispose();
      hv_outputVectorX.Dispose();
      hv_outputVectorY.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_xUnit.Dispose();
      hv_yUnit.Dispose();
      hv_outputVectorX.Dispose();
      hv_outputVectorY.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetChangeOfBase (HTuple hv_xStartXAxis, HTuple hv_yStartXAxis, HTuple hv_xEndXAxis, 
      HTuple hv_yEndXAxis, HTuple hv_xStartYAxis, HTuple hv_yStartYAxis, HTuple hv_xEndYAxis, 
      HTuple hv_yEndYAxis, out HTuple hv_ChangeOfBase, out HTuple hv_ChangeOfBaseInv, 
      out HTuple hv_RotationMat, out HTuple hv_RotationMatInv)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xUnitXAxis = new HTuple(), hv_yUnitXAxis = new HTuple();
    HTuple hv_xUnitYAxis = new HTuple(), hv_yUnitYAxis = new HTuple();
    HTuple hv_YNewOrg = new HTuple(), hv_XNewOrg = new HTuple();
    HTuple hv_IsOverlapping = new HTuple(), hv_MatrixID = new HTuple();
    HTuple hv_MatrixIDRotation = new HTuple(), hv_MatrixInvID = new HTuple();
    HTuple hv_MatrixIDRotationInv = new HTuple();
    // Initialize local and output iconic variables 
    hv_ChangeOfBase = new HTuple();
    hv_ChangeOfBaseInv = new HTuple();
    hv_RotationMat = new HTuple();
    hv_RotationMatInv = new HTuple();
    try
    {

      hv_xUnitXAxis.Dispose();hv_yUnitXAxis.Dispose();
      GetLineUnitVector(hv_xStartXAxis, hv_yStartXAxis, hv_xEndXAxis, hv_yEndXAxis, 
          out hv_xUnitXAxis, out hv_yUnitXAxis);
      hv_xUnitYAxis.Dispose();hv_yUnitYAxis.Dispose();
      GetLineUnitVector(hv_xStartYAxis, hv_yStartYAxis, hv_xEndYAxis, hv_yEndYAxis, 
          out hv_xUnitYAxis, out hv_yUnitYAxis);

      hv_YNewOrg.Dispose();hv_XNewOrg.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_yStartXAxis, hv_xStartXAxis, hv_yEndXAxis, 
          hv_xEndXAxis, hv_yStartYAxis, hv_xStartYAxis, hv_yEndYAxis, hv_xEndYAxis, 
          out hv_YNewOrg, out hv_XNewOrg, out hv_IsOverlapping);

      hv_ChangeOfBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ChangeOfBase = new HTuple();
      hv_ChangeOfBase = hv_ChangeOfBase.TupleConcat(hv_xUnitXAxis, hv_xUnitYAxis, hv_XNewOrg, hv_yUnitXAxis, hv_yUnitYAxis, hv_YNewOrg);
      hv_ChangeOfBase = hv_ChangeOfBase.TupleConcat(new HTuple(0, 0, 1));
      }
      hv_RotationMat.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RotationMat = new HTuple();
      hv_RotationMat = hv_RotationMat.TupleConcat(hv_xUnitXAxis, hv_xUnitYAxis);
      hv_RotationMat = hv_RotationMat.TupleConcat(0);
      hv_RotationMat = hv_RotationMat.TupleConcat(hv_yUnitXAxis, hv_yUnitYAxis);
      hv_RotationMat = hv_RotationMat.TupleConcat(new HTuple(0, 0, 0, 1));
      }

      hv_MatrixID.Dispose();
      HOperatorSet.CreateMatrix(3, 3, hv_ChangeOfBase, out hv_MatrixID);
      hv_MatrixIDRotation.Dispose();
      HOperatorSet.CreateMatrix(3, 3, hv_RotationMat, out hv_MatrixIDRotation);

      hv_MatrixInvID.Dispose();
      HOperatorSet.InvertMatrix(hv_MatrixID, "general", 0, out hv_MatrixInvID);
      hv_MatrixIDRotationInv.Dispose();
      HOperatorSet.InvertMatrix(hv_MatrixIDRotation, "general", 0, out hv_MatrixIDRotationInv);

      hv_ChangeOfBaseInv.Dispose();
      HOperatorSet.GetFullMatrix(hv_MatrixInvID, out hv_ChangeOfBaseInv);
      hv_RotationMatInv.Dispose();
      HOperatorSet.GetFullMatrix(hv_MatrixIDRotationInv, out hv_RotationMatInv);

      hv_xUnitXAxis.Dispose();
      hv_yUnitXAxis.Dispose();
      hv_xUnitYAxis.Dispose();
      hv_yUnitYAxis.Dispose();
      hv_YNewOrg.Dispose();
      hv_XNewOrg.Dispose();
      hv_IsOverlapping.Dispose();
      hv_MatrixID.Dispose();
      hv_MatrixIDRotation.Dispose();
      hv_MatrixInvID.Dispose();
      hv_MatrixIDRotationInv.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_xUnitXAxis.Dispose();
      hv_yUnitXAxis.Dispose();
      hv_xUnitYAxis.Dispose();
      hv_yUnitYAxis.Dispose();
      hv_YNewOrg.Dispose();
      hv_XNewOrg.Dispose();
      hv_IsOverlapping.Dispose();
      hv_MatrixID.Dispose();
      hv_MatrixIDRotation.Dispose();
      hv_MatrixInvID.Dispose();
      hv_MatrixIDRotationInv.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetContoursPoints (HObject ho_Contours, out HTuple hv_Xs, out HTuple hv_Ys)
  {



    // Local iconic variables 

    HObject ho_Contour=null;

    // Local control variables 

    HTuple hv_Number = new HTuple(), hv_i = new HTuple();
    HTuple hv_Row = new HTuple(), hv_Col = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Contour);
    hv_Xs = new HTuple();
    hv_Ys = new HTuple();
    try
    {
      hv_Number.Dispose();
      HOperatorSet.CountObj(ho_Contours, out hv_Number);

      hv_Xs.Dispose();
      hv_Xs = new HTuple();
      hv_Ys.Dispose();
      hv_Ys = new HTuple();

      HTuple end_val5 = hv_Number;
      HTuple step_val5 = 1;
      for (hv_i=1; hv_i.Continue(end_val5, step_val5); hv_i = hv_i.TupleAdd(step_val5))
      {
        ho_Contour.Dispose();
        HOperatorSet.SelectObj(ho_Contours, out ho_Contour, hv_i);
        hv_Row.Dispose();hv_Col.Dispose();
        HOperatorSet.GetContourXld(ho_Contour, out hv_Row, out hv_Col);
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_Xs = hv_Xs.TupleConcat(
            hv_Col);
        hv_Xs.Dispose();
        hv_Xs = ExpTmpLocalVar_Xs;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_Ys = hv_Ys.TupleConcat(
            hv_Row);
        hv_Ys.Dispose();
        hv_Ys = ExpTmpLocalVar_Ys;
        }
        }
      }


      ho_Contour.Dispose();

      hv_Number.Dispose();
      hv_i.Dispose();
      hv_Row.Dispose();
      hv_Col.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Contour.Dispose();

      hv_Number.Dispose();
      hv_i.Dispose();
      hv_Row.Dispose();
      hv_Col.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetDistancesToDistributionCenter (HTuple hv_Xs, HTuple hv_Ys, out HTuple hv_distances)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xMean = new HTuple(), hv_yMean = new HTuple();
    HTuple hv_i = new HTuple(), hv_Distance = new HTuple();
    // Initialize local and output iconic variables 
    hv_distances = new HTuple();
    try
    {
      hv_xMean.Dispose();
      HOperatorSet.TupleMean(hv_Xs, out hv_xMean);
      hv_yMean.Dispose();
      HOperatorSet.TupleMean(hv_Ys, out hv_yMean);

      hv_distances.Dispose();
      hv_distances = new HTuple();

      for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_Xs.TupleLength()))-1); hv_i = (int)hv_i + 1)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_Distance.Dispose();
        HOperatorSet.DistancePp(hv_yMean, hv_xMean, hv_Ys.TupleSelect(hv_i), hv_Xs.TupleSelect(
            hv_i), out hv_Distance);
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_distances = hv_distances.TupleConcat(
            hv_Distance);
        hv_distances.Dispose();
        hv_distances = ExpTmpLocalVar_distances;
        }
        }
      }



      hv_xMean.Dispose();
      hv_yMean.Dispose();
      hv_i.Dispose();
      hv_Distance.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_xMean.Dispose();
      hv_yMean.Dispose();
      hv_i.Dispose();
      hv_Distance.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetEdgesInSubRect2 (HObject ho_inputImage, out HObject ho_findLineRegion, 
      out HObject ho_Edges, HTuple hv_lineX1, HTuple hv_lineY1, HTuple hv_lineX2, 
      HTuple hv_lineY2, HTuple hv_radian, HTuple hv_newWidth, HTuple hv_sigma, HTuple hv_cannyLow, 
      HTuple hv_cannyHigh, HTuple hv_kernelWidth, HTuple hv_longestOnly)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_ImageReduced=null;

    // Local control variables 

    HTuple hv_lineCenterX = new HTuple(), hv_lineCenterY = new HTuple();
    HTuple hv_Phi = new HTuple(), hv_xDirOld = new HTuple();
    HTuple hv_yDirOld = new HTuple(), hv_xDirNew = new HTuple();
    HTuple hv_yDirNew = new HTuple(), hv_newRadian = new HTuple();
    HTuple hv_newHeight = new HTuple(), hv_contourLength = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_findLineRegion);
    HOperatorSet.GenEmptyObj(out ho_Edges);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    try
    {
      hv_lineCenterX.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_lineCenterX = (hv_lineX1+hv_lineX2)/2.0;
      }
      hv_lineCenterY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_lineCenterY = (hv_lineY1+hv_lineY2)/2.0;
      }
      hv_Phi.Dispose();
      HOperatorSet.LineOrientation(hv_lineY1, hv_lineX1, hv_lineY2, hv_lineX2, out hv_Phi);
      hv_xDirOld.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xDirOld = hv_radian.TupleCos()
          ;
      }
      hv_yDirOld.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_yDirOld = hv_radian.TupleSin()
          ;
      }

      hv_xDirNew.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xDirNew = ((hv_Phi+((new HTuple(90)).TupleRad()
          ))).TupleCos();
      }
      hv_yDirNew.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_yDirNew = ((hv_Phi+((new HTuple(90)).TupleRad()
          ))).TupleSin();
      }

      if ((int)(new HTuple((((hv_xDirOld*hv_xDirNew)+(hv_yDirOld*hv_yDirNew))).TupleLess(
          0))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_yDirNew = -hv_yDirNew;
        hv_yDirNew.Dispose();
        hv_yDirNew = ExpTmpLocalVar_yDirNew;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_xDirNew = -hv_xDirNew;
        hv_xDirNew.Dispose();
        hv_xDirNew = ExpTmpLocalVar_xDirNew;
        }
        }
      }

      hv_newRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_newRadian = hv_yDirNew.TupleAtan2(
          hv_xDirNew);
      }

      hv_newHeight.Dispose();
      HOperatorSet.DistancePp(hv_lineY1, hv_lineX1, hv_lineY2, hv_lineX2, out hv_newHeight);

      if ((int)(new HTuple(hv_kernelWidth.TupleGreater(0))) != 0)
      {

        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        ho_Edges.Dispose();
        MeanImageIAndFineEdges(ho_inputImage, out ho_Edges, hv_lineCenterY, hv_lineCenterX, 
            hv_newRadian, hv_newWidth, hv_newHeight/2, hv_cannyHigh, hv_cannyLow, 
            hv_sigma, hv_kernelWidth);
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        ho_findLineRegion.Dispose();
        HOperatorSet.GenRectangle2(out ho_findLineRegion, hv_lineCenterY, hv_lineCenterX, 
            hv_newRadian, hv_newWidth, hv_newHeight/2);
        }

      }
      else
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        ho_findLineRegion.Dispose();
        HOperatorSet.GenRectangle2(out ho_findLineRegion, hv_lineCenterY, hv_lineCenterX, 
            hv_newRadian, hv_newWidth, hv_newHeight/2);
        }
        ho_ImageReduced.Dispose();
        HOperatorSet.ReduceDomain(ho_inputImage, ho_findLineRegion, out ho_ImageReduced
            );
        ho_Edges.Dispose();
        HOperatorSet.EdgesSubPix(ho_ImageReduced, out ho_Edges, "canny", hv_sigma, 
            hv_cannyLow, hv_cannyHigh);

      }

      if ((int)(new HTuple(hv_longestOnly.TupleEqual("true"))) != 0)
      {
        {
        HObject ExpTmpOutVar_0;hv_contourLength.Dispose();
        LongestXLD(ho_Edges, out ExpTmpOutVar_0, out hv_contourLength);
        ho_Edges.Dispose();
        ho_Edges = ExpTmpOutVar_0;
        }
      }

      ho_ImageReduced.Dispose();

      hv_lineCenterX.Dispose();
      hv_lineCenterY.Dispose();
      hv_Phi.Dispose();
      hv_xDirOld.Dispose();
      hv_yDirOld.Dispose();
      hv_xDirNew.Dispose();
      hv_yDirNew.Dispose();
      hv_newRadian.Dispose();
      hv_newHeight.Dispose();
      hv_contourLength.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_ImageReduced.Dispose();

      hv_lineCenterX.Dispose();
      hv_lineCenterY.Dispose();
      hv_Phi.Dispose();
      hv_xDirOld.Dispose();
      hv_yDirOld.Dispose();
      hv_xDirNew.Dispose();
      hv_yDirNew.Dispose();
      hv_newRadian.Dispose();
      hv_newHeight.Dispose();
      hv_contourLength.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetFindLineParams (HTuple hv_Key, HTuple hv_FAINames, HTuple hv_Thresholds, 
      HTuple hv_IgnorePortions, HTuple hv_Sigma1s, HTuple hv_Sigma2s, HTuple hv_NewWidths, 
      HTuple hv_CannyLows, HTuple hv_CannyHighs, out HTuple hv_threshValue, out HTuple hv_ignorePortion, 
      out HTuple hv_sigma1, out HTuple hv_sigma2, out HTuple hv_newWidth, out HTuple hv_cannyLow, 
      out HTuple hv_cannyHigh)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_numFai = new HTuple(), hv_selectedIndex = new HTuple();
    HTuple hv_i = new HTuple();
    // Initialize local and output iconic variables 
    hv_threshValue = new HTuple();
    hv_ignorePortion = new HTuple();
    hv_sigma1 = new HTuple();
    hv_sigma2 = new HTuple();
    hv_newWidth = new HTuple();
    hv_cannyLow = new HTuple();
    hv_cannyHigh = new HTuple();
    try
    {
      hv_numFai.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_numFai = new HTuple(hv_FAINames.TupleLength()
          );
      }

      hv_selectedIndex.Dispose();
      hv_selectedIndex = -1;
      HTuple end_val3 = hv_numFai-1;
      HTuple step_val3 = 1;
      for (hv_i=0; hv_i.Continue(end_val3, step_val3); hv_i = hv_i.TupleAdd(step_val3))
      {
        if ((int)(new HTuple(((hv_FAINames.TupleSelect(hv_i))).TupleEqual(hv_Key))) != 0)
        {
          hv_selectedIndex.Dispose();
          hv_selectedIndex = new HTuple(hv_i);
        }
      }

      if ((int)(new HTuple(hv_selectedIndex.TupleEqual(-1))) != 0)
      {
        throw new HalconException("Can not find params for this FAI:"+hv_Key);
      }

      hv_threshValue.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_threshValue = hv_Thresholds.TupleSelect(
          hv_selectedIndex);
      }
      hv_ignorePortion.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ignorePortion = hv_IgnorePortions.TupleSelect(
          hv_selectedIndex);
      }
      hv_sigma1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_sigma1 = hv_Sigma1s.TupleSelect(
          hv_selectedIndex);
      }
      hv_sigma2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_sigma2 = hv_Sigma2s.TupleSelect(
          hv_selectedIndex);
      }
      hv_newWidth.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_newWidth = hv_NewWidths.TupleSelect(
          hv_selectedIndex);
      }
      hv_cannyLow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_cannyLow = hv_CannyLows.TupleSelect(
          hv_selectedIndex);
      }
      hv_cannyHigh.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_cannyHigh = hv_CannyHighs.TupleSelect(
          hv_selectedIndex);
      }


      hv_numFai.Dispose();
      hv_selectedIndex.Dispose();
      hv_i.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_numFai.Dispose();
      hv_selectedIndex.Dispose();
      hv_i.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetI94BottomViewBaseRects (HObject ho_Image, out HObject ho_ImageUndistorted, 
      HTuple hv_ModelHandle, out HTuple hv_baseTopRow, out HTuple hv_baseTopCol, out HTuple hv_baseTopRadian, 
      out HTuple hv_baseTopLen1, out HTuple hv_baseTopLen2, out HTuple hv_baseLeftRow, 
      out HTuple hv_baseLeftCol, out HTuple hv_baseLeftRadian, out HTuple hv_baseLeftLen1, 
      out HTuple hv_baseLeftLen2, out HTuple hv_MapToWorld, out HTuple hv_MapToImage, 
      out HTuple hv_CameraParameters)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    // Local copy input parameter variables 
    HObject ho_Image_COPY_INP_TMP;
    ho_Image_COPY_INP_TMP = new HObject(ho_Image);



    // Local control variables 

    HTuple hv_CameraPose = new HTuple(), hv_OutCameraParams = new HTuple();
    HTuple hv_modelRow = new HTuple(), hv_modelCol = new HTuple();
    HTuple hv_Row = new HTuple(), hv_Column = new HTuple();
    HTuple hv_Angle = new HTuple(), hv_Score = new HTuple();
    HTuple hv_MovementOfItem = new HTuple(), hv_sigma2 = new HTuple();
    HTuple hv_row1TopBase = new HTuple(), hv_col1TopBase = new HTuple();
    HTuple hv_radianTopBase = new HTuple(), hv_len1TopBase = new HTuple();
    HTuple hv_len2TopBase = new HTuple(), hv_row1TopBase1 = new HTuple();
    HTuple hv_col1TopBase1 = new HTuple(), hv_radianTopBase1 = new HTuple();
    HTuple hv_len1TopBase1 = new HTuple(), hv_len2TopBase1 = new HTuple();
    HTuple hv_row1TopBase2 = new HTuple(), hv_col1TopBase2 = new HTuple();
    HTuple hv_radianTopBase2 = new HTuple(), hv_len1TopBase2 = new HTuple();
    HTuple hv_len2TopBase2 = new HTuple(), hv_row1LeftBase = new HTuple();
    HTuple hv_col1LeftBase = new HTuple(), hv_radianLeftBase = new HTuple();
    HTuple hv_len1LeftBase = new HTuple(), hv_len2LeftBase = new HTuple();
    HTuple hv_row1LeftBase1 = new HTuple(), hv_col1LeftBase1 = new HTuple();
    HTuple hv_radianLeftBase1 = new HTuple(), hv_len1LeftBase1 = new HTuple();
    HTuple hv_len2LeftBase1 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ImageUndistorted);
    hv_baseTopRow = new HTuple();
    hv_baseTopCol = new HTuple();
    hv_baseTopRadian = new HTuple();
    hv_baseTopLen1 = new HTuple();
    hv_baseTopLen2 = new HTuple();
    hv_baseLeftRow = new HTuple();
    hv_baseLeftCol = new HTuple();
    hv_baseLeftRadian = new HTuple();
    hv_baseLeftLen1 = new HTuple();
    hv_baseLeftLen2 = new HTuple();
    hv_MapToWorld = new HTuple();
    hv_MapToImage = new HTuple();
    hv_CameraParameters = new HTuple();
    try
    {
      hv_CameraParameters.Dispose();
      hv_CameraParameters = new HTuple();
      hv_CameraParameters[0] = "area_scan_telecentric_division";
      hv_CameraParameters[1] = 0.579268;
      hv_CameraParameters[2] = -3.64444;
      hv_CameraParameters[3] = 4.49772e-006;
      hv_CameraParameters[4] = 4.5e-006;
      hv_CameraParameters[5] = 2440.35;
      hv_CameraParameters[6] = 3083.74;
      hv_CameraParameters[7] = 5120;
      hv_CameraParameters[8] = 5120;
      hv_CameraPose.Dispose();
      hv_CameraPose = new HTuple();
      hv_CameraPose[0] = 0.000303946;
      hv_CameraPose[1] = -0.0050309;
      hv_CameraPose[2] = 0.000999219;
      hv_CameraPose[3] = 0.0906952;
      hv_CameraPose[4] = 357.737;
      hv_CameraPose[5] = 89.8488;
      hv_CameraPose[6] = 0;

      {
      HObject ExpTmpOutVar_0;hv_OutCameraParams.Dispose();
      UndistortImage(ho_Image_COPY_INP_TMP, out ExpTmpOutVar_0, hv_CameraParameters, 
          out hv_OutCameraParams);
      ho_Image_COPY_INP_TMP.Dispose();
      ho_Image_COPY_INP_TMP = ExpTmpOutVar_0;
      }
      ho_ImageUndistorted.Dispose();
      ho_ImageUndistorted = new HObject(ho_Image_COPY_INP_TMP);
      hv_MapToWorld.Dispose();hv_MapToImage.Dispose();
      GenCalibrationMaps(ho_Image_COPY_INP_TMP, hv_OutCameraParams, hv_CameraPose, 
          out hv_MapToWorld, out hv_MapToImage);


      hv_modelRow.Dispose();
      hv_modelRow = 1166.78;
      hv_modelCol.Dispose();
      hv_modelCol = 2205;

      hv_Row.Dispose();hv_Column.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
      HOperatorSet.FindShapeModel(ho_Image_COPY_INP_TMP, hv_ModelHandle, -0.39, 0.79, 
          0.2, 1, 0.5, "least_squares", 0, 0.9, out hv_Row, out hv_Column, out hv_Angle, 
          out hv_Score);
      hv_MovementOfItem.Dispose();
      HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Row, hv_Column, hv_Angle, out hv_MovementOfItem);

      hv_sigma2.Dispose();
      hv_sigma2 = 5;

      //Find top base line
      hv_row1TopBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1TopBase = 137.0-hv_modelRow;
      }
      hv_col1TopBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1TopBase = 2217.0-hv_modelCol;
      }
      hv_radianTopBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianTopBase = (new HTuple(-91.0)).TupleRad()
          ;
      }
      hv_len1TopBase.Dispose();
      hv_len1TopBase = 187.0;
      hv_len2TopBase.Dispose();
      hv_len2TopBase = 107.0;

      hv_row1TopBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1TopBase1 = 137.0-hv_modelRow;
      }
      hv_col1TopBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1TopBase1 = 1628.0-hv_modelCol;
      }
      hv_radianTopBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianTopBase1 = (new HTuple(-91.0)).TupleRad()
          ;
      }
      hv_len1TopBase1.Dispose();
      hv_len1TopBase1 = 187.0;
      hv_len2TopBase1.Dispose();
      hv_len2TopBase1 = 107.0;

      hv_row1TopBase2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1TopBase2 = 137.0-hv_modelRow;
      }
      hv_col1TopBase2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1TopBase2 = 2876.0-hv_modelCol;
      }
      hv_radianTopBase2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianTopBase2 = (new HTuple(-91.0)).TupleRad()
          ;
      }
      hv_len1TopBase2.Dispose();
      hv_len1TopBase2 = 187.0;
      hv_len2TopBase2.Dispose();
      hv_len2TopBase2 = 160.0;

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_row1TopBase = ((hv_row1TopBase.TupleConcat(
          hv_row1TopBase1))).TupleConcat(hv_row1TopBase2);
      hv_row1TopBase.Dispose();
      hv_row1TopBase = ExpTmpLocalVar_row1TopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_col1TopBase = ((hv_col1TopBase.TupleConcat(
          hv_col1TopBase1))).TupleConcat(hv_col1TopBase2);
      hv_col1TopBase.Dispose();
      hv_col1TopBase = ExpTmpLocalVar_col1TopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_radianTopBase = ((hv_radianTopBase.TupleConcat(
          hv_radianTopBase1))).TupleConcat(hv_radianTopBase2);
      hv_radianTopBase.Dispose();
      hv_radianTopBase = ExpTmpLocalVar_radianTopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len1TopBase = ((hv_len1TopBase.TupleConcat(
          hv_len1TopBase1))).TupleConcat(hv_len1TopBase2);
      hv_len1TopBase.Dispose();
      hv_len1TopBase = ExpTmpLocalVar_len1TopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len2TopBase = ((hv_len2TopBase.TupleConcat(
          hv_len2TopBase1))).TupleConcat(hv_len2TopBase2);
      hv_len2TopBase.Dispose();
      hv_len2TopBase = ExpTmpLocalVar_len2TopBase;
      }
      }

      hv_baseTopRow.Dispose();hv_baseTopCol.Dispose();hv_baseTopRadian.Dispose();hv_baseTopLen1.Dispose();hv_baseTopLen2.Dispose();
      AffineTransRect2(hv_row1TopBase, hv_col1TopBase, hv_radianTopBase, hv_len1TopBase, 
          hv_len2TopBase, hv_MovementOfItem, out hv_baseTopRow, out hv_baseTopCol, 
          out hv_baseTopRadian, out hv_baseTopLen1, out hv_baseTopLen2);




      //Find left base line
      hv_row1LeftBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1LeftBase = 2607.0-hv_modelRow;
      }
      hv_col1LeftBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1LeftBase = 995.0-hv_modelCol;
      }
      hv_radianLeftBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianLeftBase = (new HTuple(-1.0)).TupleRad()
          ;
      }
      hv_len1LeftBase.Dispose();
      hv_len1LeftBase = 150.0;
      hv_len2LeftBase.Dispose();
      hv_len2LeftBase = 281.0;

      hv_row1LeftBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1LeftBase1 = 4216.0-hv_modelRow;
      }
      hv_col1LeftBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1LeftBase1 = 995.0-hv_modelCol;
      }
      hv_radianLeftBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianLeftBase1 = (new HTuple(-1.0)).TupleRad()
          ;
      }
      hv_len1LeftBase1.Dispose();
      hv_len1LeftBase1 = 150.0;
      hv_len2LeftBase1.Dispose();
      hv_len2LeftBase1 = 281.0;

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_row1LeftBase = hv_row1LeftBase.TupleConcat(
          hv_row1LeftBase1);
      hv_row1LeftBase.Dispose();
      hv_row1LeftBase = ExpTmpLocalVar_row1LeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_col1LeftBase = hv_col1LeftBase.TupleConcat(
          hv_col1LeftBase1);
      hv_col1LeftBase.Dispose();
      hv_col1LeftBase = ExpTmpLocalVar_col1LeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_radianLeftBase = hv_radianLeftBase.TupleConcat(
          hv_radianLeftBase1);
      hv_radianLeftBase.Dispose();
      hv_radianLeftBase = ExpTmpLocalVar_radianLeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len1LeftBase = hv_len1LeftBase.TupleConcat(
          hv_len1LeftBase1);
      hv_len1LeftBase.Dispose();
      hv_len1LeftBase = ExpTmpLocalVar_len1LeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len2LeftBase = hv_len2LeftBase.TupleConcat(
          hv_len2LeftBase1);
      hv_len2LeftBase.Dispose();
      hv_len2LeftBase = ExpTmpLocalVar_len2LeftBase;
      }
      }


      hv_baseLeftRow.Dispose();hv_baseLeftCol.Dispose();hv_baseLeftRadian.Dispose();hv_baseLeftLen1.Dispose();hv_baseLeftLen2.Dispose();
      AffineTransRect2(hv_row1LeftBase, hv_col1LeftBase, hv_radianLeftBase, hv_len1LeftBase, 
          hv_len2LeftBase, hv_MovementOfItem, out hv_baseLeftRow, out hv_baseLeftCol, 
          out hv_baseLeftRadian, out hv_baseLeftLen1, out hv_baseLeftLen2);

      ho_Image_COPY_INP_TMP.Dispose();

      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_modelRow.Dispose();
      hv_modelCol.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementOfItem.Dispose();
      hv_sigma2.Dispose();
      hv_row1TopBase.Dispose();
      hv_col1TopBase.Dispose();
      hv_radianTopBase.Dispose();
      hv_len1TopBase.Dispose();
      hv_len2TopBase.Dispose();
      hv_row1TopBase1.Dispose();
      hv_col1TopBase1.Dispose();
      hv_radianTopBase1.Dispose();
      hv_len1TopBase1.Dispose();
      hv_len2TopBase1.Dispose();
      hv_row1TopBase2.Dispose();
      hv_col1TopBase2.Dispose();
      hv_radianTopBase2.Dispose();
      hv_len1TopBase2.Dispose();
      hv_len2TopBase2.Dispose();
      hv_row1LeftBase.Dispose();
      hv_col1LeftBase.Dispose();
      hv_radianLeftBase.Dispose();
      hv_len1LeftBase.Dispose();
      hv_len2LeftBase.Dispose();
      hv_row1LeftBase1.Dispose();
      hv_col1LeftBase1.Dispose();
      hv_radianLeftBase1.Dispose();
      hv_len1LeftBase1.Dispose();
      hv_len2LeftBase1.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Image_COPY_INP_TMP.Dispose();

      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_modelRow.Dispose();
      hv_modelCol.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementOfItem.Dispose();
      hv_sigma2.Dispose();
      hv_row1TopBase.Dispose();
      hv_col1TopBase.Dispose();
      hv_radianTopBase.Dispose();
      hv_len1TopBase.Dispose();
      hv_len2TopBase.Dispose();
      hv_row1TopBase1.Dispose();
      hv_col1TopBase1.Dispose();
      hv_radianTopBase1.Dispose();
      hv_len1TopBase1.Dispose();
      hv_len2TopBase1.Dispose();
      hv_row1TopBase2.Dispose();
      hv_col1TopBase2.Dispose();
      hv_radianTopBase2.Dispose();
      hv_len1TopBase2.Dispose();
      hv_len2TopBase2.Dispose();
      hv_row1LeftBase.Dispose();
      hv_col1LeftBase.Dispose();
      hv_radianLeftBase.Dispose();
      hv_len1LeftBase.Dispose();
      hv_len2LeftBase.Dispose();
      hv_row1LeftBase1.Dispose();
      hv_col1LeftBase1.Dispose();
      hv_radianLeftBase1.Dispose();
      hv_len1LeftBase1.Dispose();
      hv_len2LeftBase1.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetI94BottomViewBaseRectsNoRectify (HObject ho_Image, HTuple hv_ModelHandle, 
      out HTuple hv_baseTopRow, out HTuple hv_baseTopCol, out HTuple hv_baseTopRadian, 
      out HTuple hv_baseTopLen1, out HTuple hv_baseTopLen2, out HTuple hv_baseLeftRow, 
      out HTuple hv_baseLeftCol, out HTuple hv_baseLeftRadian, out HTuple hv_baseLeftLen1, 
      out HTuple hv_baseLeftLen2, out HTuple hv_MapToWorld, out HTuple hv_MapToImage, 
      out HTuple hv_CameraParameters)
  {




    // Local iconic variables 

    HObject ho_ImageUndistorted=null;

    // Local control variables 

    HTuple hv_CameraPose = new HTuple(), hv_modelRow = new HTuple();
    HTuple hv_modelCol = new HTuple(), hv_Row = new HTuple();
    HTuple hv_Column = new HTuple(), hv_Angle = new HTuple();
    HTuple hv_Score = new HTuple(), hv_MovementOfItem = new HTuple();
    HTuple hv_sigma2 = new HTuple(), hv_row1TopBase = new HTuple();
    HTuple hv_col1TopBase = new HTuple(), hv_radianTopBase = new HTuple();
    HTuple hv_len1TopBase = new HTuple(), hv_len2TopBase = new HTuple();
    HTuple hv_row1TopBase1 = new HTuple(), hv_col1TopBase1 = new HTuple();
    HTuple hv_radianTopBase1 = new HTuple(), hv_len1TopBase1 = new HTuple();
    HTuple hv_len2TopBase1 = new HTuple(), hv_row1TopBase2 = new HTuple();
    HTuple hv_col1TopBase2 = new HTuple(), hv_radianTopBase2 = new HTuple();
    HTuple hv_len1TopBase2 = new HTuple(), hv_len2TopBase2 = new HTuple();
    HTuple hv_row1LeftBase = new HTuple(), hv_col1LeftBase = new HTuple();
    HTuple hv_radianLeftBase = new HTuple(), hv_len1LeftBase = new HTuple();
    HTuple hv_len2LeftBase = new HTuple(), hv_row1LeftBase1 = new HTuple();
    HTuple hv_col1LeftBase1 = new HTuple(), hv_radianLeftBase1 = new HTuple();
    HTuple hv_len1LeftBase1 = new HTuple(), hv_len2LeftBase1 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ImageUndistorted);
    hv_baseTopRow = new HTuple();
    hv_baseTopCol = new HTuple();
    hv_baseTopRadian = new HTuple();
    hv_baseTopLen1 = new HTuple();
    hv_baseTopLen2 = new HTuple();
    hv_baseLeftRow = new HTuple();
    hv_baseLeftCol = new HTuple();
    hv_baseLeftRadian = new HTuple();
    hv_baseLeftLen1 = new HTuple();
    hv_baseLeftLen2 = new HTuple();
    hv_MapToWorld = new HTuple();
    hv_MapToImage = new HTuple();
    hv_CameraParameters = new HTuple();
    try
    {
      hv_CameraParameters.Dispose();
      hv_CameraParameters = new HTuple();
      hv_CameraParameters[0] = "area_scan_telecentric_division";
      hv_CameraParameters[1] = 0.579268;
      hv_CameraParameters[2] = -3.64444;
      hv_CameraParameters[3] = 4.49772e-006;
      hv_CameraParameters[4] = 4.5e-006;
      hv_CameraParameters[5] = 2440.35;
      hv_CameraParameters[6] = 3083.74;
      hv_CameraParameters[7] = 5120;
      hv_CameraParameters[8] = 5120;
      hv_CameraPose.Dispose();
      hv_CameraPose = new HTuple();
      hv_CameraPose[0] = 0.000303946;
      hv_CameraPose[1] = -0.0050309;
      hv_CameraPose[2] = 0.000999219;
      hv_CameraPose[3] = 0.0906952;
      hv_CameraPose[4] = 357.737;
      hv_CameraPose[5] = 89.8488;
      hv_CameraPose[6] = 0;

      ho_ImageUndistorted.Dispose();
      ho_ImageUndistorted = new HObject(ho_Image);
      hv_MapToWorld.Dispose();hv_MapToImage.Dispose();
      GenCalibrationMaps(ho_Image, hv_CameraParameters, hv_CameraPose, out hv_MapToWorld, 
          out hv_MapToImage);


      hv_modelRow.Dispose();
      hv_modelRow = 1166.78;
      hv_modelCol.Dispose();
      hv_modelCol = 2205;

      hv_Row.Dispose();hv_Column.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
      HOperatorSet.FindShapeModel(ho_Image, hv_ModelHandle, -0.39, 0.79, 0.2, 1, 
          0.5, "least_squares", 0, 0.9, out hv_Row, out hv_Column, out hv_Angle, 
          out hv_Score);
      hv_MovementOfItem.Dispose();
      HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Row, hv_Column, hv_Angle, out hv_MovementOfItem);

      hv_sigma2.Dispose();
      hv_sigma2 = 5;

      //Find top base line
      hv_row1TopBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1TopBase = 137.0-hv_modelRow;
      }
      hv_col1TopBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1TopBase = 2217.0-hv_modelCol;
      }
      hv_radianTopBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianTopBase = (new HTuple(-91.0)).TupleRad()
          ;
      }
      hv_len1TopBase.Dispose();
      hv_len1TopBase = 187.0;
      hv_len2TopBase.Dispose();
      hv_len2TopBase = 107.0;

      hv_row1TopBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1TopBase1 = 137.0-hv_modelRow;
      }
      hv_col1TopBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1TopBase1 = 1628.0-hv_modelCol;
      }
      hv_radianTopBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianTopBase1 = (new HTuple(-91.0)).TupleRad()
          ;
      }
      hv_len1TopBase1.Dispose();
      hv_len1TopBase1 = 187.0;
      hv_len2TopBase1.Dispose();
      hv_len2TopBase1 = 107.0;

      hv_row1TopBase2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1TopBase2 = 137.0-hv_modelRow;
      }
      hv_col1TopBase2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1TopBase2 = 2876.0-hv_modelCol;
      }
      hv_radianTopBase2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianTopBase2 = (new HTuple(-91.0)).TupleRad()
          ;
      }
      hv_len1TopBase2.Dispose();
      hv_len1TopBase2 = 187.0;
      hv_len2TopBase2.Dispose();
      hv_len2TopBase2 = 160.0;

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_row1TopBase = ((hv_row1TopBase.TupleConcat(
          hv_row1TopBase1))).TupleConcat(hv_row1TopBase2);
      hv_row1TopBase.Dispose();
      hv_row1TopBase = ExpTmpLocalVar_row1TopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_col1TopBase = ((hv_col1TopBase.TupleConcat(
          hv_col1TopBase1))).TupleConcat(hv_col1TopBase2);
      hv_col1TopBase.Dispose();
      hv_col1TopBase = ExpTmpLocalVar_col1TopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_radianTopBase = ((hv_radianTopBase.TupleConcat(
          hv_radianTopBase1))).TupleConcat(hv_radianTopBase2);
      hv_radianTopBase.Dispose();
      hv_radianTopBase = ExpTmpLocalVar_radianTopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len1TopBase = ((hv_len1TopBase.TupleConcat(
          hv_len1TopBase1))).TupleConcat(hv_len1TopBase2);
      hv_len1TopBase.Dispose();
      hv_len1TopBase = ExpTmpLocalVar_len1TopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len2TopBase = ((hv_len2TopBase.TupleConcat(
          hv_len2TopBase1))).TupleConcat(hv_len2TopBase2);
      hv_len2TopBase.Dispose();
      hv_len2TopBase = ExpTmpLocalVar_len2TopBase;
      }
      }

      hv_baseTopRow.Dispose();hv_baseTopCol.Dispose();hv_baseTopRadian.Dispose();hv_baseTopLen1.Dispose();hv_baseTopLen2.Dispose();
      AffineTransRect2(hv_row1TopBase, hv_col1TopBase, hv_radianTopBase, hv_len1TopBase, 
          hv_len2TopBase, hv_MovementOfItem, out hv_baseTopRow, out hv_baseTopCol, 
          out hv_baseTopRadian, out hv_baseTopLen1, out hv_baseTopLen2);




      //Find left base line
      hv_row1LeftBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1LeftBase = 2607.0-hv_modelRow;
      }
      hv_col1LeftBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1LeftBase = 995.0-hv_modelCol;
      }
      hv_radianLeftBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianLeftBase = (new HTuple(-1.0)).TupleRad()
          ;
      }
      hv_len1LeftBase.Dispose();
      hv_len1LeftBase = 150.0;
      hv_len2LeftBase.Dispose();
      hv_len2LeftBase = 281.0;

      hv_row1LeftBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1LeftBase1 = 4216.0-hv_modelRow;
      }
      hv_col1LeftBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1LeftBase1 = 995.0-hv_modelCol;
      }
      hv_radianLeftBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianLeftBase1 = (new HTuple(-1.0)).TupleRad()
          ;
      }
      hv_len1LeftBase1.Dispose();
      hv_len1LeftBase1 = 150.0;
      hv_len2LeftBase1.Dispose();
      hv_len2LeftBase1 = 281.0;

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_row1LeftBase = hv_row1LeftBase.TupleConcat(
          hv_row1LeftBase1);
      hv_row1LeftBase.Dispose();
      hv_row1LeftBase = ExpTmpLocalVar_row1LeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_col1LeftBase = hv_col1LeftBase.TupleConcat(
          hv_col1LeftBase1);
      hv_col1LeftBase.Dispose();
      hv_col1LeftBase = ExpTmpLocalVar_col1LeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_radianLeftBase = hv_radianLeftBase.TupleConcat(
          hv_radianLeftBase1);
      hv_radianLeftBase.Dispose();
      hv_radianLeftBase = ExpTmpLocalVar_radianLeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len1LeftBase = hv_len1LeftBase.TupleConcat(
          hv_len1LeftBase1);
      hv_len1LeftBase.Dispose();
      hv_len1LeftBase = ExpTmpLocalVar_len1LeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len2LeftBase = hv_len2LeftBase.TupleConcat(
          hv_len2LeftBase1);
      hv_len2LeftBase.Dispose();
      hv_len2LeftBase = ExpTmpLocalVar_len2LeftBase;
      }
      }


      hv_baseLeftRow.Dispose();hv_baseLeftCol.Dispose();hv_baseLeftRadian.Dispose();hv_baseLeftLen1.Dispose();hv_baseLeftLen2.Dispose();
      AffineTransRect2(hv_row1LeftBase, hv_col1LeftBase, hv_radianLeftBase, hv_len1LeftBase, 
          hv_len2LeftBase, hv_MovementOfItem, out hv_baseLeftRow, out hv_baseLeftCol, 
          out hv_baseLeftRadian, out hv_baseLeftLen1, out hv_baseLeftLen2);

      ho_ImageUndistorted.Dispose();

      hv_CameraPose.Dispose();
      hv_modelRow.Dispose();
      hv_modelCol.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementOfItem.Dispose();
      hv_sigma2.Dispose();
      hv_row1TopBase.Dispose();
      hv_col1TopBase.Dispose();
      hv_radianTopBase.Dispose();
      hv_len1TopBase.Dispose();
      hv_len2TopBase.Dispose();
      hv_row1TopBase1.Dispose();
      hv_col1TopBase1.Dispose();
      hv_radianTopBase1.Dispose();
      hv_len1TopBase1.Dispose();
      hv_len2TopBase1.Dispose();
      hv_row1TopBase2.Dispose();
      hv_col1TopBase2.Dispose();
      hv_radianTopBase2.Dispose();
      hv_len1TopBase2.Dispose();
      hv_len2TopBase2.Dispose();
      hv_row1LeftBase.Dispose();
      hv_col1LeftBase.Dispose();
      hv_radianLeftBase.Dispose();
      hv_len1LeftBase.Dispose();
      hv_len2LeftBase.Dispose();
      hv_row1LeftBase1.Dispose();
      hv_col1LeftBase1.Dispose();
      hv_radianLeftBase1.Dispose();
      hv_len1LeftBase1.Dispose();
      hv_len2LeftBase1.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_ImageUndistorted.Dispose();

      hv_CameraPose.Dispose();
      hv_modelRow.Dispose();
      hv_modelCol.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementOfItem.Dispose();
      hv_sigma2.Dispose();
      hv_row1TopBase.Dispose();
      hv_col1TopBase.Dispose();
      hv_radianTopBase.Dispose();
      hv_len1TopBase.Dispose();
      hv_len2TopBase.Dispose();
      hv_row1TopBase1.Dispose();
      hv_col1TopBase1.Dispose();
      hv_radianTopBase1.Dispose();
      hv_len1TopBase1.Dispose();
      hv_len2TopBase1.Dispose();
      hv_row1TopBase2.Dispose();
      hv_col1TopBase2.Dispose();
      hv_radianTopBase2.Dispose();
      hv_len1TopBase2.Dispose();
      hv_len2TopBase2.Dispose();
      hv_row1LeftBase.Dispose();
      hv_col1LeftBase.Dispose();
      hv_radianLeftBase.Dispose();
      hv_len1LeftBase.Dispose();
      hv_len2LeftBase.Dispose();
      hv_row1LeftBase1.Dispose();
      hv_col1LeftBase1.Dispose();
      hv_radianLeftBase1.Dispose();
      hv_len1LeftBase1.Dispose();
      hv_len2LeftBase1.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetI94TopViewBaseRects (HObject ho_Image, out HObject ho_ImageUndistorted, 
      HTuple hv_ModelHandle, out HTuple hv_baseTopRow, out HTuple hv_baseTopColumn, 
      out HTuple hv_baseTopRadian, out HTuple hv_baseTopLen1, out HTuple hv_baseTopLen2, 
      out HTuple hv_baseRightRow, out HTuple hv_baseRightColumn, out HTuple hv_baseRightRadian, 
      out HTuple hv_baseRightLen1, out HTuple hv_baseRightLen2, out HTuple hv_MapToWorld, 
      out HTuple hv_MapToImage, out HTuple hv_CameraParameters)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageResult;

    // Local copy input parameter variables 
    HObject ho_Image_COPY_INP_TMP;
    ho_Image_COPY_INP_TMP = new HObject(ho_Image);



    // Local control variables 

    HTuple hv_CameraPose = new HTuple(), hv_OutCameraParams = new HTuple();
    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_numSubRects = new HTuple(), hv_ModelThreshold = new HTuple();
    HTuple hv_threshValue = new HTuple(), hv_ignorePortion = new HTuple();
    HTuple hv_sigma1 = new HTuple(), hv_sigma2 = new HTuple();
    HTuple hv_cannyHigh = new HTuple(), hv_cannyLow = new HTuple();
    HTuple hv_newWidth = new HTuple(), hv_rowModel = new HTuple();
    HTuple hv_colModel = new HTuple(), hv_Row = new HTuple();
    HTuple hv_Column = new HTuple(), hv_Angle = new HTuple();
    HTuple hv_Score = new HTuple(), hv_MovementImageToImage = new HTuple();
    HTuple hv_ROW_1 = new HTuple(), hv_COL_1 = new HTuple();
    HTuple hv_RAD_1 = new HTuple(), hv_ROW1_1 = new HTuple();
    HTuple hv_COL1_1 = new HTuple(), hv_RAD1_1 = new HTuple();
    HTuple hv_LEN1_1 = new HTuple(), hv_LEN2_1 = new HTuple();
    HTuple hv_ROW1_2 = new HTuple(), hv_COL1_2 = new HTuple();
    HTuple hv_RAD1_2 = new HTuple(), hv_LEN1_2 = new HTuple();
    HTuple hv_LEN2_2 = new HTuple(), hv_ROW_2 = new HTuple();
    HTuple hv_COL_2 = new HTuple(), hv_RAD_2 = new HTuple();
    HTuple hv_ROW_3 = new HTuple(), hv_COL_3 = new HTuple();
    HTuple hv_RAD_3 = new HTuple(), hv_LEN1_3 = new HTuple();
    HTuple hv_LEN2_3 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ImageUndistorted);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageResult);
    hv_baseTopRow = new HTuple();
    hv_baseTopColumn = new HTuple();
    hv_baseTopRadian = new HTuple();
    hv_baseTopLen1 = new HTuple();
    hv_baseTopLen2 = new HTuple();
    hv_baseRightRow = new HTuple();
    hv_baseRightColumn = new HTuple();
    hv_baseRightRadian = new HTuple();
    hv_baseRightLen1 = new HTuple();
    hv_baseRightLen2 = new HTuple();
    hv_MapToWorld = new HTuple();
    hv_MapToImage = new HTuple();
    hv_CameraParameters = new HTuple();
    try
    {
      hv_CameraParameters.Dispose();
      hv_CameraParameters = new HTuple();
      hv_CameraParameters[0] = "area_scan_telecentric_division";
      hv_CameraParameters[1] = 0.588471;
      hv_CameraParameters[2] = 3.42746;
      hv_CameraParameters[3] = 4.4974e-006;
      hv_CameraParameters[4] = 4.5e-006;
      hv_CameraParameters[5] = 2556.48;
      hv_CameraParameters[6] = 2560.7;
      hv_CameraParameters[7] = 5120;
      hv_CameraParameters[8] = 5120;
      hv_CameraPose.Dispose();
      hv_CameraPose = new HTuple();
      hv_CameraPose[0] = 0.00180843;
      hv_CameraPose[1] = -0.000646214;
      hv_CameraPose[2] = 0.000999199;
      hv_CameraPose[3] = 0.316458;
      hv_CameraPose[4] = 2.27204;
      hv_CameraPose[5] = 180.151;
      hv_CameraPose[6] = 0;
      {
      HObject ExpTmpOutVar_0;hv_OutCameraParams.Dispose();
      UndistortImage(ho_Image_COPY_INP_TMP, out ExpTmpOutVar_0, hv_CameraParameters, 
          out hv_OutCameraParams);
      ho_Image_COPY_INP_TMP.Dispose();
      ho_Image_COPY_INP_TMP = ExpTmpOutVar_0;
      }
      ho_ImageUndistorted.Dispose();
      ho_ImageUndistorted = new HObject(ho_Image_COPY_INP_TMP);

      hv_MapToWorld.Dispose();hv_MapToImage.Dispose();
      GenCalibrationMaps(ho_Image_COPY_INP_TMP, hv_OutCameraParams, hv_CameraPose, 
          out hv_MapToWorld, out hv_MapToImage);

      hv_Width.Dispose();hv_Height.Dispose();
      HOperatorSet.GetImageSize(ho_Image_COPY_INP_TMP, out hv_Width, out hv_Height);
      hv_numSubRects.Dispose();
      hv_numSubRects = 10;

      hv_ModelThreshold.Dispose();
      hv_ModelThreshold = 160;
      hv_threshValue.Dispose();
      hv_threshValue = 20;
      hv_ignorePortion.Dispose();
      hv_ignorePortion = 0.2;
      hv_sigma1.Dispose();
      hv_sigma1 = 1;
      hv_sigma2.Dispose();
      hv_sigma2 = 1;
      hv_cannyHigh.Dispose();
      hv_cannyHigh = 40;
      hv_cannyLow.Dispose();
      hv_cannyLow = 20;
      hv_newWidth.Dispose();
      hv_newWidth = 5;




      //find model front light
      //Threshold := 128

      //gen_rectangle1 (ROI_0, 53.9, 1940.83, 2000, 3900)
      //reduce_domain (Image, ROI_0, ImageReduced)
      //binary_threshold (ImageReduced, Region, 'max_separability', 'light', UsedThreshold)
      //connection (Region, ConnectedRegions)
      //select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 800000, 99999999)
      //paint_region (SelectedRegions, ImageReduced, ImageResult, 255, 'fill')


      //find model back light
      ho_ROI_0.Dispose();
      HOperatorSet.GenRectangle1(out ho_ROI_0, 79.5, 1762.7, 2185.1, 4943.5);
      ho_ImageResult.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_ROI_0, out ho_ImageResult
          );



      hv_rowModel.Dispose();
      hv_rowModel = 1171.5;
      hv_colModel.Dispose();
      hv_colModel = 3678.5;
      hv_Row.Dispose();hv_Column.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
      HOperatorSet.FindShapeModel(ho_ImageResult, hv_ModelHandle, -0.39, 0.79, 0.3, 
          1, 0.5, "least_squares", 0, 0.9, out hv_Row, out hv_Column, out hv_Angle, 
          out hv_Score);
      hv_MovementImageToImage.Dispose();
      HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Row, hv_Column, hv_Angle, out hv_MovementImageToImage);

      //image normalization
      //ROW_1 := 1972 - rowModel
      //COL_1 := 4257- colModel
      //RAD_1 := 0
      //LEN_1 := 150
      //LEN_2 := 150

      //AffineTransRect2 (ROW_1, COL_1, RAD_1, LEN_1, LEN_2, MovementImageToImage, ROW_1, COL_1, RAD_1, LEN_1, LEN_2)
      //gen_rectangle2 (Rectangle8, ROW_1, COL_1, RAD_1, LEN_1, LEN_2)
      //reduce_domain (ImageReduced, Rectangle8, ImageReduced1)
      //gray_features (Rectangle8, ImageReduced1, 'mean', Value)
      //standardGrayValue := 140.0
      //scaleFacotr := standardGrayValue / Value
      //scale_image (Image, Image, scaleFacotr, 0)

      hv_ROW1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW1_1 = 2684-hv_rowModel;
      }
      hv_COL1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL1_1 = 4804-hv_colModel;
      }
      hv_RAD1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD1_1 = (new HTuple(180)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 200.0;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 350.0;

      hv_ROW1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW1_2 = 4380-hv_rowModel;
      }
      hv_COL1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL1_2 = 4804-hv_colModel;
      }
      hv_RAD1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD1_2 = (new HTuple(180)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 200.0;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 350.0;

      hv_baseRightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightRow = new HTuple();
      hv_baseRightRow = hv_baseRightRow.TupleConcat(hv_ROW1_1, hv_ROW1_2);
      }
      hv_baseRightColumn.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightColumn = new HTuple();
      hv_baseRightColumn = hv_baseRightColumn.TupleConcat(hv_COL1_1, hv_COL1_2);
      }
      hv_baseRightRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightRadian = new HTuple();
      hv_baseRightRadian = hv_baseRightRadian.TupleConcat(hv_RAD1_1, hv_RAD1_2);
      }
      hv_baseRightLen1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightLen1 = new HTuple();
      hv_baseRightLen1 = hv_baseRightLen1.TupleConcat(hv_LEN1_1, hv_LEN1_2);
      }
      hv_baseRightLen2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightLen2 = new HTuple();
      hv_baseRightLen2 = hv_baseRightLen2.TupleConcat(hv_LEN2_1, hv_LEN2_2);
      }


      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_baseRightRow, hv_baseRightColumn, hv_baseRightRadian, hv_baseRightLen1, 
          hv_baseRightLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_baseRightRow.Dispose();
      hv_baseRightRow = ExpTmpOutVar_0;
      hv_baseRightColumn.Dispose();
      hv_baseRightColumn = ExpTmpOutVar_1;
      hv_baseRightRadian.Dispose();
      hv_baseRightRadian = ExpTmpOutVar_2;
      hv_baseRightLen1.Dispose();
      hv_baseRightLen1 = ExpTmpOutVar_3;
      hv_baseRightLen2.Dispose();
      hv_baseRightLen2 = ExpTmpOutVar_4;
      }
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', baseRightRow, baseRightColum, baseRightRadian, baseRightLen1, baseRightLen2, numSubRects, [threshValue,threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, lineX1RightBase, lineY1RightBase, lineX2RightBase, lineY2RightBase, XsUsed, YsUsed, XsIgnored, YsIgnored)

      //find top base line
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 162.42300000-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 3050-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100.0;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 200.0;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 162.42300000-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 3694-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100.0;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 100.0;

      hv_ROW_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_3 = 162.42300000-hv_rowModel;
      }
      hv_COL_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_3 = 4310-hv_colModel;
      }
      hv_RAD_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_3 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_3.Dispose();
      hv_LEN1_3 = 100.0;
      hv_LEN2_3.Dispose();
      hv_LEN2_3 = 100.0;

      hv_baseTopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopRow = new HTuple();
      hv_baseTopRow = hv_baseTopRow.TupleConcat(hv_ROW_1, hv_ROW_2, hv_ROW_3);
      }
      hv_baseTopColumn.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopColumn = new HTuple();
      hv_baseTopColumn = hv_baseTopColumn.TupleConcat(hv_COL_1, hv_COL_2, hv_COL_3);
      }
      hv_baseTopRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopRadian = new HTuple();
      hv_baseTopRadian = hv_baseTopRadian.TupleConcat(hv_RAD_1, hv_RAD_2, hv_RAD_3);
      }
      hv_baseTopLen1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopLen1 = new HTuple();
      hv_baseTopLen1 = hv_baseTopLen1.TupleConcat(hv_LEN1_1, hv_LEN1_2, hv_LEN1_3);
      }
      hv_baseTopLen2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopLen2 = new HTuple();
      hv_baseTopLen2 = hv_baseTopLen2.TupleConcat(hv_LEN2_1, hv_LEN2_2, hv_LEN2_3);
      }


      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_baseTopRow, hv_baseTopColumn, hv_baseTopRadian, hv_baseTopLen1, 
          hv_baseTopLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_baseTopRow.Dispose();
      hv_baseTopRow = ExpTmpOutVar_0;
      hv_baseTopColumn.Dispose();
      hv_baseTopColumn = ExpTmpOutVar_1;
      hv_baseTopRadian.Dispose();
      hv_baseTopRadian = ExpTmpOutVar_2;
      hv_baseTopLen1.Dispose();
      hv_baseTopLen1 = ExpTmpOutVar_3;
      hv_baseTopLen2.Dispose();
      hv_baseTopLen2 = ExpTmpOutVar_4;
      }


      //make origin


      //rectify bases
      //get_perpendicular_line_that_passes (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colOrigin, rowOrigin, ptXOnPerpenducularDir, ptYOnPerpenducularDir)
      //lineX1RightBase := colOrigin
      //lineY1RightBase := rowOrigin
      //lineX2RightBase := ptXOnPerpenducularDir
      //lineY2RightBase := ptYOnPerpenducularDir

      ho_Image_COPY_INP_TMP.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageResult.Dispose();

      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_numSubRects.Dispose();
      hv_ModelThreshold.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_sigma2.Dispose();
      hv_cannyHigh.Dispose();
      hv_cannyLow.Dispose();
      hv_newWidth.Dispose();
      hv_rowModel.Dispose();
      hv_colModel.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementImageToImage.Dispose();
      hv_ROW_1.Dispose();
      hv_COL_1.Dispose();
      hv_RAD_1.Dispose();
      hv_ROW1_1.Dispose();
      hv_COL1_1.Dispose();
      hv_RAD1_1.Dispose();
      hv_LEN1_1.Dispose();
      hv_LEN2_1.Dispose();
      hv_ROW1_2.Dispose();
      hv_COL1_2.Dispose();
      hv_RAD1_2.Dispose();
      hv_LEN1_2.Dispose();
      hv_LEN2_2.Dispose();
      hv_ROW_2.Dispose();
      hv_COL_2.Dispose();
      hv_RAD_2.Dispose();
      hv_ROW_3.Dispose();
      hv_COL_3.Dispose();
      hv_RAD_3.Dispose();
      hv_LEN1_3.Dispose();
      hv_LEN2_3.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Image_COPY_INP_TMP.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageResult.Dispose();

      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_numSubRects.Dispose();
      hv_ModelThreshold.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_sigma2.Dispose();
      hv_cannyHigh.Dispose();
      hv_cannyLow.Dispose();
      hv_newWidth.Dispose();
      hv_rowModel.Dispose();
      hv_colModel.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementImageToImage.Dispose();
      hv_ROW_1.Dispose();
      hv_COL_1.Dispose();
      hv_RAD_1.Dispose();
      hv_ROW1_1.Dispose();
      hv_COL1_1.Dispose();
      hv_RAD1_1.Dispose();
      hv_LEN1_1.Dispose();
      hv_LEN2_1.Dispose();
      hv_ROW1_2.Dispose();
      hv_COL1_2.Dispose();
      hv_RAD1_2.Dispose();
      hv_LEN1_2.Dispose();
      hv_LEN2_2.Dispose();
      hv_ROW_2.Dispose();
      hv_COL_2.Dispose();
      hv_RAD_2.Dispose();
      hv_ROW_3.Dispose();
      hv_COL_3.Dispose();
      hv_RAD_3.Dispose();
      hv_LEN1_3.Dispose();
      hv_LEN2_3.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetI94TopViewBaseRectsNoRectify (HObject ho_Image, HTuple hv_ModelHandle, 
      out HTuple hv_baseTopRow, out HTuple hv_baseTopColumn, out HTuple hv_baseTopRadian, 
      out HTuple hv_baseTopLen1, out HTuple hv_baseTopLen2, out HTuple hv_baseRightRow, 
      out HTuple hv_baseRightColumn, out HTuple hv_baseRightRadian, out HTuple hv_baseRightLen1, 
      out HTuple hv_baseRightLen2, out HTuple hv_MapToWorld, out HTuple hv_MapToImage, 
      out HTuple hv_CameraParameters)
  {




    // Local iconic variables 

    HObject ho_ImageUndistorted=null, ho_ROI_0;
    HObject ho_ImageResult;

    // Local control variables 

    HTuple hv_CameraPose = new HTuple(), hv_Width = new HTuple();
    HTuple hv_Height = new HTuple(), hv_numSubRects = new HTuple();
    HTuple hv_ModelThreshold = new HTuple(), hv_threshValue = new HTuple();
    HTuple hv_ignorePortion = new HTuple(), hv_sigma1 = new HTuple();
    HTuple hv_sigma2 = new HTuple(), hv_cannyHigh = new HTuple();
    HTuple hv_cannyLow = new HTuple(), hv_newWidth = new HTuple();
    HTuple hv_rowModel = new HTuple(), hv_colModel = new HTuple();
    HTuple hv_Row = new HTuple(), hv_Column = new HTuple();
    HTuple hv_Angle = new HTuple(), hv_Score = new HTuple();
    HTuple hv_MovementImageToImage = new HTuple(), hv_ROW_1 = new HTuple();
    HTuple hv_COL_1 = new HTuple(), hv_RAD_1 = new HTuple();
    HTuple hv_ROW1_1 = new HTuple(), hv_COL1_1 = new HTuple();
    HTuple hv_RAD1_1 = new HTuple(), hv_LEN1_1 = new HTuple();
    HTuple hv_LEN2_1 = new HTuple(), hv_ROW1_2 = new HTuple();
    HTuple hv_COL1_2 = new HTuple(), hv_RAD1_2 = new HTuple();
    HTuple hv_LEN1_2 = new HTuple(), hv_LEN2_2 = new HTuple();
    HTuple hv_ROW_2 = new HTuple(), hv_COL_2 = new HTuple();
    HTuple hv_RAD_2 = new HTuple(), hv_ROW_3 = new HTuple();
    HTuple hv_COL_3 = new HTuple(), hv_RAD_3 = new HTuple();
    HTuple hv_LEN1_3 = new HTuple(), hv_LEN2_3 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ImageUndistorted);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageResult);
    hv_baseTopRow = new HTuple();
    hv_baseTopColumn = new HTuple();
    hv_baseTopRadian = new HTuple();
    hv_baseTopLen1 = new HTuple();
    hv_baseTopLen2 = new HTuple();
    hv_baseRightRow = new HTuple();
    hv_baseRightColumn = new HTuple();
    hv_baseRightRadian = new HTuple();
    hv_baseRightLen1 = new HTuple();
    hv_baseRightLen2 = new HTuple();
    hv_MapToWorld = new HTuple();
    hv_MapToImage = new HTuple();
    hv_CameraParameters = new HTuple();
    try
    {
      hv_CameraParameters.Dispose();
      hv_CameraParameters = new HTuple();
      hv_CameraParameters[0] = "area_scan_telecentric_division";
      hv_CameraParameters[1] = 0.588471;
      hv_CameraParameters[2] = 3.42746;
      hv_CameraParameters[3] = 4.4974e-006;
      hv_CameraParameters[4] = 4.5e-006;
      hv_CameraParameters[5] = 2556.48;
      hv_CameraParameters[6] = 2560.7;
      hv_CameraParameters[7] = 5120;
      hv_CameraParameters[8] = 5120;
      hv_CameraPose.Dispose();
      hv_CameraPose = new HTuple();
      hv_CameraPose[0] = 0.00180843;
      hv_CameraPose[1] = -0.000646214;
      hv_CameraPose[2] = 0.000999199;
      hv_CameraPose[3] = 0.316458;
      hv_CameraPose[4] = 2.27204;
      hv_CameraPose[5] = 180.151;
      hv_CameraPose[6] = 0;
      ho_ImageUndistorted.Dispose();
      ho_ImageUndistorted = new HObject(ho_Image);

      hv_MapToWorld.Dispose();hv_MapToImage.Dispose();
      GenCalibrationMaps(ho_Image, hv_CameraParameters, hv_CameraPose, out hv_MapToWorld, 
          out hv_MapToImage);

      hv_Width.Dispose();hv_Height.Dispose();
      HOperatorSet.GetImageSize(ho_Image, out hv_Width, out hv_Height);
      hv_numSubRects.Dispose();
      hv_numSubRects = 10;

      hv_ModelThreshold.Dispose();
      hv_ModelThreshold = 160;
      hv_threshValue.Dispose();
      hv_threshValue = 20;
      hv_ignorePortion.Dispose();
      hv_ignorePortion = 0.2;
      hv_sigma1.Dispose();
      hv_sigma1 = 1;
      hv_sigma2.Dispose();
      hv_sigma2 = 1;
      hv_cannyHigh.Dispose();
      hv_cannyHigh = 40;
      hv_cannyLow.Dispose();
      hv_cannyLow = 20;
      hv_newWidth.Dispose();
      hv_newWidth = 5;




      //find model front light
      //Threshold := 128

      //gen_rectangle1 (ROI_0, 53.9, 1940.83, 2000, 3900)
      //reduce_domain (Image, ROI_0, ImageReduced)
      //binary_threshold (ImageReduced, Region, 'max_separability', 'light', UsedThreshold)
      //connection (Region, ConnectedRegions)
      //select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 800000, 99999999)
      //paint_region (SelectedRegions, ImageReduced, ImageResult, 255, 'fill')


      //find model back light
      ho_ROI_0.Dispose();
      HOperatorSet.GenRectangle1(out ho_ROI_0, 79.5, 1762.7, 2185.1, 4943.5);
      ho_ImageResult.Dispose();
      HOperatorSet.ReduceDomain(ho_Image, ho_ROI_0, out ho_ImageResult);



      hv_rowModel.Dispose();
      hv_rowModel = 1171.5;
      hv_colModel.Dispose();
      hv_colModel = 3678.5;
      hv_Row.Dispose();hv_Column.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
      HOperatorSet.FindShapeModel(ho_ImageResult, hv_ModelHandle, -0.39, 0.79, 0.3, 
          1, 0.5, "least_squares", 0, 0.9, out hv_Row, out hv_Column, out hv_Angle, 
          out hv_Score);
      hv_MovementImageToImage.Dispose();
      HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Row, hv_Column, hv_Angle, out hv_MovementImageToImage);

      //image normalization
      //ROW_1 := 1972 - rowModel
      //COL_1 := 4257- colModel
      //RAD_1 := 0
      //LEN_1 := 150
      //LEN_2 := 150

      //AffineTransRect2 (ROW_1, COL_1, RAD_1, LEN_1, LEN_2, MovementImageToImage, ROW_1, COL_1, RAD_1, LEN_1, LEN_2)
      //gen_rectangle2 (Rectangle8, ROW_1, COL_1, RAD_1, LEN_1, LEN_2)
      //reduce_domain (ImageReduced, Rectangle8, ImageReduced1)
      //gray_features (Rectangle8, ImageReduced1, 'mean', Value)
      //standardGrayValue := 140.0
      //scaleFacotr := standardGrayValue / Value
      //scale_image (Image, Image, scaleFacotr, 0)

      hv_ROW1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW1_1 = 2684-hv_rowModel;
      }
      hv_COL1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL1_1 = 4804-hv_colModel;
      }
      hv_RAD1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD1_1 = (new HTuple(180)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 200.0;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 350.0;

      hv_ROW1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW1_2 = 4380-hv_rowModel;
      }
      hv_COL1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL1_2 = 4804-hv_colModel;
      }
      hv_RAD1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD1_2 = (new HTuple(180)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 200.0;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 350.0;

      hv_baseRightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightRow = new HTuple();
      hv_baseRightRow = hv_baseRightRow.TupleConcat(hv_ROW1_1, hv_ROW1_2);
      }
      hv_baseRightColumn.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightColumn = new HTuple();
      hv_baseRightColumn = hv_baseRightColumn.TupleConcat(hv_COL1_1, hv_COL1_2);
      }
      hv_baseRightRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightRadian = new HTuple();
      hv_baseRightRadian = hv_baseRightRadian.TupleConcat(hv_RAD1_1, hv_RAD1_2);
      }
      hv_baseRightLen1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightLen1 = new HTuple();
      hv_baseRightLen1 = hv_baseRightLen1.TupleConcat(hv_LEN1_1, hv_LEN1_2);
      }
      hv_baseRightLen2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightLen2 = new HTuple();
      hv_baseRightLen2 = hv_baseRightLen2.TupleConcat(hv_LEN2_1, hv_LEN2_2);
      }


      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_baseRightRow, hv_baseRightColumn, hv_baseRightRadian, hv_baseRightLen1, 
          hv_baseRightLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_baseRightRow.Dispose();
      hv_baseRightRow = ExpTmpOutVar_0;
      hv_baseRightColumn.Dispose();
      hv_baseRightColumn = ExpTmpOutVar_1;
      hv_baseRightRadian.Dispose();
      hv_baseRightRadian = ExpTmpOutVar_2;
      hv_baseRightLen1.Dispose();
      hv_baseRightLen1 = ExpTmpOutVar_3;
      hv_baseRightLen2.Dispose();
      hv_baseRightLen2 = ExpTmpOutVar_4;
      }
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', baseRightRow, baseRightColum, baseRightRadian, baseRightLen1, baseRightLen2, numSubRects, [threshValue,threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, lineX1RightBase, lineY1RightBase, lineX2RightBase, lineY2RightBase, XsUsed, YsUsed, XsIgnored, YsIgnored)

      //find top base line
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 162.42300000-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 3050-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100.0;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 200.0;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 162.42300000-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 3694-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100.0;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 100.0;

      hv_ROW_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_3 = 162.42300000-hv_rowModel;
      }
      hv_COL_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_3 = 4310-hv_colModel;
      }
      hv_RAD_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_3 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_3.Dispose();
      hv_LEN1_3 = 100.0;
      hv_LEN2_3.Dispose();
      hv_LEN2_3 = 100.0;

      hv_baseTopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopRow = new HTuple();
      hv_baseTopRow = hv_baseTopRow.TupleConcat(hv_ROW_1, hv_ROW_2, hv_ROW_3);
      }
      hv_baseTopColumn.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopColumn = new HTuple();
      hv_baseTopColumn = hv_baseTopColumn.TupleConcat(hv_COL_1, hv_COL_2, hv_COL_3);
      }
      hv_baseTopRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopRadian = new HTuple();
      hv_baseTopRadian = hv_baseTopRadian.TupleConcat(hv_RAD_1, hv_RAD_2, hv_RAD_3);
      }
      hv_baseTopLen1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopLen1 = new HTuple();
      hv_baseTopLen1 = hv_baseTopLen1.TupleConcat(hv_LEN1_1, hv_LEN1_2, hv_LEN1_3);
      }
      hv_baseTopLen2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopLen2 = new HTuple();
      hv_baseTopLen2 = hv_baseTopLen2.TupleConcat(hv_LEN2_1, hv_LEN2_2, hv_LEN2_3);
      }


      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_baseTopRow, hv_baseTopColumn, hv_baseTopRadian, hv_baseTopLen1, 
          hv_baseTopLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_baseTopRow.Dispose();
      hv_baseTopRow = ExpTmpOutVar_0;
      hv_baseTopColumn.Dispose();
      hv_baseTopColumn = ExpTmpOutVar_1;
      hv_baseTopRadian.Dispose();
      hv_baseTopRadian = ExpTmpOutVar_2;
      hv_baseTopLen1.Dispose();
      hv_baseTopLen1 = ExpTmpOutVar_3;
      hv_baseTopLen2.Dispose();
      hv_baseTopLen2 = ExpTmpOutVar_4;
      }


      //make origin


      //rectify bases
      //get_perpendicular_line_that_passes (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colOrigin, rowOrigin, ptXOnPerpenducularDir, ptYOnPerpenducularDir)
      //lineX1RightBase := colOrigin
      //lineY1RightBase := rowOrigin
      //lineX2RightBase := ptXOnPerpenducularDir
      //lineY2RightBase := ptYOnPerpenducularDir

      ho_ImageUndistorted.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageResult.Dispose();

      hv_CameraPose.Dispose();
      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_numSubRects.Dispose();
      hv_ModelThreshold.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_sigma2.Dispose();
      hv_cannyHigh.Dispose();
      hv_cannyLow.Dispose();
      hv_newWidth.Dispose();
      hv_rowModel.Dispose();
      hv_colModel.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementImageToImage.Dispose();
      hv_ROW_1.Dispose();
      hv_COL_1.Dispose();
      hv_RAD_1.Dispose();
      hv_ROW1_1.Dispose();
      hv_COL1_1.Dispose();
      hv_RAD1_1.Dispose();
      hv_LEN1_1.Dispose();
      hv_LEN2_1.Dispose();
      hv_ROW1_2.Dispose();
      hv_COL1_2.Dispose();
      hv_RAD1_2.Dispose();
      hv_LEN1_2.Dispose();
      hv_LEN2_2.Dispose();
      hv_ROW_2.Dispose();
      hv_COL_2.Dispose();
      hv_RAD_2.Dispose();
      hv_ROW_3.Dispose();
      hv_COL_3.Dispose();
      hv_RAD_3.Dispose();
      hv_LEN1_3.Dispose();
      hv_LEN2_3.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_ImageUndistorted.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageResult.Dispose();

      hv_CameraPose.Dispose();
      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_numSubRects.Dispose();
      hv_ModelThreshold.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_sigma2.Dispose();
      hv_cannyHigh.Dispose();
      hv_cannyLow.Dispose();
      hv_newWidth.Dispose();
      hv_rowModel.Dispose();
      hv_colModel.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementImageToImage.Dispose();
      hv_ROW_1.Dispose();
      hv_COL_1.Dispose();
      hv_RAD_1.Dispose();
      hv_ROW1_1.Dispose();
      hv_COL1_1.Dispose();
      hv_RAD1_1.Dispose();
      hv_LEN1_1.Dispose();
      hv_LEN2_1.Dispose();
      hv_ROW1_2.Dispose();
      hv_COL1_2.Dispose();
      hv_RAD1_2.Dispose();
      hv_LEN1_2.Dispose();
      hv_LEN2_2.Dispose();
      hv_ROW_2.Dispose();
      hv_COL_2.Dispose();
      hv_RAD_2.Dispose();
      hv_ROW_3.Dispose();
      hv_COL_3.Dispose();
      hv_RAD_3.Dispose();
      hv_LEN1_3.Dispose();
      hv_LEN2_3.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetLineUnitVector (HTuple hv_xStart, HTuple hv_yStart, HTuple hv_xEnd, 
      HTuple hv_yEnd, out HTuple hv_xUnit, out HTuple hv_yUnit)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xDiff = new HTuple(), hv_yDiff = new HTuple();
    HTuple hv_totalDiff = new HTuple();
    // Initialize local and output iconic variables 
    hv_xUnit = new HTuple();
    hv_yUnit = new HTuple();
    try
    {
      hv_xDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xDiff = hv_xEnd-hv_xStart;
      }
      hv_yDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_yDiff = hv_yEnd-hv_yStart;
      }

      hv_totalDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_totalDiff = (((hv_yDiff*hv_yDiff)+(hv_xDiff*hv_xDiff))).TupleSqrt()
          ;
      }

      hv_xUnit.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xUnit = hv_xDiff/hv_totalDiff;
      }
      hv_yUnit.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_yUnit = hv_yDiff/hv_totalDiff;
      }


      hv_xDiff.Dispose();
      hv_yDiff.Dispose();
      hv_totalDiff.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_xDiff.Dispose();
      hv_yDiff.Dispose();
      hv_totalDiff.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetLineWeightAndBias (HTuple hv_X1, HTuple hv_Y1, HTuple hv_X2, HTuple hv_Y2, 
      out HTuple hv_m, out HTuple hv_b)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_yDiff = new HTuple(), hv_xDiff = new HTuple();
    // Initialize local and output iconic variables 
    hv_m = new HTuple();
    hv_b = new HTuple();
    try
    {
      hv_yDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_yDiff = hv_Y2-hv_Y1;
      }
      hv_xDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xDiff = hv_X2-hv_X1;
      }

      hv_m.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_m = hv_yDiff/hv_xDiff;
      }
      hv_b.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_b = hv_Y1-(hv_m*hv_X1);
      }


      hv_yDiff.Dispose();
      hv_xDiff.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_yDiff.Dispose();
      hv_xDiff.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetNormalVector (HTuple hv_X1, HTuple hv_Y1, HTuple hv_X2, HTuple hv_Y2, 
      out HTuple hv_VecX, out HTuple hv_VecY)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xDiff = new HTuple(), hv_yDiff = new HTuple();
    HTuple hv_dist = new HTuple(), hv_xDiffNorm = new HTuple();
    HTuple hv_yDiffNorm = new HTuple(), hv_radian = new HTuple();
    HTuple hv_vecXNew = new HTuple(), hv_vecYNew = new HTuple();
    HTuple hv_radianNew = new HTuple();
    // Initialize local and output iconic variables 
    hv_VecX = new HTuple();
    hv_VecY = new HTuple();
    try
    {
      hv_xDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xDiff = hv_X2-hv_X1;
      }
      hv_yDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_yDiff = hv_Y2-hv_Y1;
      }
      //
      hv_dist.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_dist = (((hv_xDiff*hv_xDiff)+(hv_yDiff*hv_yDiff))).TupleSqrt()
          ;
      }
      hv_xDiffNorm.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xDiffNorm = hv_xDiff/hv_dist;
      }
      hv_yDiffNorm.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_yDiffNorm = hv_yDiff/hv_dist;
      }
      //
      hv_radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radian = hv_yDiffNorm.TupleAtan2(
          hv_xDiffNorm);
      }
      //
      hv_VecX.Dispose();
      hv_VecX = new HTuple(hv_yDiffNorm);
      hv_VecY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_VecY = -hv_xDiffNorm;
      }
      //
      hv_vecXNew.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_vecXNew = hv_xDiffNorm+hv_VecX;
      }
      hv_vecYNew.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_vecYNew = hv_yDiffNorm+hv_VecY;
      }
      //
      hv_radianNew.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianNew = hv_vecYNew.TupleAtan2(
          hv_vecXNew);
      }
      //
      //原单位向量 + 其法线单位向量都会得到一个角度 radianNew = radian + rad(45)的向量
      //若原向量角度大于135, 则radianNew < 0
      if ((int)(new HTuple(hv_radian.TupleGreater(2.35619))) != 0)
      {
        if ((int)(new HTuple(hv_radianNew.TupleGreater(0))) != 0)
        {
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_VecX = -hv_VecX;
          hv_VecX.Dispose();
          hv_VecX = ExpTmpLocalVar_VecX;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_VecY = -hv_VecY;
          hv_VecY.Dispose();
          hv_VecY = ExpTmpLocalVar_VecY;
          }
          }
        }
        //
      }
      else
      {
        if ((int)(new HTuple(hv_radianNew.TupleLess(hv_radian))) != 0)
        {
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_VecX = -hv_VecX;
          hv_VecX.Dispose();
          hv_VecX = ExpTmpLocalVar_VecX;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_VecY = -hv_VecY;
          hv_VecY.Dispose();
          hv_VecY = ExpTmpLocalVar_VecY;
          }
          }
        }
      }
      //
      //

      hv_xDiff.Dispose();
      hv_yDiff.Dispose();
      hv_dist.Dispose();
      hv_xDiffNorm.Dispose();
      hv_yDiffNorm.Dispose();
      hv_radian.Dispose();
      hv_vecXNew.Dispose();
      hv_vecYNew.Dispose();
      hv_radianNew.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_xDiff.Dispose();
      hv_yDiff.Dispose();
      hv_dist.Dispose();
      hv_xDiffNorm.Dispose();
      hv_yDiffNorm.Dispose();
      hv_radian.Dispose();
      hv_vecXNew.Dispose();
      hv_vecYNew.Dispose();
      hv_radianNew.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetParallelLine (HTuple hv_X1, HTuple hv_Y1, HTuple hv_X2, HTuple hv_Y2, 
      HTuple hv_Offset, out HTuple hv_X1Out, out HTuple hv_Y1Out, out HTuple hv_X2Out, 
      out HTuple hv_Y2Out)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_VecX = new HTuple(), hv_VecY = new HTuple();
    // Initialize local and output iconic variables 
    hv_X1Out = new HTuple();
    hv_Y1Out = new HTuple();
    hv_X2Out = new HTuple();
    hv_Y2Out = new HTuple();
    try
    {
      hv_VecX.Dispose();hv_VecY.Dispose();
      GetNormalVector(hv_X1, hv_Y1, hv_X2, hv_Y2, out hv_VecX, out hv_VecY);
      //
      hv_X1Out.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_X1Out = (hv_Offset*hv_VecX)+hv_X1;
      }
      hv_Y1Out.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Y1Out = (hv_Offset*hv_VecY)+hv_Y1;
      }
      hv_X2Out.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_X2Out = (hv_Offset*hv_VecX)+hv_X2;
      }
      hv_Y2Out.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Y2Out = (hv_Offset*hv_VecY)+hv_Y2;
      }

      hv_VecX.Dispose();
      hv_VecY.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_VecX.Dispose();
      hv_VecY.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetVectorDegree (HTuple hv_VecX, HTuple hv_VecY, out HTuple hv_Degree)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_radian = new HTuple();
    // Initialize local and output iconic variables 
    hv_Degree = new HTuple();
    try
    {
      hv_radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radian = hv_VecY.TupleAtan2(
          hv_VecX);
      }
      hv_Degree.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Degree = hv_radian.TupleDeg()
          ;
      }


      hv_radian.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_radian.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void GetWeightByNamme (HTuple hv_nameList, HTuple hv_weightList, HTuple hv_name, 
      out HTuple hv_weight)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_nameLen = new HTuple(), hv_weightLen = new HTuple();
    HTuple hv_i = new HTuple();
    // Initialize local and output iconic variables 
    hv_weight = new HTuple();
    try
    {
      hv_nameLen.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_nameLen = new HTuple(hv_nameList.TupleLength()
          );
      }
      hv_weightLen.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_weightLen = new HTuple(hv_weightList.TupleLength()
          );
      }

      if ((int)(new HTuple(hv_nameLen.TupleNotEqual(hv_weightLen))) != 0)
      {
        throw new HalconException("nameLen != weightLen!!!!!!!!!");
      }

      HTuple end_val7 = hv_nameLen-1;
      HTuple step_val7 = 1;
      for (hv_i=0; hv_i.Continue(end_val7, step_val7); hv_i = hv_i.TupleAdd(step_val7))
      {
        if ((int)(new HTuple(((hv_nameList.TupleSelect(hv_i))).TupleEqual(hv_name))) != 0)
        {
          hv_weight.Dispose();
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          hv_weight = hv_weightList.TupleSelect(
              hv_i);
          }

          hv_nameLen.Dispose();
          hv_weightLen.Dispose();
          hv_i.Dispose();

          return;
        }

      }

      throw new HalconException("Name does not exist");


      hv_nameLen.Dispose();
      hv_weightLen.Dispose();
      hv_i.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_nameLen.Dispose();
      hv_weightLen.Dispose();
      hv_i.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void I94BottomViewMeasure (HObject ho_Image, out HObject ho_FindLineRegions, 
      out HObject ho_LineRegions, HTuple hv_ModelID, HTuple hv_XCoeff, HTuple hv_YCoeff, 
      HTuple hv_FAINames, HTuple hv_FAIBiases, HTuple hv_FindLineNames, HTuple hv_Thresholds, 
      HTuple hv_IgnorePortions, HTuple hv_Sigma1s, HTuple hv_Sigma2s, HTuple hv_NewWidths, 
      HTuple hv_CannyLows, HTuple hv_CannyHighs, out HTuple hv_IntersectsX, out HTuple hv_IntersectsY, 
      out HTuple hv_Outputs, out HTuple hv_OutputsPixel, out HTuple hv_PointsXUsed, 
      out HTuple hv_PointsYUsed, out HTuple hv_PointsXIgnored, out HTuple hv_PointsYIgnored)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_findLineRegionTop=null, ho_lineRegionTop=null;
    HObject ho_findLineRegionLeft=null, ho_lineRegionLeft=null;
    HObject ho_findLineRegion=null, ho_lineRegion=null, ho_lineContours=null;
    HObject ho_ROI_0, ho_ImageReduced1, ho_ImageMean1, ho_mask;
    HObject ho_ImageReduced2, ho_Edges2, ho_SelectedContours;
    HObject ho_UnionContours, ho_outputContour, ho_ContCircle;
    HObject ho_Circle, ho_lineRegion1, ho_ROI_FAI26_TL, ho_ImageReduced;
    HObject ho_Edges1, ho_Cross1, ho_ROI_FAI26_BL, ho_Cross2;
    HObject ho_ROI_FAI26_TR, ho_Cross3, ho_ROI_FAI26_BR, ho_Region;
    HObject ho_ConnectedRegions, ho_SelectedRegions, ho_RegionDilation;
    HObject ho_image_intersection, ho_Edges, ho_UnionContours2;
    HObject ho_SelectedXLD, ho_ContCircle1, ho_Rectangle;

    // Local copy input parameter variables 
    HObject ho_Image_COPY_INP_TMP;
    ho_Image_COPY_INP_TMP = new HObject(ho_Image);



    // Local control variables 

    HTuple hv_CameraParameters = new HTuple();
    HTuple hv_CameraPose = new HTuple(), hv_OutCameraParams = new HTuple();
    HTuple hv_MapToWorld = new HTuple(), hv_MapToImage = new HTuple();
    HTuple hv_modelRow = new HTuple(), hv_modelCol = new HTuple();
    HTuple hv_Row = new HTuple(), hv_Column = new HTuple();
    HTuple hv_Angle = new HTuple(), hv_Score = new HTuple();
    HTuple hv_MovementOfItem = new HTuple(), hv_FAI21_P1_LEN = new HTuple();
    HTuple hv_FAI21_P2_LEN = new HTuple(), hv_FAI21_P3_LEN = new HTuple();
    HTuple hv_FAI21_MID_LEN = new HTuple(), hv_FAI23_P1_LEN = new HTuple();
    HTuple hv_FAI23_P2_LEN = new HTuple(), hv_FAI23_P3_LEN = new HTuple();
    HTuple hv_FAI23_MID_LEN = new HTuple(), hv_FAI24_P1_LEN = new HTuple();
    HTuple hv_FAI24_P2_LEN = new HTuple(), hv_FAI24_P3_LEN = new HTuple();
    HTuple hv_FAI25_X_LEN = new HTuple(), hv_FAI25_Y_LEN = new HTuple();
    HTuple hv_FAI26_LEN = new HTuple(), hv_FAI27_P1_LEN = new HTuple();
    HTuple hv_FAI27_P2_LEN = new HTuple(), hv_FAI27_P3_LEN = new HTuple();
    HTuple hv_FAI28_X_LEN = new HTuple(), hv_FAI28_Y_LEN = new HTuple();
    HTuple hv_FAI29_P1_LEN = new HTuple(), hv_FAI29_P2_LEN = new HTuple();
    HTuple hv_FAI29_P3_LEN = new HTuple(), hv_FAI31_LEFT_LEN = new HTuple();
    HTuple hv_FAI31_RIGHT_LEN = new HTuple(), hv_FAI31_CENTERY_LEN = new HTuple();
    HTuple hv_FAI31_CENTERX_LEN = new HTuple(), hv_FAI32_X1_LEN = new HTuple();
    HTuple hv_FAI32_X2_LEN = new HTuple(), hv_FAI32_Y1_LEN = new HTuple();
    HTuple hv_FAI32_Y2_LEN = new HTuple(), hv_FAI33_V_LEN = new HTuple();
    HTuple hv_FAI33_H_LEN = new HTuple(), hv_FAI123_P1_LEN = new HTuple();
    HTuple hv_FAI123_P2_LEN = new HTuple(), hv_FAI123_P3_LEN = new HTuple();
    HTuple hv_sigma2 = new HTuple(), hv_row1TopBase = new HTuple();
    HTuple hv_col1TopBase = new HTuple(), hv_radianTopBase = new HTuple();
    HTuple hv_len1TopBase = new HTuple(), hv_len2TopBase = new HTuple();
    HTuple hv_row1TopBase1 = new HTuple(), hv_col1TopBase1 = new HTuple();
    HTuple hv_radianTopBase1 = new HTuple(), hv_len1TopBase1 = new HTuple();
    HTuple hv_len2TopBase1 = new HTuple(), hv_row1TopBase2 = new HTuple();
    HTuple hv_col1TopBase2 = new HTuple(), hv_radianTopBase2 = new HTuple();
    HTuple hv_len1TopBase2 = new HTuple(), hv_len2TopBase2 = new HTuple();
    HTuple hv_threshValue = new HTuple(), hv_ignorePortion = new HTuple();
    HTuple hv_sigma1 = new HTuple(), hv_newWidth = new HTuple();
    HTuple hv_cannyLow = new HTuple(), hv_cannyHigh = new HTuple();
    HTuple hv_lineX1TopBase = new HTuple(), hv_lineY1TopBase = new HTuple();
    HTuple hv_lineX2TopBase = new HTuple(), hv_lineY2TopBase = new HTuple();
    HTuple hv_ptsXUsed = new HTuple(), hv_ptsYUsed = new HTuple();
    HTuple hv_ptsXIgnored = new HTuple(), hv_ptsYIgnored = new HTuple();
    HTuple hv_row1LeftBase = new HTuple(), hv_col1LeftBase = new HTuple();
    HTuple hv_radianLeftBase = new HTuple(), hv_len1LeftBase = new HTuple();
    HTuple hv_len2LeftBase = new HTuple(), hv_row1LeftBase1 = new HTuple();
    HTuple hv_col1LeftBase1 = new HTuple(), hv_radianLeftBase1 = new HTuple();
    HTuple hv_len1LeftBase1 = new HTuple(), hv_len2LeftBase1 = new HTuple();
    HTuple hv_lineX1LeftBase = new HTuple(), hv_lineY1LeftBase = new HTuple();
    HTuple hv_lineX2LeftBase = new HTuple(), hv_lineY2LeftBase = new HTuple();
    HTuple hv_row1FAI21LeftUpper = new HTuple(), hv_col1FAI21LeftUpper = new HTuple();
    HTuple hv_radianFAI21LeftUpper = new HTuple(), hv_len1FAI21LeftUpper = new HTuple();
    HTuple hv_len2FAI21LeftUpper = new HTuple(), hv_row1FAI21LeftLower = new HTuple();
    HTuple hv_col1FAI21LeftLower = new HTuple(), hv_radianFAI21LeftLower = new HTuple();
    HTuple hv_len1FAI21LeftLower = new HTuple(), hv_len2FAI21LeftLower = new HTuple();
    HTuple hv_row1FAI21Left = new HTuple(), hv_col1FAI21Left = new HTuple();
    HTuple hv_radianFAI21Left = new HTuple(), hv_len1FAI21Left = new HTuple();
    HTuple hv_len2FAI21Left = new HTuple(), hv_lineX1_FAI21_LEFT = new HTuple();
    HTuple hv_lineY1_FAI21_LEFT = new HTuple(), hv_lineX2_FAI21_LEFT = new HTuple();
    HTuple hv_lineY2_FAI21_LEFT = new HTuple(), hv_row1FAI21RightUpper = new HTuple();
    HTuple hv_col1FAI21RightUpper = new HTuple(), hv_radianFAI21RightUpper = new HTuple();
    HTuple hv_len1FAI21RightUpper = new HTuple(), hv_len2FAI21RightUpper = new HTuple();
    HTuple hv_row1FAI21RightLower = new HTuple(), hv_col1FAI21RightLower = new HTuple();
    HTuple hv_radianFAI21RightLower = new HTuple(), hv_len1FAI21RightLower = new HTuple();
    HTuple hv_len2FAI21RightLower = new HTuple(), hv_row1FAI21Right = new HTuple();
    HTuple hv_col1FAI21Right = new HTuple(), hv_radianFAI21Right = new HTuple();
    HTuple hv_len1FAI21Right = new HTuple(), hv_len2FAI21Right = new HTuple();
    HTuple hv_lineX1_FAI21_Right = new HTuple(), hv_lineY1_FAI21_Right = new HTuple();
    HTuple hv_lineX2_FAI21_Right = new HTuple(), hv_lineY2_FAI21_Right = new HTuple();
    HTuple hv_X1_FAI21_LINE_H_P1 = new HTuple(), hv_Y1_FAI21_LINE_H_P1 = new HTuple();
    HTuple hv_X2_FAI21_LINE_H_P1 = new HTuple(), hv_Y2_FAI21_LINE_H_P1 = new HTuple();
    HTuple hv_X1_FAI21_LINE_H_P3 = new HTuple(), hv_Y1_FAI21_LINE_H_P3 = new HTuple();
    HTuple hv_X2_FAI21_LINE_H_P3 = new HTuple(), hv_Y2_FAI21_LINE_H_P3 = new HTuple();
    HTuple hv_intersectY_LEFT = new HTuple(), hv_intersectX_LEFT = new HTuple();
    HTuple hv_IsOverlapping = new HTuple(), hv_intersectY_RIGHT = new HTuple();
    HTuple hv_intersectX_RIGHT = new HTuple(), hv_Distance = new HTuple();
    HTuple hv_rectX1 = new HTuple(), hv_rectY1 = new HTuple();
    HTuple hv_rectRadian = new HTuple(), hv_rectLen1 = new HTuple();
    HTuple hv_rectLen2 = new HTuple(), hv_lineX1_FAI23_TOP = new HTuple();
    HTuple hv_lineY1_FAI23_TOP = new HTuple(), hv_lineX2_FAI23_TOP = new HTuple();
    HTuple hv_lineY2_FAI23_TOP = new HTuple(), hv_XsUsed = new HTuple();
    HTuple hv_YsUsed = new HTuple(), hv_XsIgnored = new HTuple();
    HTuple hv_YsIgnored = new HTuple(), hv_rect1X1 = new HTuple();
    HTuple hv_rect1Y1 = new HTuple(), hv_rect1Radian = new HTuple();
    HTuple hv_rect1Len1 = new HTuple(), hv_rect1Len2 = new HTuple();
    HTuple hv_rect2X1 = new HTuple(), hv_rect2Y1 = new HTuple();
    HTuple hv_rect2Radian = new HTuple(), hv_rect2Len1 = new HTuple();
    HTuple hv_rect2Len2 = new HTuple(), hv_rect3X1 = new HTuple();
    HTuple hv_rect3Y1 = new HTuple(), hv_rect3Radian = new HTuple();
    HTuple hv_rect3Len1 = new HTuple(), hv_rect3Len2 = new HTuple();
    HTuple hv_lineX1_FAI23_BOTTOM = new HTuple(), hv_lineY1_FAI23_BOTTOM = new HTuple();
    HTuple hv_lineX2_FAI23_BOTTOM = new HTuple(), hv_lineY2_FAI23_BOTTOM = new HTuple();
    HTuple hv_X1_FAI23_P1 = new HTuple(), hv_Y1_FAI23_P1 = new HTuple();
    HTuple hv_X2_FAI23_P1 = new HTuple(), hv_Y2_FAI23_P1 = new HTuple();
    HTuple hv_X1_FAI23_P3 = new HTuple(), hv_Y1_FAI23_P3 = new HTuple();
    HTuple hv_X2_FAI23_P3 = new HTuple(), hv_Y2_FAI23_P3 = new HTuple();
    HTuple hv_intersectY_TOP = new HTuple(), hv_intersectX_TOP = new HTuple();
    HTuple hv_intersectY_BOTTOM = new HTuple(), hv_intersectX_BOTTOM = new HTuple();
    HTuple hv_lineX1_FAI24_LEFT = new HTuple(), hv_lineY1_FAI24_LEFT = new HTuple();
    HTuple hv_lineX2_FAI24_LEFT = new HTuple(), hv_lineY2_FAI24_LEFT = new HTuple();
    HTuple hv_lineX1_FAI24_RIGHT = new HTuple(), hv_lineY1_FAI24_RIGHT = new HTuple();
    HTuple hv_lineX2_FAI24_RIGHT = new HTuple(), hv_lineY2_FAI24_RIGHT = new HTuple();
    HTuple hv_X1_FAI24_LINE_H_P2 = new HTuple(), hv_Y1_FAI24_LINE_H_P2 = new HTuple();
    HTuple hv_X2_FAI24_LINE_H_P2 = new HTuple(), hv_Y2_FAI24_LINE_H_P2 = new HTuple();
    HTuple hv_contourLength = new HTuple(), hv_Radius = new HTuple();
    HTuple hv_StartPhi = new HTuple(), hv_EndPhi = new HTuple();
    HTuple hv_PointOrder = new HTuple(), hv_diameterPixel = new HTuple();
    HTuple hv_FAI25_H_X1 = new HTuple(), hv_FAI25_H_Y1 = new HTuple();
    HTuple hv_FAI25_H_X2 = new HTuple(), hv_FAI25_H_Y2 = new HTuple();
    HTuple hv_FAI25_V_X1 = new HTuple(), hv_FAI25_V_Y1 = new HTuple();
    HTuple hv_FAI25_V_X2 = new HTuple(), hv_FAI25_V_Y2 = new HTuple();
    HTuple hv_DistanceX = new HTuple(), hv_distancePixel = new HTuple();
    HTuple hv_DistanceY = new HTuple(), hv_distance = new HTuple();
    HTuple hv_X1_FAI26_LEFT = new HTuple(), hv_Y1_FAI26_LEFT = new HTuple();
    HTuple hv_X2_FAI26_LEFT = new HTuple(), hv_Y2_FAI26_LEFT = new HTuple();
    HTuple hv_X1_FAI26_RIGHT = new HTuple(), hv_Y1_FAI26_RIGHT = new HTuple();
    HTuple hv_X2_FAI26_RIGHT = new HTuple(), hv_Y2_FAI26_RIGHT = new HTuple();
    HTuple hv_contourLength1 = new HTuple(), hv_rowTL_FAI26 = new HTuple();
    HTuple hv_colTL_FAI26 = new HTuple(), hv_IsOverlapping3 = new HTuple();
    HTuple hv_contourLength2 = new HTuple(), hv_rowBL_FAI26 = new HTuple();
    HTuple hv_colBL_FAI26 = new HTuple(), hv_contourLength3 = new HTuple();
    HTuple hv_rowTR_FAI26 = new HTuple(), hv_colTR_FAI26 = new HTuple();
    HTuple hv_contourLength4 = new HTuple(), hv_rowBR_FAI26 = new HTuple();
    HTuple hv_colBR_FAI26 = new HTuple(), hv_lineX1_FAI27_TOP = new HTuple();
    HTuple hv_lineY1_FAI27_TOP = new HTuple(), hv_lineX2_FAI27_TOP = new HTuple();
    HTuple hv_lineY2_FAI27_TOP = new HTuple(), hv_lineX1_FAI27_BOTTOM = new HTuple();
    HTuple hv_lineY1_FAI27_BOTTOM = new HTuple(), hv_lineX2_FAI27_BOTTOM = new HTuple();
    HTuple hv_lineY2_FAI27_BOTTOM = new HTuple(), hv_contourLength5 = new HTuple();
    HTuple hv_rowRightCircle = new HTuple(), hv_colRightCircle = new HTuple();
    HTuple hv_radRightCircle = new HTuple(), hv_X1_FAI27_P2 = new HTuple();
    HTuple hv_Y1_FAI27_P2 = new HTuple(), hv_X2_FAI27_P2 = new HTuple();
    HTuple hv_Y2_FAI27_P2 = new HTuple(), hv_intersectY = new HTuple();
    HTuple hv_intersectX = new HTuple(), hv_X1H = new HTuple();
    HTuple hv_Y1H = new HTuple(), hv_X2H = new HTuple(), hv_Y2H = new HTuple();
    HTuple hv_X1V = new HTuple(), hv_Y1V = new HTuple(), hv_X2V = new HTuple();
    HTuple hv_Y2V = new HTuple(), hv_centerY = new HTuple();
    HTuple hv_centerX = new HTuple(), hv_IsOverlapping9 = new HTuple();
    HTuple hv_lineX1_FAI29_LEFT = new HTuple(), hv_lineY1_FAI29_LEFT = new HTuple();
    HTuple hv_lineX2_FAI29_LEFT = new HTuple(), hv_lineY2_FAI29_LEFT = new HTuple();
    HTuple hv_lineX1_FAI29_RIGHT = new HTuple(), hv_lineY1_FAI29_RIGHT = new HTuple();
    HTuple hv_lineX2_FAI29_RIGHT = new HTuple(), hv_lineY2_FAI29_RIGHT = new HTuple();
    HTuple hv_X1_FAI29_LINE_H_P2 = new HTuple(), hv_Y1_FAI29_LINE_H_P2 = new HTuple();
    HTuple hv_X2_FAI29_LINE_H_P2 = new HTuple(), hv_Y2_FAI29_LINE_H_P2 = new HTuple();
    HTuple hv_lineX1_FAI31_TOPLEFT = new HTuple(), hv_lineY1_FAI31_TOPLEFT = new HTuple();
    HTuple hv_lineX2_FAI31_TOPLEFT = new HTuple(), hv_lineY2_FAI31_TOPLEFT = new HTuple();
    HTuple hv_lineX1_FAI31_BOTTOMLEFT = new HTuple(), hv_lineY1_FAI31_BOTTOMLEFT = new HTuple();
    HTuple hv_lineX2_FAI31_BOTTOMLEFT = new HTuple(), hv_lineY2_FAI31_BOTTOMLEFT = new HTuple();
    HTuple hv_lineX1_FAI31_TOPRIGHT = new HTuple(), hv_lineY1_FAI31_TOPRIGHT = new HTuple();
    HTuple hv_lineX2_FAI31_TOPRIGHT = new HTuple(), hv_lineY2_FAI31_TOPRIGHT = new HTuple();
    HTuple hv_lineX1_FAI31_BOTTOMRIGHT = new HTuple(), hv_lineY1_FAI31_BOTTOMRIGHT = new HTuple();
    HTuple hv_lineX2_FAI31_BOTTOMRIGHT = new HTuple(), hv_lineY2_FAI31_BOTTOMRIGHT = new HTuple();
    HTuple hv_X1_X_1 = new HTuple(), hv_Y1_X_1 = new HTuple();
    HTuple hv_X2_X_1 = new HTuple(), hv_Y2_X_1 = new HTuple();
    HTuple hv_ptY_TL = new HTuple(), hv_ptX_TL = new HTuple();
    HTuple hv_IsOverlapping1 = new HTuple(), hv_ptY_BL = new HTuple();
    HTuple hv_ptX_BL = new HTuple(), hv_X1_X_2 = new HTuple();
    HTuple hv_Y1_X_2 = new HTuple(), hv_X2_X_2 = new HTuple();
    HTuple hv_Y2_X_2 = new HTuple(), hv_ptY_TR = new HTuple();
    HTuple hv_ptX_TR = new HTuple(), hv_ptY_BR = new HTuple();
    HTuple hv_ptX_BR = new HTuple(), hv_ptY = new HTuple();
    HTuple hv_ptX = new HTuple(), hv_IsOverlapping2 = new HTuple();
    HTuple hv_IsOverlapping8 = new HTuple(), hv_intersectY_TL = new HTuple();
    HTuple hv_intersectX_TL = new HTuple(), hv_IsOverlapping5 = new HTuple();
    HTuple hv_intersectY_BL = new HTuple(), hv_intersectX_BL = new HTuple();
    HTuple hv_intersectY_TR = new HTuple(), hv_intersectX_TR = new HTuple();
    HTuple hv_intersectY_BR = new HTuple(), hv_intersectX_BR = new HTuple();
    HTuple hv_X1_L6 = new HTuple(), hv_Y1_L6 = new HTuple();
    HTuple hv_X2_L6 = new HTuple(), hv_Y2_L6 = new HTuple();
    HTuple hv_X1_Y_1 = new HTuple(), hv_Y1_Y_1 = new HTuple();
    HTuple hv_X2_Y_1 = new HTuple(), hv_Y2_Y_1 = new HTuple();
    HTuple hv_intersectY_LT = new HTuple(), hv_intersectX_LT = new HTuple();
    HTuple hv_IsOverlapping6 = new HTuple(), hv_intersectY_RT = new HTuple();
    HTuple hv_intersectX_RT = new HTuple(), hv_X1_Y_2 = new HTuple();
    HTuple hv_Y1_Y_2 = new HTuple(), hv_X2_Y_2 = new HTuple();
    HTuple hv_Y2_Y_2 = new HTuple(), hv_intersectY_LB = new HTuple();
    HTuple hv_intersectX_LB = new HTuple(), hv_intersectY_RB = new HTuple();
    HTuple hv_intersectX_RB = new HTuple(), hv_X1_L5 = new HTuple();
    HTuple hv_Y1_L5 = new HTuple(), hv_X2_L5 = new HTuple();
    HTuple hv_Y2_L5 = new HTuple(), hv_centerY_FAI32 = new HTuple();
    HTuple hv_centerX_FAI32 = new HTuple(), hv_IsOverlapping7 = new HTuple();
    HTuple hv_L6_ROW1 = new HTuple(), hv_L6_COL1 = new HTuple();
    HTuple hv_L6_ROW2 = new HTuple(), hv_L6_COL2 = new HTuple();
    HTuple hv_L5_ROW1 = new HTuple(), hv_L5_COL1 = new HTuple();
    HTuple hv_L5_ROW2 = new HTuple(), hv_L5_COL2 = new HTuple();
    HTuple hv_centerY_FAI33 = new HTuple(), hv_centerX_FAI33 = new HTuple();
    HTuple hv_IsOverlapping4 = new HTuple(), hv_lineX1 = new HTuple();
    HTuple hv_lineY1 = new HTuple(), hv_lineX2 = new HTuple();
    HTuple hv_lineY2 = new HTuple(), hv_P1_X1 = new HTuple();
    HTuple hv_P1_Y1 = new HTuple(), hv_P1_X2 = new HTuple();
    HTuple hv_P1_Y2 = new HTuple(), hv_rowP1_TOP = new HTuple();
    HTuple hv_colP1_TOP = new HTuple(), hv_IsOverlapping10 = new HTuple();
    HTuple hv_rowP1_BOTTOM = new HTuple(), hv_colP1_BOTTOM = new HTuple();
    HTuple hv_P2_X1 = new HTuple(), hv_P2_Y1 = new HTuple();
    HTuple hv_P2_X2 = new HTuple(), hv_P2_Y2 = new HTuple();
    HTuple hv_rowP2_TOP = new HTuple(), hv_colP2_TOP = new HTuple();
    HTuple hv_rowP2_BOTTOM = new HTuple(), hv_colP2_BOTTOM = new HTuple();
    HTuple hv_P3_X1 = new HTuple(), hv_P3_Y1 = new HTuple();
    HTuple hv_P3_X2 = new HTuple(), hv_P3_Y2 = new HTuple();
    HTuple hv_rowP3_TOP = new HTuple(), hv_colP3_TOP = new HTuple();
    HTuple hv_rowP3_BOTTOM = new HTuple(), hv_colP3_BOTTOM = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_FindLineRegions);
    HOperatorSet.GenEmptyObj(out ho_LineRegions);
    HOperatorSet.GenEmptyObj(out ho_findLineRegionTop);
    HOperatorSet.GenEmptyObj(out ho_lineRegionTop);
    HOperatorSet.GenEmptyObj(out ho_findLineRegionLeft);
    HOperatorSet.GenEmptyObj(out ho_lineRegionLeft);
    HOperatorSet.GenEmptyObj(out ho_findLineRegion);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    HOperatorSet.GenEmptyObj(out ho_lineContours);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced1);
    HOperatorSet.GenEmptyObj(out ho_ImageMean1);
    HOperatorSet.GenEmptyObj(out ho_mask);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced2);
    HOperatorSet.GenEmptyObj(out ho_Edges2);
    HOperatorSet.GenEmptyObj(out ho_SelectedContours);
    HOperatorSet.GenEmptyObj(out ho_UnionContours);
    HOperatorSet.GenEmptyObj(out ho_outputContour);
    HOperatorSet.GenEmptyObj(out ho_ContCircle);
    HOperatorSet.GenEmptyObj(out ho_Circle);
    HOperatorSet.GenEmptyObj(out ho_lineRegion1);
    HOperatorSet.GenEmptyObj(out ho_ROI_FAI26_TL);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_Edges1);
    HOperatorSet.GenEmptyObj(out ho_Cross1);
    HOperatorSet.GenEmptyObj(out ho_ROI_FAI26_BL);
    HOperatorSet.GenEmptyObj(out ho_Cross2);
    HOperatorSet.GenEmptyObj(out ho_ROI_FAI26_TR);
    HOperatorSet.GenEmptyObj(out ho_Cross3);
    HOperatorSet.GenEmptyObj(out ho_ROI_FAI26_BR);
    HOperatorSet.GenEmptyObj(out ho_Region);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
    HOperatorSet.GenEmptyObj(out ho_RegionDilation);
    HOperatorSet.GenEmptyObj(out ho_image_intersection);
    HOperatorSet.GenEmptyObj(out ho_Edges);
    HOperatorSet.GenEmptyObj(out ho_UnionContours2);
    HOperatorSet.GenEmptyObj(out ho_SelectedXLD);
    HOperatorSet.GenEmptyObj(out ho_ContCircle1);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    hv_IntersectsX = new HTuple();
    hv_IntersectsY = new HTuple();
    hv_Outputs = new HTuple();
    hv_OutputsPixel = new HTuple();
    hv_PointsXUsed = new HTuple();
    hv_PointsYUsed = new HTuple();
    hv_PointsXIgnored = new HTuple();
    hv_PointsYIgnored = new HTuple();
    try
    {
      //TODO: make top axis as auxillary axis

      hv_CameraParameters.Dispose();
      hv_CameraParameters = new HTuple();
      hv_CameraParameters[0] = "area_scan_telecentric_division";
      hv_CameraParameters[1] = 0.579268;
      hv_CameraParameters[2] = -3.64444;
      hv_CameraParameters[3] = 4.49772e-006;
      hv_CameraParameters[4] = 4.5e-006;
      hv_CameraParameters[5] = 2440.35;
      hv_CameraParameters[6] = 3083.74;
      hv_CameraParameters[7] = 5120;
      hv_CameraParameters[8] = 5120;
      hv_CameraPose.Dispose();
      hv_CameraPose = new HTuple();
      hv_CameraPose[0] = 0.000303946;
      hv_CameraPose[1] = -0.0050309;
      hv_CameraPose[2] = 0.000999219;
      hv_CameraPose[3] = 0.0906952;
      hv_CameraPose[4] = 357.737;
      hv_CameraPose[5] = 89.8488;
      hv_CameraPose[6] = 0;

      {
      HObject ExpTmpOutVar_0;hv_OutCameraParams.Dispose();
      UndistortImage(ho_Image_COPY_INP_TMP, out ExpTmpOutVar_0, hv_CameraParameters, 
          out hv_OutCameraParams);
      ho_Image_COPY_INP_TMP.Dispose();
      ho_Image_COPY_INP_TMP = ExpTmpOutVar_0;
      }

      hv_MapToWorld.Dispose();hv_MapToImage.Dispose();
      GenCalibrationMaps(ho_Image_COPY_INP_TMP, hv_OutCameraParams, hv_CameraPose, 
          out hv_MapToWorld, out hv_MapToImage);


      hv_modelRow.Dispose();
      hv_modelRow = 1166.78;
      hv_modelCol.Dispose();
      hv_modelCol = 2205;

      hv_Row.Dispose();hv_Column.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
      HOperatorSet.FindShapeModel(ho_Image_COPY_INP_TMP, hv_ModelID, -0.39, 0.79, 
          0.2, 1, 0.5, "least_squares", 0, 0.9, out hv_Row, out hv_Column, out hv_Angle, 
          out hv_Score);
      hv_MovementOfItem.Dispose();
      HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Row, hv_Column, hv_Angle, out hv_MovementOfItem);
      HOperatorSet.DispObj(ho_Image_COPY_INP_TMP, hv_ExpDefaultWinHandle);

      hv_FAI21_P1_LEN.Dispose();
      hv_FAI21_P1_LEN = 20.362;
      hv_FAI21_P2_LEN.Dispose();
      hv_FAI21_P2_LEN = 25.362;
      hv_FAI21_P3_LEN.Dispose();
      hv_FAI21_P3_LEN = 30.362;
      hv_FAI21_MID_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI21_MID_LEN = 9.299*-1;
      }

      hv_FAI23_P1_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI23_P1_LEN = 5.299*-1;
      }
      hv_FAI23_P2_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI23_P2_LEN = 9.299*-1;
      }
      hv_FAI23_P3_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI23_P3_LEN = 13.299*-1;
      }
      hv_FAI23_MID_LEN.Dispose();
      hv_FAI23_MID_LEN = 25.362;

      hv_FAI24_P1_LEN.Dispose();
      hv_FAI24_P1_LEN = 6.705;
      hv_FAI24_P2_LEN.Dispose();
      hv_FAI24_P2_LEN = 7.885;
      hv_FAI24_P3_LEN.Dispose();
      hv_FAI24_P3_LEN = 9.065;

      hv_FAI25_X_LEN.Dispose();
      hv_FAI25_X_LEN = -9.299;
      hv_FAI25_Y_LEN.Dispose();
      hv_FAI25_Y_LEN = 7.886;

      hv_FAI26_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI26_LEN = 0.6*-1;
      }

      hv_FAI27_P1_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI27_P1_LEN = 23.137*-1;
      }
      hv_FAI27_P2_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI27_P2_LEN = 24.434*-1;
      }
      hv_FAI27_P3_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI27_P3_LEN = 25.731*-1;
      }

      hv_FAI28_X_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI28_X_LEN = 24.434*-1;
      }
      hv_FAI28_Y_LEN.Dispose();
      hv_FAI28_Y_LEN = 16.624;

      hv_FAI29_P1_LEN.Dispose();
      hv_FAI29_P1_LEN = 15.327;
      hv_FAI29_P2_LEN.Dispose();
      hv_FAI29_P2_LEN = 16.623;
      hv_FAI29_P3_LEN.Dispose();
      hv_FAI29_P3_LEN = 17.919;


      hv_FAI31_LEFT_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI31_LEFT_LEN = 2.203*-1;
      }
      hv_FAI31_RIGHT_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI31_RIGHT_LEN = 16.395*-1;
      }
      hv_FAI31_CENTERY_LEN.Dispose();
      hv_FAI31_CENTERY_LEN = 25.362;
      hv_FAI31_CENTERX_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI31_CENTERX_LEN = 9.299*-1;
      }


      hv_FAI32_X1_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI32_X1_LEN = 5.5*-1;
      }
      hv_FAI32_X2_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI32_X2_LEN = 13.2*-1;
      }
      hv_FAI32_Y1_LEN.Dispose();
      hv_FAI32_Y1_LEN = 21.0;
      hv_FAI32_Y2_LEN.Dispose();
      hv_FAI32_Y2_LEN = 30.1;

      hv_FAI33_V_LEN.Dispose();
      hv_FAI33_V_LEN = 7.886;
      hv_FAI33_H_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI33_H_LEN = 9.299*-1;
      }

      hv_FAI123_P1_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI123_P1_LEN = 3*-1;
      }
      hv_FAI123_P2_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI123_P2_LEN = 9.269*-1;
      }
      hv_FAI123_P3_LEN.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_FAI123_P3_LEN = 15.5*-1;
      }


      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = new HTuple();
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = new HTuple();
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = new HTuple();
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = new HTuple();
      hv_IntersectsX.Dispose();
      hv_IntersectsX = new HTuple();
      hv_IntersectsY.Dispose();
      hv_IntersectsY = new HTuple();

      hv_Outputs.Dispose();
      hv_Outputs = new HTuple();

      hv_sigma2.Dispose();
      hv_sigma2 = 5;

      //Find top base line
      hv_row1TopBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1TopBase = 137-hv_modelRow;
      }
      hv_col1TopBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1TopBase = 2217-hv_modelCol;
      }
      hv_radianTopBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianTopBase = (new HTuple(-91)).TupleRad()
          ;
      }
      hv_len1TopBase.Dispose();
      hv_len1TopBase = 187;
      hv_len2TopBase.Dispose();
      hv_len2TopBase = 107;

      hv_row1TopBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1TopBase1 = 137-hv_modelRow;
      }
      hv_col1TopBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1TopBase1 = 1628-hv_modelCol;
      }
      hv_radianTopBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianTopBase1 = (new HTuple(-91)).TupleRad()
          ;
      }
      hv_len1TopBase1.Dispose();
      hv_len1TopBase1 = 187;
      hv_len2TopBase1.Dispose();
      hv_len2TopBase1 = 107;

      hv_row1TopBase2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1TopBase2 = 137-hv_modelRow;
      }
      hv_col1TopBase2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1TopBase2 = 2876-hv_modelCol;
      }
      hv_radianTopBase2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianTopBase2 = (new HTuple(-91)).TupleRad()
          ;
      }
      hv_len1TopBase2.Dispose();
      hv_len1TopBase2 = 187;
      hv_len2TopBase2.Dispose();
      hv_len2TopBase2 = 160;

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_row1TopBase = ((hv_row1TopBase.TupleConcat(
          hv_row1TopBase1))).TupleConcat(hv_row1TopBase2);
      hv_row1TopBase.Dispose();
      hv_row1TopBase = ExpTmpLocalVar_row1TopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_col1TopBase = ((hv_col1TopBase.TupleConcat(
          hv_col1TopBase1))).TupleConcat(hv_col1TopBase2);
      hv_col1TopBase.Dispose();
      hv_col1TopBase = ExpTmpLocalVar_col1TopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_radianTopBase = ((hv_radianTopBase.TupleConcat(
          hv_radianTopBase1))).TupleConcat(hv_radianTopBase2);
      hv_radianTopBase.Dispose();
      hv_radianTopBase = ExpTmpLocalVar_radianTopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len1TopBase = ((hv_len1TopBase.TupleConcat(
          hv_len1TopBase1))).TupleConcat(hv_len1TopBase2);
      hv_len1TopBase.Dispose();
      hv_len1TopBase = ExpTmpLocalVar_len1TopBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len2TopBase = ((hv_len2TopBase.TupleConcat(
          hv_len2TopBase1))).TupleConcat(hv_len2TopBase2);
      hv_len2TopBase.Dispose();
      hv_len2TopBase = ExpTmpLocalVar_len2TopBase;
      }
      }

      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_row1TopBase, hv_col1TopBase, hv_radianTopBase, hv_len1TopBase, 
          hv_len2TopBase, hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_row1TopBase.Dispose();
      hv_row1TopBase = ExpTmpOutVar_0;
      hv_col1TopBase.Dispose();
      hv_col1TopBase = ExpTmpOutVar_1;
      hv_radianTopBase.Dispose();
      hv_radianTopBase = ExpTmpOutVar_2;
      hv_len1TopBase.Dispose();
      hv_len1TopBase = ExpTmpOutVar_3;
      hv_len2TopBase.Dispose();
      hv_len2TopBase = ExpTmpOutVar_4;
      }

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("TopBase", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegionTop, lineRegionTop, 'negative', row1TopBase, col1TopBase, radianTopBase, len1TopBase, len2TopBase, 10, [threshValue,threshValue,threshValue], 'first', ignorePortion, 'false', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly2, lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }


      //Find left base line
      hv_row1LeftBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1LeftBase = 2607-hv_modelRow;
      }
      hv_col1LeftBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1LeftBase = 995-hv_modelCol;
      }
      hv_radianLeftBase.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianLeftBase = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_len1LeftBase.Dispose();
      hv_len1LeftBase = 150;
      hv_len2LeftBase.Dispose();
      hv_len2LeftBase = 281;

      hv_row1LeftBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1LeftBase1 = 4216-hv_modelRow;
      }
      hv_col1LeftBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1LeftBase1 = 995-hv_modelCol;
      }
      hv_radianLeftBase1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianLeftBase1 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_len1LeftBase1.Dispose();
      hv_len1LeftBase1 = 150;
      hv_len2LeftBase1.Dispose();
      hv_len2LeftBase1 = 281;

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_row1LeftBase = hv_row1LeftBase.TupleConcat(
          hv_row1LeftBase1);
      hv_row1LeftBase.Dispose();
      hv_row1LeftBase = ExpTmpLocalVar_row1LeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_col1LeftBase = hv_col1LeftBase.TupleConcat(
          hv_col1LeftBase1);
      hv_col1LeftBase.Dispose();
      hv_col1LeftBase = ExpTmpLocalVar_col1LeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_radianLeftBase = hv_radianLeftBase.TupleConcat(
          hv_radianLeftBase1);
      hv_radianLeftBase.Dispose();
      hv_radianLeftBase = ExpTmpLocalVar_radianLeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len1LeftBase = hv_len1LeftBase.TupleConcat(
          hv_len1LeftBase1);
      hv_len1LeftBase.Dispose();
      hv_len1LeftBase = ExpTmpLocalVar_len1LeftBase;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_len2LeftBase = hv_len2LeftBase.TupleConcat(
          hv_len2LeftBase1);
      hv_len2LeftBase.Dispose();
      hv_len2LeftBase = ExpTmpLocalVar_len2LeftBase;
      }
      }


      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_row1LeftBase, hv_col1LeftBase, hv_radianLeftBase, hv_len1LeftBase, 
          hv_len2LeftBase, hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_row1LeftBase.Dispose();
      hv_row1LeftBase = ExpTmpOutVar_0;
      hv_col1LeftBase.Dispose();
      hv_col1LeftBase = ExpTmpOutVar_1;
      hv_radianLeftBase.Dispose();
      hv_radianLeftBase = ExpTmpOutVar_2;
      hv_len1LeftBase.Dispose();
      hv_len1LeftBase = ExpTmpOutVar_3;
      hv_len2LeftBase.Dispose();
      hv_len2LeftBase = ExpTmpOutVar_4;
      }
      //gen_rectangle2 (Rectangle1, row1LeftBase, col1LeftBase, radianLeftBase, len1LeftBase, len2LeftBase)

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("LeftBase", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegionLeft, lineRegionLeft, 'negative', row1LeftBase, col1LeftBase, radianLeftBase, len1LeftBase, len2LeftBase, 10, [threshValue, threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly3, lineX1LeftBase, lineY1LeftBase, lineX2LeftBase, lineY2LeftBase, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      ho_FindLineRegions.Dispose();
      HOperatorSet.ConcatObj(ho_findLineRegionTop, ho_findLineRegionLeft, out ho_FindLineRegions
          );
      ho_LineRegions.Dispose();
      HOperatorSet.ConcatObj(ho_lineRegionTop, ho_lineRegionLeft, out ho_LineRegions
          );
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }


      //******************************FAI21*******************************
      //left
      hv_row1FAI21LeftUpper.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1FAI21LeftUpper = 2825-hv_modelRow;
      }
      hv_col1FAI21LeftUpper.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1FAI21LeftUpper = 1033-hv_modelCol;
      }
      hv_radianFAI21LeftUpper.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianFAI21LeftUpper = (new HTuple(178.5)).TupleRad()
          ;
      }
      hv_len1FAI21LeftUpper.Dispose();
      hv_len1FAI21LeftUpper = 210;
      hv_len2FAI21LeftUpper.Dispose();
      hv_len2FAI21LeftUpper = 140;

      hv_row1FAI21LeftLower.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1FAI21LeftLower = 4009-hv_modelRow;
      }
      hv_col1FAI21LeftLower.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1FAI21LeftLower = 1052-hv_modelCol;
      }
      hv_radianFAI21LeftLower.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianFAI21LeftLower = (new HTuple(178)).TupleRad()
          ;
      }
      hv_len1FAI21LeftLower.Dispose();
      hv_len1FAI21LeftLower = 210;
      hv_len2FAI21LeftLower.Dispose();
      hv_len2FAI21LeftLower = 115;
      hv_row1FAI21Left.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1FAI21Left = new HTuple();
      hv_row1FAI21Left = hv_row1FAI21Left.TupleConcat(hv_row1FAI21LeftUpper, hv_row1FAI21LeftLower);
      }
      hv_col1FAI21Left.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1FAI21Left = new HTuple();
      hv_col1FAI21Left = hv_col1FAI21Left.TupleConcat(hv_col1FAI21LeftUpper, hv_col1FAI21LeftLower);
      }
      hv_radianFAI21Left.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianFAI21Left = new HTuple();
      hv_radianFAI21Left = hv_radianFAI21Left.TupleConcat(hv_radianFAI21LeftUpper, hv_radianFAI21LeftLower);
      }
      hv_len1FAI21Left.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_len1FAI21Left = new HTuple();
      hv_len1FAI21Left = hv_len1FAI21Left.TupleConcat(hv_len1FAI21LeftUpper, hv_len1FAI21LeftLower);
      }
      hv_len2FAI21Left.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_len2FAI21Left = new HTuple();
      hv_len2FAI21Left = hv_len2FAI21Left.TupleConcat(hv_len2FAI21LeftUpper, hv_len2FAI21LeftLower);
      }
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_row1FAI21Left, hv_col1FAI21Left, hv_radianFAI21Left, hv_len1FAI21Left, 
          hv_len2FAI21Left, hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_row1FAI21Left.Dispose();
      hv_row1FAI21Left = ExpTmpOutVar_0;
      hv_col1FAI21Left.Dispose();
      hv_col1FAI21Left = ExpTmpOutVar_1;
      hv_radianFAI21Left.Dispose();
      hv_radianFAI21Left = ExpTmpOutVar_2;
      hv_len1FAI21Left.Dispose();
      hv_len1FAI21Left = ExpTmpOutVar_3;
      hv_len2FAI21Left.Dispose();
      hv_len2FAI21Left = ExpTmpOutVar_4;
      }

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("21-left", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'negative', row1FAI21Left, col1FAI21Left, radianFAI21Left, len1FAI21Left, len2FAI21Left, 10, [threshValue, threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly4, lineX1_FAI21_LEFT, lineY1_FAI21_LEFT, lineX2_FAI21_LEFT, lineY2_FAI21_LEFT, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      //right
      hv_row1FAI21RightUpper.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1FAI21RightUpper = 2869-hv_modelRow;
      }
      hv_col1FAI21RightUpper.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1FAI21RightUpper = 3305-hv_modelCol;
      }
      hv_radianFAI21RightUpper.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianFAI21RightUpper = (new HTuple(-1.5)).TupleRad()
          ;
      }
      hv_len1FAI21RightUpper.Dispose();
      hv_len1FAI21RightUpper = 243;
      hv_len2FAI21RightUpper.Dispose();
      hv_len2FAI21RightUpper = 121;

      hv_row1FAI21RightLower.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1FAI21RightLower = 4034-hv_modelRow;
      }
      hv_col1FAI21RightLower.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1FAI21RightLower = 3285-hv_modelCol;
      }
      hv_radianFAI21RightLower.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianFAI21RightLower = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_len1FAI21RightLower.Dispose();
      hv_len1FAI21RightLower = 243;
      hv_len2FAI21RightLower.Dispose();
      hv_len2FAI21RightLower = 121;

      hv_row1FAI21Right.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_row1FAI21Right = new HTuple();
      hv_row1FAI21Right = hv_row1FAI21Right.TupleConcat(hv_row1FAI21RightUpper, hv_row1FAI21RightLower);
      }
      hv_col1FAI21Right.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_col1FAI21Right = new HTuple();
      hv_col1FAI21Right = hv_col1FAI21Right.TupleConcat(hv_col1FAI21RightUpper, hv_col1FAI21RightLower);
      }
      hv_radianFAI21Right.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianFAI21Right = new HTuple();
      hv_radianFAI21Right = hv_radianFAI21Right.TupleConcat(hv_radianFAI21RightUpper, hv_radianFAI21RightLower);
      }
      hv_len1FAI21Right.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_len1FAI21Right = new HTuple();
      hv_len1FAI21Right = hv_len1FAI21Right.TupleConcat(hv_len1FAI21RightUpper, hv_len1FAI21RightLower);
      }
      hv_len2FAI21Right.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_len2FAI21Right = new HTuple();
      hv_len2FAI21Right = hv_len2FAI21Right.TupleConcat(hv_len2FAI21RightUpper, hv_len2FAI21RightLower);
      }
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_row1FAI21Right, hv_col1FAI21Right, hv_radianFAI21Right, 
          hv_len1FAI21Right, hv_len2FAI21Right, hv_MovementOfItem, out ExpTmpOutVar_0, 
          out ExpTmpOutVar_1, out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_row1FAI21Right.Dispose();
      hv_row1FAI21Right = ExpTmpOutVar_0;
      hv_col1FAI21Right.Dispose();
      hv_col1FAI21Right = ExpTmpOutVar_1;
      hv_radianFAI21Right.Dispose();
      hv_radianFAI21Right = ExpTmpOutVar_2;
      hv_len1FAI21Right.Dispose();
      hv_len1FAI21Right = ExpTmpOutVar_3;
      hv_len2FAI21Right.Dispose();
      hv_len2FAI21Right = ExpTmpOutVar_4;
      }

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("21-right", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'negative', row1FAI21Right, col1FAI21Right, radianFAI21Right, len1FAI21Right, len2FAI21Right, 10, [threshValue, threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly5, lineX1_FAI21_Right, lineY1_FAI21_Right, lineX2_FAI21_Right, lineY2_FAI21_Right, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      //Mid

      hv_X1_FAI21_LINE_H_P1.Dispose();hv_Y1_FAI21_LINE_H_P1.Dispose();hv_X2_FAI21_LINE_H_P1.Dispose();hv_Y2_FAI21_LINE_H_P1.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI21_P1_LEN, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_X1_FAI21_LINE_H_P1, out hv_Y1_FAI21_LINE_H_P1, out hv_X2_FAI21_LINE_H_P1, 
          out hv_Y2_FAI21_LINE_H_P1);
      hv_X1_FAI21_LINE_H_P3.Dispose();hv_Y1_FAI21_LINE_H_P3.Dispose();hv_X2_FAI21_LINE_H_P3.Dispose();hv_Y2_FAI21_LINE_H_P3.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI21_P3_LEN, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_X1_FAI21_LINE_H_P3, out hv_Y1_FAI21_LINE_H_P3, out hv_X2_FAI21_LINE_H_P3, 
          out hv_Y2_FAI21_LINE_H_P3);

      //Left intersections and distances
      hv_intersectY_LEFT.Dispose();hv_intersectX_LEFT.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI21_LEFT, hv_lineX1_FAI21_LEFT, 
          hv_lineY2_FAI21_LEFT, hv_lineX2_FAI21_LEFT, hv_Y1_FAI21_LINE_H_P1, hv_X1_FAI21_LINE_H_P1, 
          hv_Y2_FAI21_LINE_H_P1, hv_X2_FAI21_LINE_H_P1, out hv_intersectY_LEFT, out hv_intersectX_LEFT, 
          out hv_IsOverlapping);
      hv_intersectY_RIGHT.Dispose();hv_intersectX_RIGHT.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI21_Right, hv_lineX1_FAI21_Right, 
          hv_lineY2_FAI21_Right, hv_lineX2_FAI21_Right, hv_Y1_FAI21_LINE_H_P1, hv_X1_FAI21_LINE_H_P1, 
          hv_Y2_FAI21_LINE_H_P1, hv_X2_FAI21_LINE_H_P1, out hv_intersectY_RIGHT, 
          out hv_intersectX_RIGHT, out hv_IsOverlapping);
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_intersectY_LEFT, hv_intersectX_LEFT, hv_intersectY_RIGHT, 
          hv_intersectX_RIGHT, hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_lineY1TopBase, hv_lineX1TopBase, hv_lineY2TopBase, 
          hv_lineX2TopBase, hv_intersectY_LEFT, hv_intersectX_LEFT, hv_intersectY_RIGHT, 
          hv_intersectX_RIGHT, out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX_LEFT);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY_LEFT);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX_RIGHT);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY_RIGHT);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }


      hv_intersectY_LEFT.Dispose();hv_intersectX_LEFT.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI21_LEFT, hv_lineX1_FAI21_LEFT, 
          hv_lineY2_FAI21_LEFT, hv_lineX2_FAI21_LEFT, hv_Y1_FAI21_LINE_H_P3, hv_X1_FAI21_LINE_H_P3, 
          hv_Y2_FAI21_LINE_H_P3, hv_X2_FAI21_LINE_H_P3, out hv_intersectY_LEFT, out hv_intersectX_LEFT, 
          out hv_IsOverlapping);
      hv_intersectY_RIGHT.Dispose();hv_intersectX_RIGHT.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI21_Right, hv_lineX1_FAI21_Right, 
          hv_lineY2_FAI21_Right, hv_lineX2_FAI21_Right, hv_Y1_FAI21_LINE_H_P3, hv_X1_FAI21_LINE_H_P3, 
          hv_Y2_FAI21_LINE_H_P3, hv_X2_FAI21_LINE_H_P3, out hv_intersectY_RIGHT, 
          out hv_intersectX_RIGHT, out hv_IsOverlapping);
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_intersectY_LEFT, hv_intersectX_LEFT, hv_intersectY_RIGHT, 
          hv_intersectX_RIGHT, hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_lineY1TopBase, hv_lineX1TopBase, hv_lineY2TopBase, 
          hv_lineX2TopBase, hv_intersectY_LEFT, hv_intersectX_LEFT, hv_intersectY_RIGHT, 
          hv_intersectX_RIGHT, out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX_LEFT);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY_LEFT);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX_RIGHT);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY_RIGHT);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }


      //************************FAI23****************************
      //Top line
      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 2210-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 2210-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(-91)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 230;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 549;

      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("23-top", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'positive', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, threshValue, 'first', ignorePortion, 'false', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, kernelWidth5, longestOnly6, lineX1_FAI23_TOP, lineY1_FAI23_TOP, lineX2_FAI23_TOP, lineY2_FAI23_TOP, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      //FindLineAdaptiveSingle (Image, findLineRegion, lineRegion, lineContours, rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, 'positive', 20, 2, 2, 'first', 0.8, 0.2, newWidth, 20, 40, -1, longestOnly, lineX1_FAI23_TOP, lineY1_FAI23_TOP, lineX2_FAI23_TOP, lineY2_FAI23_TOP, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineContours, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      //Bottom line
      hv_rect1X1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect1X1 = 1602-hv_modelCol;
      }
      hv_rect1Y1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect1Y1 = 4603-hv_modelRow;
      }
      hv_rect1Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect1Radian = (new HTuple(-90)).TupleRad()
          ;
      }
      hv_rect1Len1.Dispose();
      hv_rect1Len1 = 150;
      hv_rect1Len2.Dispose();
      hv_rect1Len2 = 102;

      hv_rect2X1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect2X1 = 2178-hv_modelCol;
      }
      hv_rect2Y1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect2Y1 = 4617-hv_modelRow;
      }
      hv_rect2Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect2Radian = (new HTuple(-90)).TupleRad()
          ;
      }
      hv_rect2Len1.Dispose();
      hv_rect2Len1 = 150;
      hv_rect2Len2.Dispose();
      hv_rect2Len2 = 150;

      hv_rect3X1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect3X1 = 2709-hv_modelCol;
      }
      hv_rect3Y1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect3Y1 = 4623-hv_modelRow;
      }
      hv_rect3Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect3Radian = (new HTuple(-90)).TupleRad()
          ;
      }
      hv_rect3Len1.Dispose();
      hv_rect3Len1 = 150;
      hv_rect3Len2.Dispose();
      hv_rect3Len2 = 102;

      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = new HTuple();
      hv_rectX1 = hv_rectX1.TupleConcat(hv_rect1X1, hv_rect2X1, hv_rect3X1);
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = new HTuple();
      hv_rectY1 = hv_rectY1.TupleConcat(hv_rect1Y1, hv_rect2Y1, hv_rect3Y1);
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = new HTuple();
      hv_rectRadian = hv_rectRadian.TupleConcat(hv_rect1Radian, hv_rect2Radian, hv_rect3Radian);
      }
      hv_rectLen1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectLen1 = new HTuple();
      hv_rectLen1 = hv_rectLen1.TupleConcat(hv_rect1Len1, hv_rect2Len1, hv_rect3Len1);
      }
      hv_rectLen2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectLen2 = new HTuple();
      hv_rectLen2 = hv_rectLen2.TupleConcat(hv_rect1Len2, hv_rect2Len2, hv_rect3Len2);
      }
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("23-bottom", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'negative', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, [threshValue,threshValue,threshValue], 'first', ignorePortion, 'false', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly7, lineX1_FAI23_BOTTOM, lineY1_FAI23_BOTTOM, lineX2_FAI23_BOTTOM, lineY2_FAI23_BOTTOM, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      //Intersection points
      //TranslateLineInWorldCoordinateAndConvertBack (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, FAI23_MID_LEN, MapToWorld, MapToImage, 'false', X1_FAI23_LINE_H, Y1_FAI23_LINE_H, X2_FAI23_LINE_H, Y2_FAI23_LINE_H)

      hv_X1_FAI23_P1.Dispose();hv_Y1_FAI23_P1.Dispose();hv_X2_FAI23_P1.Dispose();hv_Y2_FAI23_P1.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI23_P1_LEN, hv_MapToWorld, hv_MapToImage, 
          "true", out hv_X1_FAI23_P1, out hv_Y1_FAI23_P1, out hv_X2_FAI23_P1, out hv_Y2_FAI23_P1);
      //TranslateLineInWorldCoordinateAndConvertBack (lineX1LeftBase, lineY1LeftBase, lineX2LeftBase, lineY2LeftBase, FAI23_P2_LEN, MapToWorld, MapToImage, 'true', X1_FAI23_P2, Y1_FAI23_P2, X2_FAI23_P2, Y2_FAI23_P2)
      hv_X1_FAI23_P3.Dispose();hv_Y1_FAI23_P3.Dispose();hv_X2_FAI23_P3.Dispose();hv_Y2_FAI23_P3.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI23_P3_LEN, hv_MapToWorld, hv_MapToImage, 
          "true", out hv_X1_FAI23_P3, out hv_Y1_FAI23_P3, out hv_X2_FAI23_P3, out hv_Y2_FAI23_P3);




      //BOTTOM intersections and distances
      hv_intersectY_TOP.Dispose();hv_intersectX_TOP.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI23_TOP, hv_lineX1_FAI23_TOP, hv_lineY2_FAI23_TOP, 
          hv_lineX2_FAI23_TOP, hv_Y1_FAI23_P1, hv_X1_FAI23_P1, hv_Y2_FAI23_P1, hv_X2_FAI23_P1, 
          out hv_intersectY_TOP, out hv_intersectX_TOP, out hv_IsOverlapping);
      hv_intersectY_BOTTOM.Dispose();hv_intersectX_BOTTOM.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI23_BOTTOM, hv_lineX1_FAI23_BOTTOM, 
          hv_lineY2_FAI23_BOTTOM, hv_lineX2_FAI23_BOTTOM, hv_Y1_FAI23_P1, hv_X1_FAI23_P1, 
          hv_Y2_FAI23_P1, hv_X2_FAI23_P1, out hv_intersectY_BOTTOM, out hv_intersectX_BOTTOM, 
          out hv_IsOverlapping);
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_intersectY_TOP, hv_intersectX_TOP, hv_intersectY_BOTTOM, 
          hv_intersectX_BOTTOM, hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_intersectY_TOP, hv_intersectX_TOP, hv_intersectY_BOTTOM, 
          hv_intersectX_BOTTOM, hv_lineY1LeftBase, hv_lineX1LeftBase, hv_lineY2LeftBase, 
          hv_lineX2LeftBase, out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX_TOP);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY_TOP);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX_BOTTOM);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY_BOTTOM);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }


      hv_intersectY_TOP.Dispose();hv_intersectX_TOP.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI23_TOP, hv_lineX1_FAI23_TOP, hv_lineY2_FAI23_TOP, 
          hv_lineX2_FAI23_TOP, hv_Y1_FAI23_P3, hv_X1_FAI23_P3, hv_Y2_FAI23_P3, hv_X2_FAI23_P3, 
          out hv_intersectY_TOP, out hv_intersectX_TOP, out hv_IsOverlapping);
      hv_intersectY_BOTTOM.Dispose();hv_intersectX_BOTTOM.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI23_BOTTOM, hv_lineX1_FAI23_BOTTOM, 
          hv_lineY2_FAI23_BOTTOM, hv_lineX2_FAI23_BOTTOM, hv_Y1_FAI23_P3, hv_X1_FAI23_P3, 
          hv_Y2_FAI23_P3, hv_X2_FAI23_P3, out hv_intersectY_BOTTOM, out hv_intersectX_BOTTOM, 
          out hv_IsOverlapping);
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_intersectY_TOP, hv_intersectX_TOP, hv_intersectY_BOTTOM, 
          hv_intersectX_BOTTOM, hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_intersectY_TOP, hv_intersectX_TOP, hv_intersectY_BOTTOM, 
          hv_intersectX_BOTTOM, hv_lineY1LeftBase, hv_lineX1LeftBase, hv_lineY2LeftBase, 
          hv_lineX2LeftBase, out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX_TOP);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY_TOP);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX_BOTTOM);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY_BOTTOM);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }

      //*****************************FAI24************************
      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 1429-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 1148-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 153;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 140;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("24-left", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'positive', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, threshValue, 'first', ignorePortion, 'true', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly8, lineX1_FAI24_LEFT, lineY1_FAI24_LEFT, lineX2_FAI24_LEFT, lineY2_FAI24_LEFT, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 2991-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 1186-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(179)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 147;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 140;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("24-right", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'positive', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, threshValue, 'first', ignorePortion, 'true', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly9, lineX1_FAI24_RIGHT, lineY1_FAI24_RIGHT, lineX2_FAI24_RIGHT, lineY2_FAI24_RIGHT, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      hv_X1_FAI24_LINE_H_P2.Dispose();hv_Y1_FAI24_LINE_H_P2.Dispose();hv_X2_FAI24_LINE_H_P2.Dispose();hv_Y2_FAI24_LINE_H_P2.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI24_P2_LEN, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_X1_FAI24_LINE_H_P2, out hv_Y1_FAI24_LINE_H_P2, out hv_X2_FAI24_LINE_H_P2, 
          out hv_Y2_FAI24_LINE_H_P2);


      hv_intersectY_LEFT.Dispose();hv_intersectX_LEFT.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI24_LEFT, hv_lineX1_FAI24_LEFT, 
          hv_lineY2_FAI24_LEFT, hv_lineX2_FAI24_LEFT, hv_Y1_FAI24_LINE_H_P2, hv_X1_FAI24_LINE_H_P2, 
          hv_Y2_FAI24_LINE_H_P2, hv_X2_FAI24_LINE_H_P2, out hv_intersectY_LEFT, out hv_intersectX_LEFT, 
          out hv_IsOverlapping);
      hv_intersectY_RIGHT.Dispose();hv_intersectX_RIGHT.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI24_RIGHT, hv_lineX1_FAI24_RIGHT, 
          hv_lineY2_FAI24_RIGHT, hv_lineX2_FAI24_RIGHT, hv_Y1_FAI24_LINE_H_P2, hv_X1_FAI24_LINE_H_P2, 
          hv_Y2_FAI24_LINE_H_P2, hv_X2_FAI24_LINE_H_P2, out hv_intersectY_RIGHT, 
          out hv_intersectX_RIGHT, out hv_IsOverlapping);
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_intersectY_LEFT, hv_intersectX_LEFT, hv_intersectY_RIGHT, 
          hv_intersectX_RIGHT, hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_intersectY_LEFT, hv_intersectX_LEFT, hv_intersectY_RIGHT, 
          hv_intersectX_RIGHT, hv_lineY1TopBase, hv_lineX1TopBase, hv_lineY2TopBase, 
          hv_lineX2TopBase, out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX_LEFT);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY_LEFT);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX_RIGHT);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY_RIGHT);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }



      //***************************FAI25************************
      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 2195-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 1202-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(-90)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 900;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 600;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }

      ho_ROI_0.Dispose();
      HOperatorSet.GenRectangle2(out ho_ROI_0, hv_rectY1, hv_rectX1, hv_rectRadian, 
          hv_rectLen1, hv_rectLen2);
      ho_ImageReduced1.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_ROI_0, out ho_ImageReduced1
          );
      ho_ImageMean1.Dispose();
      HOperatorSet.MeanImage(ho_ImageReduced1, out ho_ImageMean1, 9, 9);
      ho_mask.Dispose();
      HOperatorSet.Threshold(ho_ImageMean1, out ho_mask, 70, 255);
      ho_ImageReduced2.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_mask, out ho_ImageReduced2
          );
      ho_Edges2.Dispose();
      HOperatorSet.EdgesSubPix(ho_ImageReduced2, out ho_Edges2, "canny", 3, 15, 30);
      ho_SelectedContours.Dispose();
      HOperatorSet.SelectContoursXld(ho_Edges2, out ho_SelectedContours, "contour_length", 
          500, 999999, -0.5, 0.5);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_UnionContours.Dispose();
      HOperatorSet.UnionCocircularContoursXld(ho_SelectedContours, out ho_UnionContours, 
          (new HTuple(180)).TupleRad(), (new HTuple(5)).TupleRad(), (new HTuple(180)).TupleRad()
          , 2000, 10, 50, "true", 3);
      }
      ho_outputContour.Dispose();hv_contourLength.Dispose();
      LongestXLD(ho_UnionContours, out ho_outputContour, out hv_contourLength);
      hv_Row.Dispose();hv_Column.Dispose();hv_Radius.Dispose();hv_StartPhi.Dispose();hv_EndPhi.Dispose();hv_PointOrder.Dispose();
      HOperatorSet.FitCircleContourXld(ho_outputContour, "algebraic", -1, 0, 0, 3, 
          2, out hv_Row, out hv_Column, out hv_Radius, out hv_StartPhi, out hv_EndPhi, 
          out hv_PointOrder);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_ContCircle.Dispose();
      HOperatorSet.GenCircleContourXld(out ho_ContCircle, hv_Row, hv_Column, hv_Radius, 
          hv_StartPhi, hv_StartPhi+((new HTuple(360)).TupleRad()), "positive", 1);
      }

      ho_Circle.Dispose();
      HOperatorSet.GenCircle(out ho_Circle, hv_Row, hv_Column, hv_Radius);
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_Circle, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      hv_diameterPixel.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_diameterPixel = hv_Radius*2;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_diameterPixel*hv_XCoeff);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }

      hv_FAI25_H_X1.Dispose();hv_FAI25_H_Y1.Dispose();hv_FAI25_H_X2.Dispose();hv_FAI25_H_Y2.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI25_Y_LEN, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_FAI25_H_X1, out hv_FAI25_H_Y1, out hv_FAI25_H_X2, out hv_FAI25_H_Y2);
      hv_FAI25_V_X1.Dispose();hv_FAI25_V_Y1.Dispose();hv_FAI25_V_X2.Dispose();hv_FAI25_V_Y2.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI25_X_LEN, hv_MapToWorld, hv_MapToImage, 
          "true", out hv_FAI25_V_X1, out hv_FAI25_V_Y1, out hv_FAI25_V_X2, out hv_FAI25_V_Y2);

      hv_DistanceX.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_FAI25_V_X1, hv_FAI25_V_Y1, hv_FAI25_V_X2, hv_FAI25_V_Y2, 
          hv_Column, hv_Row, hv_MapToWorld, out hv_DistanceX, out hv_distancePixel);
      hv_DistanceY.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_FAI25_H_X1, hv_FAI25_H_Y1, hv_FAI25_H_X2, hv_FAI25_H_Y2, 
          hv_Column, hv_Row, hv_MapToWorld, out hv_DistanceY, out hv_distancePixel);

      hv_distance.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_distance = (((hv_DistanceY*hv_DistanceY)+(hv_DistanceX*hv_DistanceX))).TupleSqrt()
          ;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }





      //*****************************FAI26***********************
      hv_X1_FAI26_LEFT.Dispose();hv_Y1_FAI26_LEFT.Dispose();hv_X2_FAI26_LEFT.Dispose();hv_Y2_FAI26_LEFT.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1_FAI24_LEFT, hv_lineY1_FAI24_LEFT, 
          hv_lineX2_FAI24_LEFT, hv_lineY2_FAI24_LEFT, hv_FAI26_LEN, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_X1_FAI26_LEFT, out hv_Y1_FAI26_LEFT, out hv_X2_FAI26_LEFT, 
          out hv_Y2_FAI26_LEFT);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_X1_FAI26_RIGHT.Dispose();hv_Y1_FAI26_RIGHT.Dispose();hv_X2_FAI26_RIGHT.Dispose();hv_Y2_FAI26_RIGHT.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1_FAI24_RIGHT, hv_lineY1_FAI24_RIGHT, 
          hv_lineX2_FAI24_RIGHT, hv_lineY2_FAI24_RIGHT, -hv_FAI26_LEN, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_X1_FAI26_RIGHT, out hv_Y1_FAI26_RIGHT, out hv_X2_FAI26_RIGHT, 
          out hv_Y2_FAI26_RIGHT);
      }
      ho_lineRegion1.Dispose();
      GenLineRegion(out ho_lineRegion1, hv_X1_FAI26_LEFT, hv_Y1_FAI26_LEFT, hv_X2_FAI26_LEFT, 
          hv_Y2_FAI26_LEFT, 5120, 5120);

      //top left point
      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 1500-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 941-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(0)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 256;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 160;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }
      ho_ROI_FAI26_TL.Dispose();
      HOperatorSet.GenRectangle2(out ho_ROI_FAI26_TL, hv_rectY1, hv_rectX1, hv_rectRadian, 
          hv_rectLen1, hv_rectLen2);
      ho_ImageReduced.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_ROI_FAI26_TL, out ho_ImageReduced
          );
      ho_Edges1.Dispose();
      HOperatorSet.EdgesSubPix(ho_ImageReduced, out ho_Edges1, "canny", 1, 20, 40);
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_Edges1, out ExpTmpOutVar_0);
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;hv_contourLength1.Dispose();
      LongestXLD(ho_Edges1, out ExpTmpOutVar_0, out hv_contourLength1);
      ho_Edges1.Dispose();
      ho_Edges1 = ExpTmpOutVar_0;
      }
      hv_rowTL_FAI26.Dispose();hv_colTL_FAI26.Dispose();hv_IsOverlapping3.Dispose();
      HOperatorSet.IntersectionLineContourXld(ho_Edges1, hv_Y1_FAI26_LEFT, hv_X1_FAI26_LEFT, 
          hv_Y2_FAI26_LEFT, hv_X2_FAI26_LEFT, out hv_rowTL_FAI26, out hv_colTL_FAI26, 
          out hv_IsOverlapping3);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_colTL_FAI26);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_rowTL_FAI26);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      ho_Cross1.Dispose();
      HOperatorSet.GenCrossContourXld(out ho_Cross1, hv_rowTL_FAI26, hv_colTL_FAI26, 
          100, 0);

      //bottom left point
      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 1467-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 1372-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(0)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 135;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 80;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }
      ho_ROI_FAI26_BL.Dispose();
      HOperatorSet.GenRectangle2(out ho_ROI_FAI26_BL, hv_rectY1, hv_rectX1, hv_rectRadian, 
          hv_rectLen1, hv_rectLen2);

      ho_ImageReduced.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_ROI_FAI26_BL, out ho_ImageReduced
          );
      ho_Edges1.Dispose();
      HOperatorSet.EdgesSubPix(ho_ImageReduced, out ho_Edges1, "canny", 1, 20, 40);
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_Edges1, out ExpTmpOutVar_0);
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;hv_contourLength2.Dispose();
      LongestXLD(ho_Edges1, out ExpTmpOutVar_0, out hv_contourLength2);
      ho_Edges1.Dispose();
      ho_Edges1 = ExpTmpOutVar_0;
      }
      hv_rowBL_FAI26.Dispose();hv_colBL_FAI26.Dispose();hv_IsOverlapping3.Dispose();
      HOperatorSet.IntersectionLineContourXld(ho_Edges1, hv_Y1_FAI26_LEFT, hv_X1_FAI26_LEFT, 
          hv_Y2_FAI26_LEFT, hv_X2_FAI26_LEFT, out hv_rowBL_FAI26, out hv_colBL_FAI26, 
          out hv_IsOverlapping3);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_colBL_FAI26);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_rowBL_FAI26);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      ho_Cross2.Dispose();
      HOperatorSet.GenCrossContourXld(out ho_Cross2, hv_rowBL_FAI26, hv_colBL_FAI26, 
          100, 100);

      //top RIGHT point
      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 2918-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 965-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(0)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 217;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 134;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }
      ho_ROI_FAI26_TR.Dispose();
      HOperatorSet.GenRectangle2(out ho_ROI_FAI26_TR, hv_rectY1, hv_rectX1, hv_rectRadian, 
          hv_rectLen1, hv_rectLen2);

      ho_ImageReduced.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_ROI_FAI26_TR, out ho_ImageReduced
          );
      ho_Edges1.Dispose();
      HOperatorSet.EdgesSubPix(ho_ImageReduced, out ho_Edges1, "canny", 1, 20, 40);
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_Edges1, out ExpTmpOutVar_0);
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }

      {
      HObject ExpTmpOutVar_0;hv_contourLength3.Dispose();
      LongestXLD(ho_Edges1, out ExpTmpOutVar_0, out hv_contourLength3);
      ho_Edges1.Dispose();
      ho_Edges1 = ExpTmpOutVar_0;
      }
      hv_rowTR_FAI26.Dispose();hv_colTR_FAI26.Dispose();hv_IsOverlapping3.Dispose();
      HOperatorSet.IntersectionLineContourXld(ho_Edges1, hv_Y1_FAI26_RIGHT, hv_X1_FAI26_RIGHT, 
          hv_Y2_FAI26_RIGHT, hv_X2_FAI26_RIGHT, out hv_rowTR_FAI26, out hv_colTR_FAI26, 
          out hv_IsOverlapping3);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_colTR_FAI26);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_rowTR_FAI26);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      ho_Cross3.Dispose();
      HOperatorSet.GenCrossContourXld(out ho_Cross3, hv_rowTR_FAI26, hv_colTR_FAI26, 
          100, 0);

      //bottom RIGHT point
      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 2888-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 1416-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(0)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 217;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 134;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }
      ho_ROI_FAI26_BR.Dispose();
      HOperatorSet.GenRectangle2(out ho_ROI_FAI26_BR, hv_rectY1, hv_rectX1, hv_rectRadian, 
          hv_rectLen1, hv_rectLen2);
      ho_ImageReduced.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_ROI_FAI26_BR, out ho_ImageReduced
          );
      ho_Edges1.Dispose();
      HOperatorSet.EdgesSubPix(ho_ImageReduced, out ho_Edges1, "canny", 1, 20, 40);
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_Edges1, out ExpTmpOutVar_0);
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }

      {
      HObject ExpTmpOutVar_0;hv_contourLength4.Dispose();
      LongestXLD(ho_Edges1, out ExpTmpOutVar_0, out hv_contourLength4);
      ho_Edges1.Dispose();
      ho_Edges1 = ExpTmpOutVar_0;
      }
      hv_rowBR_FAI26.Dispose();hv_colBR_FAI26.Dispose();hv_IsOverlapping3.Dispose();
      HOperatorSet.IntersectionLineContourXld(ho_Edges1, hv_Y1_FAI26_RIGHT, hv_X1_FAI26_RIGHT, 
          hv_Y2_FAI26_RIGHT, hv_X2_FAI26_RIGHT, out hv_rowBR_FAI26, out hv_colBR_FAI26, 
          out hv_IsOverlapping3);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_colBR_FAI26);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_rowBR_FAI26);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }

      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_rowTL_FAI26, hv_colTL_FAI26, hv_rowBL_FAI26, hv_colBL_FAI26, 
          hv_lineY1LeftBase, hv_lineX1LeftBase, hv_lineY2LeftBase, hv_lineX2LeftBase, 
          out hv_Angle);
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_rowTL_FAI26, hv_colTL_FAI26, hv_rowBL_FAI26, hv_colBL_FAI26, 
          hv_MapToWorld, out hv_Distance);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }

      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_rowTR_FAI26, hv_colTR_FAI26, hv_rowBR_FAI26, hv_colBR_FAI26, 
          hv_lineY1LeftBase, hv_lineX1LeftBase, hv_lineY2LeftBase, hv_lineX2LeftBase, 
          out hv_Angle);
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_rowTR_FAI26, hv_colTR_FAI26, hv_rowBR_FAI26, hv_colBR_FAI26, 
          hv_MapToWorld, out hv_Distance);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }
      //**********************FAI27***************************
      //Top line
      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 4137-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 1770-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(-90)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 108;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 144;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("27-top", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'positive', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, threshValue, 'first', ignorePortion, 'false', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly10, lineX1_FAI27_TOP, lineY1_FAI27_TOP, lineX2_FAI27_TOP, lineY2_FAI27_TOP, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      //Bottom line

      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 4129-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 2862-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(90)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 121;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 150;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("27-bottom", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'positive', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, threshValue, 'first', ignorePortion, 'false', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly11, lineX1_FAI27_BOTTOM, lineY1_FAI27_BOTTOM, lineX2_FAI27_BOTTOM, lineY2_FAI27_BOTTOM, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      //Intersection points

      ho_ROI_0.Dispose();
      HOperatorSet.GenRectangle1(out ho_ROI_0, 1077.9, 2786.7, 3970.7, 4905.1);
      ho_ImageReduced.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_ROI_0, out ho_ImageReduced
          );
      ho_Region.Dispose();
      HOperatorSet.Threshold(ho_ImageReduced, out ho_Region, 100, 255);
      ho_ConnectedRegions.Dispose();
      HOperatorSet.Connection(ho_Region, out ho_ConnectedRegions);

      ho_SelectedRegions.Dispose();
      HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, "area", 
          "and", 800000, 1200000);
      ho_RegionDilation.Dispose();
      HOperatorSet.DilationCircle(ho_SelectedRegions, out ho_RegionDilation, 35);

      ho_image_intersection.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_RegionDilation, out ho_image_intersection
          );
      ho_Edges.Dispose();
      HOperatorSet.EdgesSubPix(ho_image_intersection, out ho_Edges, "canny", 1, 10, 
          20);

      ho_UnionContours2.Dispose();
      HOperatorSet.UnionAdjacentContoursXld(ho_Edges, out ho_UnionContours2, 1000, 
          1000, "attr_keep");
      ho_SelectedXLD.Dispose();hv_contourLength5.Dispose();
      LongestXLD(ho_UnionContours2, out ho_SelectedXLD, out hv_contourLength5);
      hv_rowRightCircle.Dispose();hv_colRightCircle.Dispose();hv_radRightCircle.Dispose();
      HOperatorSet.SmallestCircleXld(ho_SelectedXLD, out hv_rowRightCircle, out hv_colRightCircle, 
          out hv_radRightCircle);
      //fit_circle_contour_xld (SelectedXLD, 'algebraic', -1, 0, 0, 3, 2, rowRightCircle, colRightCircle, radRightCircle, StartPhi1, EndPhi1, PointOrder1)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_ContCircle1.Dispose();
      HOperatorSet.GenCircleContourXld(out ho_ContCircle1, hv_rowRightCircle, hv_colRightCircle, 
          hv_radRightCircle, 0, (new HTuple(360)).TupleRad(), "positive", 1);
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_ContCircle1, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }

      hv_X1_FAI27_P2.Dispose();hv_Y1_FAI27_P2.Dispose();hv_X2_FAI27_P2.Dispose();hv_Y2_FAI27_P2.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI27_P2_LEN, hv_MapToWorld, hv_MapToImage, 
          "true", out hv_X1_FAI27_P2, out hv_Y1_FAI27_P2, out hv_X2_FAI27_P2, out hv_Y2_FAI27_P2);

      hv_intersectY.Dispose();hv_intersectX.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI27_TOP, hv_lineX1_FAI27_TOP, hv_lineY2_FAI27_TOP, 
          hv_lineX2_FAI27_TOP, hv_Y1_FAI27_P2, hv_X1_FAI27_P2, hv_Y2_FAI27_P2, hv_X2_FAI27_P2, 
          out hv_intersectY, out hv_intersectX, out hv_IsOverlapping);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_rowRightCircle, hv_colRightCircle, hv_intersectY, hv_intersectX, 
          hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_lineY1LeftBase, hv_lineX1LeftBase, hv_lineY2LeftBase, 
          hv_lineX2LeftBase, hv_intersectY, hv_intersectX, hv_rowRightCircle, hv_colRightCircle, 
          out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }



      hv_intersectY.Dispose();hv_intersectX.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI27_BOTTOM, hv_lineX1_FAI27_BOTTOM, 
          hv_lineY2_FAI27_BOTTOM, hv_lineX2_FAI27_BOTTOM, hv_Y1_FAI27_P2, hv_X1_FAI27_P2, 
          hv_Y2_FAI27_P2, hv_X2_FAI27_P2, out hv_intersectY, out hv_intersectX, out hv_IsOverlapping);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      //distance p2 bottom
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_rowRightCircle, hv_colRightCircle, hv_intersectY, hv_intersectX, 
          hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_lineY1LeftBase, hv_lineX1LeftBase, hv_lineY2LeftBase, 
          hv_lineX2LeftBase, hv_rowRightCircle, hv_colRightCircle, hv_intersectY, 
          hv_intersectX, out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }


      //******************FAI28***********************
      hv_diameterPixel.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_diameterPixel = hv_radRightCircle*2;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_diameterPixel*hv_XCoeff);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }

      hv_X1H.Dispose();hv_Y1H.Dispose();hv_X2H.Dispose();hv_Y2H.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI28_Y_LEN, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_X1H, out hv_Y1H, out hv_X2H, out hv_Y2H);
      hv_X1V.Dispose();hv_Y1V.Dispose();hv_X2V.Dispose();hv_Y2V.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI28_X_LEN, hv_MapToWorld, hv_MapToImage, 
          "true", out hv_X1V, out hv_Y1V, out hv_X2V, out hv_Y2V);
      hv_centerY.Dispose();hv_centerX.Dispose();hv_IsOverlapping9.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1V, hv_X1V, hv_Y2V, hv_X2V, hv_Y1H, hv_X1H, 
          hv_Y2H, hv_X2H, out hv_centerY, out hv_centerX, out hv_IsOverlapping9);

      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_centerY, hv_centerX, hv_rowRightCircle, hv_colRightCircle, 
          hv_MapToWorld, out hv_Distance);

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }

      //*******************************FAI29*****************************
      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 3592-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 2306-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(0)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 173;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 135;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("29-left", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'positive', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, threshValue, 'first', ignorePortion, 'true', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly12, lineX1_FAI29_LEFT, lineY1_FAI29_LEFT, lineX2_FAI29_LEFT, lineY2_FAI29_LEFT, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 4675-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 2331-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(0)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 173;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 122;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("29-right", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'negative', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, threshValue, 'first', ignorePortion, 'true', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly13, lineX1_FAI29_RIGHT, lineY1_FAI29_RIGHT, lineX2_FAI29_RIGHT, lineY2_FAI29_RIGHT, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      hv_X1_FAI29_LINE_H_P2.Dispose();hv_Y1_FAI29_LINE_H_P2.Dispose();hv_X2_FAI29_LINE_H_P2.Dispose();hv_Y2_FAI29_LINE_H_P2.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI29_P2_LEN, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_X1_FAI29_LINE_H_P2, out hv_Y1_FAI29_LINE_H_P2, out hv_X2_FAI29_LINE_H_P2, 
          out hv_Y2_FAI29_LINE_H_P2);


      //Left intersections and distances

      hv_intersectY.Dispose();hv_intersectX.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI29_LEFT, hv_lineX1_FAI29_LEFT, 
          hv_lineY2_FAI29_LEFT, hv_lineX2_FAI29_LEFT, hv_Y1_FAI29_LINE_H_P2, hv_X1_FAI29_LINE_H_P2, 
          hv_Y2_FAI29_LINE_H_P2, hv_X2_FAI29_LINE_H_P2, out hv_intersectY, out hv_intersectX, 
          out hv_IsOverlapping);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_rowRightCircle, hv_colRightCircle, hv_intersectY, hv_intersectX, 
          hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_lineY1TopBase, hv_lineX1TopBase, hv_lineY2TopBase, 
          hv_lineX2TopBase, hv_rowRightCircle, hv_colRightCircle, hv_intersectY, 
          hv_intersectX, out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }

      //RIGHT intersections and distances
      hv_intersectY.Dispose();hv_intersectX.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1_FAI29_RIGHT, hv_lineX1_FAI29_RIGHT, 
          hv_lineY2_FAI29_RIGHT, hv_lineX2_FAI29_RIGHT, hv_Y1_FAI29_LINE_H_P2, hv_X1_FAI29_LINE_H_P2, 
          hv_Y2_FAI29_LINE_H_P2, hv_X2_FAI29_LINE_H_P2, out hv_intersectY, out hv_intersectX, 
          out hv_IsOverlapping);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_rowRightCircle, hv_colRightCircle, hv_intersectY, hv_intersectX, 
          hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_lineY1TopBase, hv_lineX1TopBase, hv_lineY2TopBase, 
          hv_lineX2TopBase, hv_rowRightCircle, hv_colRightCircle, hv_intersectY, 
          hv_intersectX, out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance*hv_XCoeff);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }
      //*************************FAI31**********************************
      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 1282-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 2396-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(-45)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 181;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 194;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("31-topLeft", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'positive', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, threshValue, 'first', ignorePortion, 'true', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly14, lineX1_FAI31_TOPLEFT, lineY1_FAI31_TOPLEFT, lineX2_FAI31_TOPLEFT, lineY2_FAI31_TOPLEFT, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }


      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 1231-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 4380-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(43)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 186;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 178;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("31-bottomLeft", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'positive', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, threshValue, 'first', ignorePortion, 'true', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly15, lineX1_FAI31_BOTTOMLEFT, lineY1_FAI31_BOTTOMLEFT, lineX2_FAI31_BOTTOMLEFT, lineY2_FAI31_BOTTOMLEFT, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 3119-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 2453-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(43)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 186;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 204;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("31-topRight", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'negative', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, threshValue, 'first', ignorePortion, 'true', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly16, lineX1_FAI31_TOPRIGHT, lineY1_FAI31_TOPRIGHT, lineX2_FAI31_TOPRIGHT, lineY2_FAI31_TOPRIGHT, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }


      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = 3087-hv_modelCol;
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = 4399-hv_modelRow;
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = (new HTuple(-45)).TupleRad()
          ;
      }
      hv_rectLen1.Dispose();
      hv_rectLen1 = 181;
      hv_rectLen2.Dispose();
      hv_rectLen2 = 194;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("31-bottomRight", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, findLineRegion, lineRegion, 'negative', rectY1, rectX1, rectRadian, rectLen1, rectLen2, 10, threshValue, 'first', ignorePortion, 'true', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, -1, longestOnly17, lineX1_FAI31_BOTTOMRIGHT, lineY1_FAI31_BOTTOMRIGHT, lineX2_FAI31_BOTTOMRIGHT, lineY2_FAI31_BOTTOMRIGHT, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      hv_X1_X_1.Dispose();hv_Y1_X_1.Dispose();hv_X2_X_1.Dispose();hv_Y2_X_1.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI31_LEFT_LEN, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_X1_X_1, out hv_Y1_X_1, out hv_X2_X_1, out hv_Y2_X_1);
      hv_ptY_TL.Dispose();hv_ptX_TL.Dispose();hv_IsOverlapping1.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_X_1, hv_X1_X_1, hv_Y2_X_1, hv_X2_X_1, 
          hv_lineY1_FAI31_TOPLEFT, hv_lineX1_FAI31_TOPLEFT, hv_lineY2_FAI31_TOPLEFT, 
          hv_lineX2_FAI31_TOPLEFT, out hv_ptY_TL, out hv_ptX_TL, out hv_IsOverlapping1);
      hv_ptY_BL.Dispose();hv_ptX_BL.Dispose();hv_IsOverlapping1.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_X_1, hv_X1_X_1, hv_Y2_X_1, hv_X2_X_1, 
          hv_lineY1_FAI31_BOTTOMLEFT, hv_lineX1_FAI31_BOTTOMLEFT, hv_lineY2_FAI31_BOTTOMLEFT, 
          hv_lineX2_FAI31_BOTTOMLEFT, out hv_ptY_BL, out hv_ptX_BL, out hv_IsOverlapping1);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_ptX_TL);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_ptY_TL);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_ptX_BL);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_ptY_BL);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }

      hv_X1_X_2.Dispose();hv_Y1_X_2.Dispose();hv_X2_X_2.Dispose();hv_Y2_X_2.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI31_RIGHT_LEN, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_X1_X_2, out hv_Y1_X_2, out hv_X2_X_2, out hv_Y2_X_2);
      hv_ptY_TR.Dispose();hv_ptX_TR.Dispose();hv_IsOverlapping1.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_X_2, hv_X1_X_2, hv_Y2_X_2, hv_X2_X_2, 
          hv_lineY1_FAI31_TOPRIGHT, hv_lineX1_FAI31_TOPRIGHT, hv_lineY2_FAI31_TOPRIGHT, 
          hv_lineX2_FAI31_TOPRIGHT, out hv_ptY_TR, out hv_ptX_TR, out hv_IsOverlapping1);
      hv_ptY_BR.Dispose();hv_ptX_BR.Dispose();hv_IsOverlapping1.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_X_2, hv_X1_X_2, hv_Y2_X_2, hv_X2_X_2, 
          hv_lineY1_FAI31_BOTTOMRIGHT, hv_lineX1_FAI31_BOTTOMRIGHT, hv_lineY2_FAI31_BOTTOMRIGHT, 
          hv_lineX2_FAI31_BOTTOMRIGHT, out hv_ptY_BR, out hv_ptX_BR, out hv_IsOverlapping1);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_ptX_TR);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_ptY_TR);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_ptX_BR);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_ptY_BR);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }

      hv_ptY.Dispose();hv_ptX.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_ptY_TL, hv_ptX_TL, hv_ptY_BR, hv_ptX_BR, 
          hv_ptY_TR, hv_ptX_TR, hv_ptY_BL, hv_ptX_BL, out hv_ptY, out hv_ptX, out hv_IsOverlapping2);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_ptX);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_ptY);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }

      hv_X1V.Dispose();hv_Y1V.Dispose();hv_X2V.Dispose();hv_Y2V.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI31_CENTERX_LEN, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_X1V, out hv_Y1V, out hv_X2V, out hv_Y2V);
      hv_X1H.Dispose();hv_Y1H.Dispose();hv_X2H.Dispose();hv_Y2H.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI31_CENTERY_LEN, hv_MapToWorld, 
          hv_MapToImage, "false", out hv_X1H, out hv_Y1H, out hv_X2H, out hv_Y2H);
      hv_centerY.Dispose();hv_centerX.Dispose();hv_IsOverlapping8.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1H, hv_X1H, hv_Y2H, hv_X2H, hv_Y1V, hv_X1V, 
          hv_Y2V, hv_X2V, out hv_centerY, out hv_centerX, out hv_IsOverlapping8);
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_centerY, hv_centerX, hv_ptY, hv_ptX, hv_MapToWorld, out hv_Distance);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }

      //*****************************FAI32**************************

      hv_X1_X_1.Dispose();hv_Y1_X_1.Dispose();hv_X2_X_1.Dispose();hv_Y2_X_1.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI32_X1_LEN, hv_MapToWorld, hv_MapToImage, 
          "true", out hv_X1_X_1, out hv_Y1_X_1, out hv_X2_X_1, out hv_Y2_X_1);
      hv_intersectY_TL.Dispose();hv_intersectX_TL.Dispose();hv_IsOverlapping5.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_X_1, hv_X1_X_1, hv_Y2_X_1, hv_X1_X_1, 
          hv_lineY1_FAI23_TOP, hv_lineX1_FAI23_TOP, hv_lineY2_FAI23_TOP, hv_lineX2_FAI23_TOP, 
          out hv_intersectY_TL, out hv_intersectX_TL, out hv_IsOverlapping5);
      hv_intersectY_BL.Dispose();hv_intersectX_BL.Dispose();hv_IsOverlapping5.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_X_1, hv_X1_X_1, hv_Y2_X_1, hv_X1_X_1, 
          hv_lineY1_FAI23_BOTTOM, hv_lineX1_FAI23_BOTTOM, hv_lineY2_FAI23_BOTTOM, 
          hv_lineX2_FAI23_BOTTOM, out hv_intersectY_BL, out hv_intersectX_BL, out hv_IsOverlapping5);



      hv_X1_X_2.Dispose();hv_Y1_X_2.Dispose();hv_X2_X_2.Dispose();hv_Y2_X_2.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI32_X2_LEN, hv_MapToWorld, hv_MapToImage, 
          "true", out hv_X1_X_2, out hv_Y1_X_2, out hv_X2_X_2, out hv_Y2_X_2);
      hv_intersectY_TR.Dispose();hv_intersectX_TR.Dispose();hv_IsOverlapping5.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_X_2, hv_X1_X_2, hv_Y2_X_2, hv_X1_X_2, 
          hv_lineY1_FAI23_TOP, hv_lineX1_FAI23_TOP, hv_lineY2_FAI23_TOP, hv_lineX2_FAI23_TOP, 
          out hv_intersectY_TR, out hv_intersectX_TR, out hv_IsOverlapping5);
      hv_intersectY_BR.Dispose();hv_intersectX_BR.Dispose();hv_IsOverlapping5.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_X_2, hv_X1_X_2, hv_Y2_X_2, hv_X1_X_2, 
          hv_lineY1_FAI23_BOTTOM, hv_lineX1_FAI23_BOTTOM, hv_lineY2_FAI23_BOTTOM, 
          hv_lineX2_FAI23_BOTTOM, out hv_intersectY_BR, out hv_intersectX_BR, out hv_IsOverlapping5);
      hv_X1_L6.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_X1_L6 = (hv_intersectX_TL+hv_intersectX_TR)/2.0;
      }
      hv_Y1_L6.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Y1_L6 = (hv_intersectY_TL+hv_intersectY_TR)/2.0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_X1_L6);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_Y1_L6);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }

      hv_X2_L6.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_X2_L6 = (hv_intersectX_BL+hv_intersectX_BR)/2.0;
      }
      hv_Y2_L6.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Y2_L6 = (hv_intersectY_BL+hv_intersectY_BR)/2.0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_X2_L6);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_Y2_L6);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }

      hv_X1_Y_1.Dispose();hv_Y1_Y_1.Dispose();hv_X2_Y_1.Dispose();hv_Y2_Y_1.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI32_Y1_LEN, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_X1_Y_1, out hv_Y1_Y_1, out hv_X2_Y_1, out hv_Y2_Y_1);
      hv_intersectY_LT.Dispose();hv_intersectX_LT.Dispose();hv_IsOverlapping6.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_Y_1, hv_X1_Y_1, hv_Y2_Y_1, hv_X2_Y_1, 
          hv_lineY1_FAI21_LEFT, hv_lineX1_FAI21_LEFT, hv_lineY2_FAI21_LEFT, hv_lineX2_FAI21_LEFT, 
          out hv_intersectY_LT, out hv_intersectX_LT, out hv_IsOverlapping6);
      hv_intersectY_RT.Dispose();hv_intersectX_RT.Dispose();hv_IsOverlapping6.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_Y_1, hv_X1_Y_1, hv_Y2_Y_1, hv_X2_Y_1, 
          hv_lineY1_FAI21_Right, hv_lineX1_FAI21_Right, hv_lineY2_FAI21_Right, hv_lineX2_FAI21_Right, 
          out hv_intersectY_RT, out hv_intersectX_RT, out hv_IsOverlapping6);


      hv_X1_Y_2.Dispose();hv_Y1_Y_2.Dispose();hv_X2_Y_2.Dispose();hv_Y2_Y_2.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI32_Y2_LEN, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_X1_Y_2, out hv_Y1_Y_2, out hv_X2_Y_2, out hv_Y2_Y_2);
      hv_intersectY_LB.Dispose();hv_intersectX_LB.Dispose();hv_IsOverlapping6.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_Y_2, hv_X1_Y_2, hv_Y2_Y_2, hv_X2_Y_2, 
          hv_lineY1_FAI21_LEFT, hv_lineX1_FAI21_LEFT, hv_lineY2_FAI21_LEFT, hv_lineX2_FAI21_LEFT, 
          out hv_intersectY_LB, out hv_intersectX_LB, out hv_IsOverlapping6);
      hv_intersectY_RB.Dispose();hv_intersectX_RB.Dispose();hv_IsOverlapping6.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_Y_2, hv_X1_Y_2, hv_Y2_Y_2, hv_X2_Y_2, 
          hv_lineY1_FAI21_Right, hv_lineX1_FAI21_Right, hv_lineY2_FAI21_Right, hv_lineX2_FAI21_Right, 
          out hv_intersectY_RB, out hv_intersectX_RB, out hv_IsOverlapping6);

      hv_X1_L5.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_X1_L5 = (hv_intersectX_LT+hv_intersectX_LB)/2.0;
      }
      hv_Y1_L5.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Y1_L5 = (hv_intersectY_LT+hv_intersectY_LB)/2.0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_X1_L5);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_Y1_L5);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }

      hv_X2_L5.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_X2_L5 = (hv_intersectX_RT+hv_intersectX_RB)/2.0;
      }
      hv_Y2_L5.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Y2_L5 = (hv_intersectY_RT+hv_intersectY_RB)/2.0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_X2_L5);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_Y2_L5);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }


      hv_centerY_FAI32.Dispose();hv_centerX_FAI32.Dispose();hv_IsOverlapping7.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1_L5, hv_X1_L5, hv_Y2_L5, hv_X2_L5, hv_Y1_L6, 
          hv_X1_L6, hv_Y2_L6, hv_X2_L6, out hv_centerY_FAI32, out hv_centerX_FAI32, 
          out hv_IsOverlapping7);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_centerX_FAI32);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_centerY_FAI32);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }

      hv_X1H.Dispose();hv_Y1H.Dispose();hv_X2H.Dispose();hv_Y2H.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI23_MID_LEN, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_X1H, out hv_Y1H, out hv_X2H, out hv_Y2H);
      hv_X1V.Dispose();hv_Y1V.Dispose();hv_X2V.Dispose();hv_Y2V.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI23_P2_LEN, hv_MapToWorld, hv_MapToImage, 
          "true", out hv_X1V, out hv_Y1V, out hv_X2V, out hv_Y2V);
      hv_centerY.Dispose();hv_centerX.Dispose();hv_IsOverlapping7.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1V, hv_X1V, hv_Y2V, hv_X2V, hv_Y1H, hv_X1H, 
          hv_Y2H, hv_X2H, out hv_centerY, out hv_centerX, out hv_IsOverlapping7);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_centerX);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_centerY);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }

      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_centerY, hv_centerX, hv_centerY_FAI32, hv_centerX_FAI32, 
          hv_MapToWorld, out hv_Distance);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }


      //******************FAI33******************

      hv_L6_ROW1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_L6_ROW1 = (hv_rowTL_FAI26+hv_rowTR_FAI26)/2.0;
      }
      hv_L6_COL1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_L6_COL1 = (hv_colTL_FAI26+hv_colTR_FAI26)/2.0;
      }
      hv_L6_ROW2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_L6_ROW2 = (hv_rowBL_FAI26+hv_rowBR_FAI26)/2.0;
      }
      hv_L6_COL2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_L6_COL2 = (hv_colBL_FAI26+hv_colBR_FAI26)/2.0;
      }


      hv_L5_ROW1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_L5_ROW1 = (hv_rowTL_FAI26+hv_rowBL_FAI26)/2.0;
      }
      hv_L5_COL1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_L5_COL1 = (hv_colTL_FAI26+hv_colBL_FAI26)/2.0;
      }
      hv_L5_ROW2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_L5_ROW2 = (hv_rowTR_FAI26+hv_rowBR_FAI26)/2.0;
      }
      hv_L5_COL2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_L5_COL2 = (hv_colTR_FAI26+hv_colBR_FAI26)/2.0;
      }

      hv_centerY_FAI33.Dispose();hv_centerX_FAI33.Dispose();hv_IsOverlapping4.Dispose();
      HOperatorSet.IntersectionLines(hv_L6_ROW1, hv_L6_COL1, hv_L6_ROW2, hv_L6_COL2, 
          hv_L5_ROW1, hv_L5_COL1, hv_L5_ROW2, hv_L5_COL2, out hv_centerY_FAI33, out hv_centerX_FAI33, 
          out hv_IsOverlapping4);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_intersectX);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_intersectY);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }

      hv_X1H.Dispose();hv_Y1H.Dispose();hv_X2H.Dispose();hv_Y2H.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI33_V_LEN, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_X1H, out hv_Y1H, out hv_X2H, out hv_Y2H);
      hv_X1V.Dispose();hv_Y1V.Dispose();hv_X2V.Dispose();hv_Y2V.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI33_H_LEN, hv_MapToWorld, hv_MapToImage, 
          "true", out hv_X1V, out hv_Y1V, out hv_X2V, out hv_Y2V);
      hv_centerY.Dispose();hv_centerX.Dispose();hv_IsOverlapping7.Dispose();
      HOperatorSet.IntersectionLines(hv_Y1V, hv_X1V, hv_Y2V, hv_X2V, hv_Y1H, hv_X1H, 
          hv_Y2H, hv_X2H, out hv_centerY, out hv_centerX, out hv_IsOverlapping7);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_centerX);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_centerY);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }

      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_centerY, hv_centerX, hv_centerY_FAI33, hv_centerX_FAI33, 
          hv_MapToWorld, out hv_Distance);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }

      //**********************FAI123******************
      hv_rect1X1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect1X1 = 1358-hv_modelCol;
      }
      hv_rect1Y1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect1Y1 = 4660-hv_modelRow;
      }
      hv_rect1Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect1Radian = (new HTuple(89)).TupleRad()
          ;
      }
      hv_rect1Len1.Dispose();
      hv_rect1Len1 = 40;
      hv_rect1Len2.Dispose();
      hv_rect1Len2 = 200;

      hv_rect2X1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect2X1 = 2140-hv_modelCol;
      }
      hv_rect2Y1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect2Y1 = 4685-hv_modelRow;
      }
      hv_rect2Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect2Radian = (new HTuple(90)).TupleRad()
          ;
      }
      hv_rect2Len1.Dispose();
      hv_rect2Len1 = 64;
      hv_rect2Len2.Dispose();
      hv_rect2Len2 = 205;

      hv_rect3X1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect3X1 = 2972-hv_modelCol;
      }
      hv_rect3Y1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect3Y1 = 4685-hv_modelRow;
      }
      hv_rect3Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect3Radian = (new HTuple(90)).TupleRad()
          ;
      }
      hv_rect3Len1.Dispose();
      hv_rect3Len1 = 64;
      hv_rect3Len2.Dispose();
      hv_rect3Len2 = 205;

      hv_rectX1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectX1 = new HTuple();
      hv_rectX1 = hv_rectX1.TupleConcat(hv_rect1X1, hv_rect2X1, hv_rect3X1);
      }
      hv_rectY1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectY1 = new HTuple();
      hv_rectY1 = hv_rectY1.TupleConcat(hv_rect1Y1, hv_rect2Y1, hv_rect3Y1);
      }
      hv_rectRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectRadian = new HTuple();
      hv_rectRadian = hv_rectRadian.TupleConcat(hv_rect1Radian, hv_rect2Radian, hv_rect3Radian);
      }
      hv_rectLen1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectLen1 = new HTuple();
      hv_rectLen1 = hv_rectLen1.TupleConcat(hv_rect1Len1, hv_rect2Len1, hv_rect3Len1);
      }
      hv_rectLen2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectLen2 = new HTuple();
      hv_rectLen2 = hv_rectLen2.TupleConcat(hv_rect1Len2, hv_rect2Len2, hv_rect3Len2);
      }
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 
          hv_MovementOfItem, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
          out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectY1.Dispose();
      hv_rectY1 = ExpTmpOutVar_0;
      hv_rectX1.Dispose();
      hv_rectX1 = ExpTmpOutVar_1;
      hv_rectRadian.Dispose();
      hv_rectRadian = ExpTmpOutVar_2;
      hv_rectLen1.Dispose();
      hv_rectLen1 = ExpTmpOutVar_3;
      hv_rectLen2.Dispose();
      hv_rectLen2 = ExpTmpOutVar_4;
      }
      ho_Rectangle.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle, hv_rectY1, hv_rectX1, hv_rectRadian, 
          hv_rectLen1, hv_rectLen2);

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("123", hv_FindLineNames, hv_Thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep_Pairs (Image, findLineRegion, kernelWidth5, rectY1, rectY1, rectRadian, rectLen1, rectLen2, 'positive', 10, [threshValue,threshValue,threshValue], sigma1, sigma2, 'last', 'false', ignorePortion, 'first', 1, 15, 5120, 5120, cannyHigh, cannyLow, 'true', newWidth, -1, longestOnly1, ptsXUsed, ptsYUsed, ptsXIgnored, ptsYIgnored, lineX1, lineY1, lineX2, lineY2)
      ho_findLineRegion.Dispose();ho_lineRegion.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();
      FindLineGradiant_Pair(ho_Image_COPY_INP_TMP, out ho_findLineRegion, out ho_lineRegion, 
          hv_rectY1, hv_rectX1, hv_rectRadian, hv_rectLen1, hv_rectLen2, 10, 0.2, 
          "positive", ((new HTuple(15)).TupleConcat(15)).TupleConcat(15), 2, "last", 
          "first", 1, 15, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored, 
          out hv_lineX1, out hv_lineY1, out hv_lineX2, out hv_lineY2);
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
          );
      ho_FindLineRegions.Dispose();
      ho_FindLineRegions = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_LineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_LineRegions.Dispose();
      ho_LineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXUsed = hv_ptsXUsed.TupleConcat(
          hv_PointsXUsed);
      hv_PointsXUsed.Dispose();
      hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYUsed = hv_ptsYUsed.TupleConcat(
          hv_PointsYUsed);
      hv_PointsYUsed.Dispose();
      hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsXIgnored = hv_ptsXIgnored.TupleConcat(
          hv_PointsXIgnored);
      hv_PointsXIgnored.Dispose();
      hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PointsYIgnored = hv_ptsYIgnored.TupleConcat(
          hv_PointsYIgnored);
      hv_PointsYIgnored.Dispose();
      hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
      }
      }

      hv_P1_X1.Dispose();hv_P1_Y1.Dispose();hv_P1_X2.Dispose();hv_P1_Y2.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI123_P1_LEN, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_P1_X1, out hv_P1_Y1, out hv_P1_X2, out hv_P1_Y2);
      hv_rowP1_TOP.Dispose();hv_colP1_TOP.Dispose();hv_IsOverlapping10.Dispose();
      HOperatorSet.IntersectionLines(hv_P1_Y1, hv_P1_X1, hv_P1_Y2, hv_P1_X2, hv_lineY1TopBase, 
          hv_lineX1TopBase, hv_lineY2TopBase, hv_lineX2TopBase, out hv_rowP1_TOP, 
          out hv_colP1_TOP, out hv_IsOverlapping10);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_colP1_TOP);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_rowP1_TOP);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      hv_rowP1_BOTTOM.Dispose();hv_colP1_BOTTOM.Dispose();hv_IsOverlapping10.Dispose();
      HOperatorSet.IntersectionLines(hv_P1_Y1, hv_P1_X1, hv_P1_Y2, hv_P1_X2, hv_lineY1, 
          hv_lineX1, hv_lineY2, hv_lineX2, out hv_rowP1_BOTTOM, out hv_colP1_BOTTOM, 
          out hv_IsOverlapping10);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_colP1_BOTTOM);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_rowP1_BOTTOM);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_rowP1_TOP, hv_colP1_TOP, hv_rowP1_BOTTOM, hv_colP1_BOTTOM, 
          hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_rowP1_TOP, hv_colP1_TOP, hv_rowP1_BOTTOM, hv_colP1_BOTTOM, 
          hv_lineY1LeftBase, hv_lineX1LeftBase, hv_lineY2LeftBase, hv_lineX2LeftBase, 
          out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }

      hv_P2_X1.Dispose();hv_P2_Y1.Dispose();hv_P2_X2.Dispose();hv_P2_Y2.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI123_P2_LEN, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_P2_X1, out hv_P2_Y1, out hv_P2_X2, out hv_P2_Y2);
      hv_rowP2_TOP.Dispose();hv_colP2_TOP.Dispose();hv_IsOverlapping10.Dispose();
      HOperatorSet.IntersectionLines(hv_P2_Y1, hv_P2_X1, hv_P2_Y2, hv_P2_X2, hv_lineY1TopBase, 
          hv_lineX1TopBase, hv_lineY2TopBase, hv_lineX2TopBase, out hv_rowP2_TOP, 
          out hv_colP2_TOP, out hv_IsOverlapping10);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_colP2_TOP);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_rowP2_TOP);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      hv_rowP2_BOTTOM.Dispose();hv_colP2_BOTTOM.Dispose();hv_IsOverlapping10.Dispose();
      HOperatorSet.IntersectionLines(hv_P2_Y1, hv_P2_X1, hv_P2_Y2, hv_P2_X2, hv_lineY1, 
          hv_lineX1, hv_lineY2, hv_lineX2, out hv_rowP2_BOTTOM, out hv_colP2_BOTTOM, 
          out hv_IsOverlapping10);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_colP2_BOTTOM);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_rowP2_BOTTOM);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_rowP2_TOP, hv_colP2_TOP, hv_rowP2_BOTTOM, hv_colP2_BOTTOM, 
          hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_rowP2_TOP, hv_colP2_TOP, hv_rowP2_BOTTOM, hv_colP2_BOTTOM, 
          hv_lineY1LeftBase, hv_lineX1LeftBase, hv_lineY2LeftBase, hv_lineX2LeftBase, 
          out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }

      hv_P3_X1.Dispose();hv_P3_Y1.Dispose();hv_P3_X2.Dispose();hv_P3_Y2.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1LeftBase, hv_lineY1LeftBase, 
          hv_lineX2LeftBase, hv_lineY2LeftBase, hv_FAI123_P3_LEN, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_P3_X1, out hv_P3_Y1, out hv_P3_X2, out hv_P3_Y2);
      hv_rowP3_TOP.Dispose();hv_colP3_TOP.Dispose();hv_IsOverlapping10.Dispose();
      HOperatorSet.IntersectionLines(hv_P3_Y1, hv_P3_X1, hv_P3_Y2, hv_P3_X2, hv_lineY1TopBase, 
          hv_lineX1TopBase, hv_lineY2TopBase, hv_lineX2TopBase, out hv_rowP3_TOP, 
          out hv_colP3_TOP, out hv_IsOverlapping10);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_colP3_TOP);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_rowP3_TOP);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      hv_rowP3_BOTTOM.Dispose();hv_colP3_BOTTOM.Dispose();hv_IsOverlapping10.Dispose();
      HOperatorSet.IntersectionLines(hv_P3_Y1, hv_P3_X1, hv_P3_Y2, hv_P3_X2, hv_lineY1, 
          hv_lineX1, hv_lineY2, hv_lineX2, out hv_rowP3_BOTTOM, out hv_colP3_BOTTOM, 
          out hv_IsOverlapping10);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsX = hv_IntersectsX.TupleConcat(
          hv_colP3_BOTTOM);
      hv_IntersectsX.Dispose();
      hv_IntersectsX = ExpTmpLocalVar_IntersectsX;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_IntersectsY = hv_IntersectsY.TupleConcat(
          hv_rowP3_BOTTOM);
      hv_IntersectsY.Dispose();
      hv_IntersectsY = ExpTmpLocalVar_IntersectsY;
      }
      }
      hv_Distance.Dispose();
      DistanceInWorld_PP(hv_rowP3_TOP, hv_colP3_TOP, hv_rowP3_BOTTOM, hv_colP3_BOTTOM, 
          hv_MapToWorld, out hv_Distance);
      hv_Angle.Dispose();
      HOperatorSet.AngleLl(hv_rowP3_TOP, hv_colP3_TOP, hv_rowP3_BOTTOM, hv_colP3_BOTTOM, 
          hv_lineY1LeftBase, hv_lineX1LeftBase, hv_lineY2LeftBase, hv_lineX2LeftBase, 
          out hv_Angle);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Distance = hv_Distance*(((hv_Angle.TupleCos()
          )).TupleAbs());
      hv_Distance.Dispose();
      hv_Distance = ExpTmpLocalVar_Distance;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Outputs = hv_Outputs.TupleConcat(
          hv_Distance);
      hv_Outputs.Dispose();
      hv_Outputs = ExpTmpLocalVar_Outputs;
      }
      }

      ho_Image_COPY_INP_TMP.Dispose();
      ho_findLineRegionTop.Dispose();
      ho_lineRegionTop.Dispose();
      ho_findLineRegionLeft.Dispose();
      ho_lineRegionLeft.Dispose();
      ho_findLineRegion.Dispose();
      ho_lineRegion.Dispose();
      ho_lineContours.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageReduced1.Dispose();
      ho_ImageMean1.Dispose();
      ho_mask.Dispose();
      ho_ImageReduced2.Dispose();
      ho_Edges2.Dispose();
      ho_SelectedContours.Dispose();
      ho_UnionContours.Dispose();
      ho_outputContour.Dispose();
      ho_ContCircle.Dispose();
      ho_Circle.Dispose();
      ho_lineRegion1.Dispose();
      ho_ROI_FAI26_TL.Dispose();
      ho_ImageReduced.Dispose();
      ho_Edges1.Dispose();
      ho_Cross1.Dispose();
      ho_ROI_FAI26_BL.Dispose();
      ho_Cross2.Dispose();
      ho_ROI_FAI26_TR.Dispose();
      ho_Cross3.Dispose();
      ho_ROI_FAI26_BR.Dispose();
      ho_Region.Dispose();
      ho_ConnectedRegions.Dispose();
      ho_SelectedRegions.Dispose();
      ho_RegionDilation.Dispose();
      ho_image_intersection.Dispose();
      ho_Edges.Dispose();
      ho_UnionContours2.Dispose();
      ho_SelectedXLD.Dispose();
      ho_ContCircle1.Dispose();
      ho_Rectangle.Dispose();

      hv_CameraParameters.Dispose();
      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_MapToWorld.Dispose();
      hv_MapToImage.Dispose();
      hv_modelRow.Dispose();
      hv_modelCol.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementOfItem.Dispose();
      hv_FAI21_P1_LEN.Dispose();
      hv_FAI21_P2_LEN.Dispose();
      hv_FAI21_P3_LEN.Dispose();
      hv_FAI21_MID_LEN.Dispose();
      hv_FAI23_P1_LEN.Dispose();
      hv_FAI23_P2_LEN.Dispose();
      hv_FAI23_P3_LEN.Dispose();
      hv_FAI23_MID_LEN.Dispose();
      hv_FAI24_P1_LEN.Dispose();
      hv_FAI24_P2_LEN.Dispose();
      hv_FAI24_P3_LEN.Dispose();
      hv_FAI25_X_LEN.Dispose();
      hv_FAI25_Y_LEN.Dispose();
      hv_FAI26_LEN.Dispose();
      hv_FAI27_P1_LEN.Dispose();
      hv_FAI27_P2_LEN.Dispose();
      hv_FAI27_P3_LEN.Dispose();
      hv_FAI28_X_LEN.Dispose();
      hv_FAI28_Y_LEN.Dispose();
      hv_FAI29_P1_LEN.Dispose();
      hv_FAI29_P2_LEN.Dispose();
      hv_FAI29_P3_LEN.Dispose();
      hv_FAI31_LEFT_LEN.Dispose();
      hv_FAI31_RIGHT_LEN.Dispose();
      hv_FAI31_CENTERY_LEN.Dispose();
      hv_FAI31_CENTERX_LEN.Dispose();
      hv_FAI32_X1_LEN.Dispose();
      hv_FAI32_X2_LEN.Dispose();
      hv_FAI32_Y1_LEN.Dispose();
      hv_FAI32_Y2_LEN.Dispose();
      hv_FAI33_V_LEN.Dispose();
      hv_FAI33_H_LEN.Dispose();
      hv_FAI123_P1_LEN.Dispose();
      hv_FAI123_P2_LEN.Dispose();
      hv_FAI123_P3_LEN.Dispose();
      hv_sigma2.Dispose();
      hv_row1TopBase.Dispose();
      hv_col1TopBase.Dispose();
      hv_radianTopBase.Dispose();
      hv_len1TopBase.Dispose();
      hv_len2TopBase.Dispose();
      hv_row1TopBase1.Dispose();
      hv_col1TopBase1.Dispose();
      hv_radianTopBase1.Dispose();
      hv_len1TopBase1.Dispose();
      hv_len2TopBase1.Dispose();
      hv_row1TopBase2.Dispose();
      hv_col1TopBase2.Dispose();
      hv_radianTopBase2.Dispose();
      hv_len1TopBase2.Dispose();
      hv_len2TopBase2.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_newWidth.Dispose();
      hv_cannyLow.Dispose();
      hv_cannyHigh.Dispose();
      hv_lineX1TopBase.Dispose();
      hv_lineY1TopBase.Dispose();
      hv_lineX2TopBase.Dispose();
      hv_lineY2TopBase.Dispose();
      hv_ptsXUsed.Dispose();
      hv_ptsYUsed.Dispose();
      hv_ptsXIgnored.Dispose();
      hv_ptsYIgnored.Dispose();
      hv_row1LeftBase.Dispose();
      hv_col1LeftBase.Dispose();
      hv_radianLeftBase.Dispose();
      hv_len1LeftBase.Dispose();
      hv_len2LeftBase.Dispose();
      hv_row1LeftBase1.Dispose();
      hv_col1LeftBase1.Dispose();
      hv_radianLeftBase1.Dispose();
      hv_len1LeftBase1.Dispose();
      hv_len2LeftBase1.Dispose();
      hv_lineX1LeftBase.Dispose();
      hv_lineY1LeftBase.Dispose();
      hv_lineX2LeftBase.Dispose();
      hv_lineY2LeftBase.Dispose();
      hv_row1FAI21LeftUpper.Dispose();
      hv_col1FAI21LeftUpper.Dispose();
      hv_radianFAI21LeftUpper.Dispose();
      hv_len1FAI21LeftUpper.Dispose();
      hv_len2FAI21LeftUpper.Dispose();
      hv_row1FAI21LeftLower.Dispose();
      hv_col1FAI21LeftLower.Dispose();
      hv_radianFAI21LeftLower.Dispose();
      hv_len1FAI21LeftLower.Dispose();
      hv_len2FAI21LeftLower.Dispose();
      hv_row1FAI21Left.Dispose();
      hv_col1FAI21Left.Dispose();
      hv_radianFAI21Left.Dispose();
      hv_len1FAI21Left.Dispose();
      hv_len2FAI21Left.Dispose();
      hv_lineX1_FAI21_LEFT.Dispose();
      hv_lineY1_FAI21_LEFT.Dispose();
      hv_lineX2_FAI21_LEFT.Dispose();
      hv_lineY2_FAI21_LEFT.Dispose();
      hv_row1FAI21RightUpper.Dispose();
      hv_col1FAI21RightUpper.Dispose();
      hv_radianFAI21RightUpper.Dispose();
      hv_len1FAI21RightUpper.Dispose();
      hv_len2FAI21RightUpper.Dispose();
      hv_row1FAI21RightLower.Dispose();
      hv_col1FAI21RightLower.Dispose();
      hv_radianFAI21RightLower.Dispose();
      hv_len1FAI21RightLower.Dispose();
      hv_len2FAI21RightLower.Dispose();
      hv_row1FAI21Right.Dispose();
      hv_col1FAI21Right.Dispose();
      hv_radianFAI21Right.Dispose();
      hv_len1FAI21Right.Dispose();
      hv_len2FAI21Right.Dispose();
      hv_lineX1_FAI21_Right.Dispose();
      hv_lineY1_FAI21_Right.Dispose();
      hv_lineX2_FAI21_Right.Dispose();
      hv_lineY2_FAI21_Right.Dispose();
      hv_X1_FAI21_LINE_H_P1.Dispose();
      hv_Y1_FAI21_LINE_H_P1.Dispose();
      hv_X2_FAI21_LINE_H_P1.Dispose();
      hv_Y2_FAI21_LINE_H_P1.Dispose();
      hv_X1_FAI21_LINE_H_P3.Dispose();
      hv_Y1_FAI21_LINE_H_P3.Dispose();
      hv_X2_FAI21_LINE_H_P3.Dispose();
      hv_Y2_FAI21_LINE_H_P3.Dispose();
      hv_intersectY_LEFT.Dispose();
      hv_intersectX_LEFT.Dispose();
      hv_IsOverlapping.Dispose();
      hv_intersectY_RIGHT.Dispose();
      hv_intersectX_RIGHT.Dispose();
      hv_Distance.Dispose();
      hv_rectX1.Dispose();
      hv_rectY1.Dispose();
      hv_rectRadian.Dispose();
      hv_rectLen1.Dispose();
      hv_rectLen2.Dispose();
      hv_lineX1_FAI23_TOP.Dispose();
      hv_lineY1_FAI23_TOP.Dispose();
      hv_lineX2_FAI23_TOP.Dispose();
      hv_lineY2_FAI23_TOP.Dispose();
      hv_XsUsed.Dispose();
      hv_YsUsed.Dispose();
      hv_XsIgnored.Dispose();
      hv_YsIgnored.Dispose();
      hv_rect1X1.Dispose();
      hv_rect1Y1.Dispose();
      hv_rect1Radian.Dispose();
      hv_rect1Len1.Dispose();
      hv_rect1Len2.Dispose();
      hv_rect2X1.Dispose();
      hv_rect2Y1.Dispose();
      hv_rect2Radian.Dispose();
      hv_rect2Len1.Dispose();
      hv_rect2Len2.Dispose();
      hv_rect3X1.Dispose();
      hv_rect3Y1.Dispose();
      hv_rect3Radian.Dispose();
      hv_rect3Len1.Dispose();
      hv_rect3Len2.Dispose();
      hv_lineX1_FAI23_BOTTOM.Dispose();
      hv_lineY1_FAI23_BOTTOM.Dispose();
      hv_lineX2_FAI23_BOTTOM.Dispose();
      hv_lineY2_FAI23_BOTTOM.Dispose();
      hv_X1_FAI23_P1.Dispose();
      hv_Y1_FAI23_P1.Dispose();
      hv_X2_FAI23_P1.Dispose();
      hv_Y2_FAI23_P1.Dispose();
      hv_X1_FAI23_P3.Dispose();
      hv_Y1_FAI23_P3.Dispose();
      hv_X2_FAI23_P3.Dispose();
      hv_Y2_FAI23_P3.Dispose();
      hv_intersectY_TOP.Dispose();
      hv_intersectX_TOP.Dispose();
      hv_intersectY_BOTTOM.Dispose();
      hv_intersectX_BOTTOM.Dispose();
      hv_lineX1_FAI24_LEFT.Dispose();
      hv_lineY1_FAI24_LEFT.Dispose();
      hv_lineX2_FAI24_LEFT.Dispose();
      hv_lineY2_FAI24_LEFT.Dispose();
      hv_lineX1_FAI24_RIGHT.Dispose();
      hv_lineY1_FAI24_RIGHT.Dispose();
      hv_lineX2_FAI24_RIGHT.Dispose();
      hv_lineY2_FAI24_RIGHT.Dispose();
      hv_X1_FAI24_LINE_H_P2.Dispose();
      hv_Y1_FAI24_LINE_H_P2.Dispose();
      hv_X2_FAI24_LINE_H_P2.Dispose();
      hv_Y2_FAI24_LINE_H_P2.Dispose();
      hv_contourLength.Dispose();
      hv_Radius.Dispose();
      hv_StartPhi.Dispose();
      hv_EndPhi.Dispose();
      hv_PointOrder.Dispose();
      hv_diameterPixel.Dispose();
      hv_FAI25_H_X1.Dispose();
      hv_FAI25_H_Y1.Dispose();
      hv_FAI25_H_X2.Dispose();
      hv_FAI25_H_Y2.Dispose();
      hv_FAI25_V_X1.Dispose();
      hv_FAI25_V_Y1.Dispose();
      hv_FAI25_V_X2.Dispose();
      hv_FAI25_V_Y2.Dispose();
      hv_DistanceX.Dispose();
      hv_distancePixel.Dispose();
      hv_DistanceY.Dispose();
      hv_distance.Dispose();
      hv_X1_FAI26_LEFT.Dispose();
      hv_Y1_FAI26_LEFT.Dispose();
      hv_X2_FAI26_LEFT.Dispose();
      hv_Y2_FAI26_LEFT.Dispose();
      hv_X1_FAI26_RIGHT.Dispose();
      hv_Y1_FAI26_RIGHT.Dispose();
      hv_X2_FAI26_RIGHT.Dispose();
      hv_Y2_FAI26_RIGHT.Dispose();
      hv_contourLength1.Dispose();
      hv_rowTL_FAI26.Dispose();
      hv_colTL_FAI26.Dispose();
      hv_IsOverlapping3.Dispose();
      hv_contourLength2.Dispose();
      hv_rowBL_FAI26.Dispose();
      hv_colBL_FAI26.Dispose();
      hv_contourLength3.Dispose();
      hv_rowTR_FAI26.Dispose();
      hv_colTR_FAI26.Dispose();
      hv_contourLength4.Dispose();
      hv_rowBR_FAI26.Dispose();
      hv_colBR_FAI26.Dispose();
      hv_lineX1_FAI27_TOP.Dispose();
      hv_lineY1_FAI27_TOP.Dispose();
      hv_lineX2_FAI27_TOP.Dispose();
      hv_lineY2_FAI27_TOP.Dispose();
      hv_lineX1_FAI27_BOTTOM.Dispose();
      hv_lineY1_FAI27_BOTTOM.Dispose();
      hv_lineX2_FAI27_BOTTOM.Dispose();
      hv_lineY2_FAI27_BOTTOM.Dispose();
      hv_contourLength5.Dispose();
      hv_rowRightCircle.Dispose();
      hv_colRightCircle.Dispose();
      hv_radRightCircle.Dispose();
      hv_X1_FAI27_P2.Dispose();
      hv_Y1_FAI27_P2.Dispose();
      hv_X2_FAI27_P2.Dispose();
      hv_Y2_FAI27_P2.Dispose();
      hv_intersectY.Dispose();
      hv_intersectX.Dispose();
      hv_X1H.Dispose();
      hv_Y1H.Dispose();
      hv_X2H.Dispose();
      hv_Y2H.Dispose();
      hv_X1V.Dispose();
      hv_Y1V.Dispose();
      hv_X2V.Dispose();
      hv_Y2V.Dispose();
      hv_centerY.Dispose();
      hv_centerX.Dispose();
      hv_IsOverlapping9.Dispose();
      hv_lineX1_FAI29_LEFT.Dispose();
      hv_lineY1_FAI29_LEFT.Dispose();
      hv_lineX2_FAI29_LEFT.Dispose();
      hv_lineY2_FAI29_LEFT.Dispose();
      hv_lineX1_FAI29_RIGHT.Dispose();
      hv_lineY1_FAI29_RIGHT.Dispose();
      hv_lineX2_FAI29_RIGHT.Dispose();
      hv_lineY2_FAI29_RIGHT.Dispose();
      hv_X1_FAI29_LINE_H_P2.Dispose();
      hv_Y1_FAI29_LINE_H_P2.Dispose();
      hv_X2_FAI29_LINE_H_P2.Dispose();
      hv_Y2_FAI29_LINE_H_P2.Dispose();
      hv_lineX1_FAI31_TOPLEFT.Dispose();
      hv_lineY1_FAI31_TOPLEFT.Dispose();
      hv_lineX2_FAI31_TOPLEFT.Dispose();
      hv_lineY2_FAI31_TOPLEFT.Dispose();
      hv_lineX1_FAI31_BOTTOMLEFT.Dispose();
      hv_lineY1_FAI31_BOTTOMLEFT.Dispose();
      hv_lineX2_FAI31_BOTTOMLEFT.Dispose();
      hv_lineY2_FAI31_BOTTOMLEFT.Dispose();
      hv_lineX1_FAI31_TOPRIGHT.Dispose();
      hv_lineY1_FAI31_TOPRIGHT.Dispose();
      hv_lineX2_FAI31_TOPRIGHT.Dispose();
      hv_lineY2_FAI31_TOPRIGHT.Dispose();
      hv_lineX1_FAI31_BOTTOMRIGHT.Dispose();
      hv_lineY1_FAI31_BOTTOMRIGHT.Dispose();
      hv_lineX2_FAI31_BOTTOMRIGHT.Dispose();
      hv_lineY2_FAI31_BOTTOMRIGHT.Dispose();
      hv_X1_X_1.Dispose();
      hv_Y1_X_1.Dispose();
      hv_X2_X_1.Dispose();
      hv_Y2_X_1.Dispose();
      hv_ptY_TL.Dispose();
      hv_ptX_TL.Dispose();
      hv_IsOverlapping1.Dispose();
      hv_ptY_BL.Dispose();
      hv_ptX_BL.Dispose();
      hv_X1_X_2.Dispose();
      hv_Y1_X_2.Dispose();
      hv_X2_X_2.Dispose();
      hv_Y2_X_2.Dispose();
      hv_ptY_TR.Dispose();
      hv_ptX_TR.Dispose();
      hv_ptY_BR.Dispose();
      hv_ptX_BR.Dispose();
      hv_ptY.Dispose();
      hv_ptX.Dispose();
      hv_IsOverlapping2.Dispose();
      hv_IsOverlapping8.Dispose();
      hv_intersectY_TL.Dispose();
      hv_intersectX_TL.Dispose();
      hv_IsOverlapping5.Dispose();
      hv_intersectY_BL.Dispose();
      hv_intersectX_BL.Dispose();
      hv_intersectY_TR.Dispose();
      hv_intersectX_TR.Dispose();
      hv_intersectY_BR.Dispose();
      hv_intersectX_BR.Dispose();
      hv_X1_L6.Dispose();
      hv_Y1_L6.Dispose();
      hv_X2_L6.Dispose();
      hv_Y2_L6.Dispose();
      hv_X1_Y_1.Dispose();
      hv_Y1_Y_1.Dispose();
      hv_X2_Y_1.Dispose();
      hv_Y2_Y_1.Dispose();
      hv_intersectY_LT.Dispose();
      hv_intersectX_LT.Dispose();
      hv_IsOverlapping6.Dispose();
      hv_intersectY_RT.Dispose();
      hv_intersectX_RT.Dispose();
      hv_X1_Y_2.Dispose();
      hv_Y1_Y_2.Dispose();
      hv_X2_Y_2.Dispose();
      hv_Y2_Y_2.Dispose();
      hv_intersectY_LB.Dispose();
      hv_intersectX_LB.Dispose();
      hv_intersectY_RB.Dispose();
      hv_intersectX_RB.Dispose();
      hv_X1_L5.Dispose();
      hv_Y1_L5.Dispose();
      hv_X2_L5.Dispose();
      hv_Y2_L5.Dispose();
      hv_centerY_FAI32.Dispose();
      hv_centerX_FAI32.Dispose();
      hv_IsOverlapping7.Dispose();
      hv_L6_ROW1.Dispose();
      hv_L6_COL1.Dispose();
      hv_L6_ROW2.Dispose();
      hv_L6_COL2.Dispose();
      hv_L5_ROW1.Dispose();
      hv_L5_COL1.Dispose();
      hv_L5_ROW2.Dispose();
      hv_L5_COL2.Dispose();
      hv_centerY_FAI33.Dispose();
      hv_centerX_FAI33.Dispose();
      hv_IsOverlapping4.Dispose();
      hv_lineX1.Dispose();
      hv_lineY1.Dispose();
      hv_lineX2.Dispose();
      hv_lineY2.Dispose();
      hv_P1_X1.Dispose();
      hv_P1_Y1.Dispose();
      hv_P1_X2.Dispose();
      hv_P1_Y2.Dispose();
      hv_rowP1_TOP.Dispose();
      hv_colP1_TOP.Dispose();
      hv_IsOverlapping10.Dispose();
      hv_rowP1_BOTTOM.Dispose();
      hv_colP1_BOTTOM.Dispose();
      hv_P2_X1.Dispose();
      hv_P2_Y1.Dispose();
      hv_P2_X2.Dispose();
      hv_P2_Y2.Dispose();
      hv_rowP2_TOP.Dispose();
      hv_colP2_TOP.Dispose();
      hv_rowP2_BOTTOM.Dispose();
      hv_colP2_BOTTOM.Dispose();
      hv_P3_X1.Dispose();
      hv_P3_Y1.Dispose();
      hv_P3_X2.Dispose();
      hv_P3_Y2.Dispose();
      hv_rowP3_TOP.Dispose();
      hv_colP3_TOP.Dispose();
      hv_rowP3_BOTTOM.Dispose();
      hv_colP3_BOTTOM.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Image_COPY_INP_TMP.Dispose();
      ho_findLineRegionTop.Dispose();
      ho_lineRegionTop.Dispose();
      ho_findLineRegionLeft.Dispose();
      ho_lineRegionLeft.Dispose();
      ho_findLineRegion.Dispose();
      ho_lineRegion.Dispose();
      ho_lineContours.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageReduced1.Dispose();
      ho_ImageMean1.Dispose();
      ho_mask.Dispose();
      ho_ImageReduced2.Dispose();
      ho_Edges2.Dispose();
      ho_SelectedContours.Dispose();
      ho_UnionContours.Dispose();
      ho_outputContour.Dispose();
      ho_ContCircle.Dispose();
      ho_Circle.Dispose();
      ho_lineRegion1.Dispose();
      ho_ROI_FAI26_TL.Dispose();
      ho_ImageReduced.Dispose();
      ho_Edges1.Dispose();
      ho_Cross1.Dispose();
      ho_ROI_FAI26_BL.Dispose();
      ho_Cross2.Dispose();
      ho_ROI_FAI26_TR.Dispose();
      ho_Cross3.Dispose();
      ho_ROI_FAI26_BR.Dispose();
      ho_Region.Dispose();
      ho_ConnectedRegions.Dispose();
      ho_SelectedRegions.Dispose();
      ho_RegionDilation.Dispose();
      ho_image_intersection.Dispose();
      ho_Edges.Dispose();
      ho_UnionContours2.Dispose();
      ho_SelectedXLD.Dispose();
      ho_ContCircle1.Dispose();
      ho_Rectangle.Dispose();

      hv_CameraParameters.Dispose();
      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_MapToWorld.Dispose();
      hv_MapToImage.Dispose();
      hv_modelRow.Dispose();
      hv_modelCol.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementOfItem.Dispose();
      hv_FAI21_P1_LEN.Dispose();
      hv_FAI21_P2_LEN.Dispose();
      hv_FAI21_P3_LEN.Dispose();
      hv_FAI21_MID_LEN.Dispose();
      hv_FAI23_P1_LEN.Dispose();
      hv_FAI23_P2_LEN.Dispose();
      hv_FAI23_P3_LEN.Dispose();
      hv_FAI23_MID_LEN.Dispose();
      hv_FAI24_P1_LEN.Dispose();
      hv_FAI24_P2_LEN.Dispose();
      hv_FAI24_P3_LEN.Dispose();
      hv_FAI25_X_LEN.Dispose();
      hv_FAI25_Y_LEN.Dispose();
      hv_FAI26_LEN.Dispose();
      hv_FAI27_P1_LEN.Dispose();
      hv_FAI27_P2_LEN.Dispose();
      hv_FAI27_P3_LEN.Dispose();
      hv_FAI28_X_LEN.Dispose();
      hv_FAI28_Y_LEN.Dispose();
      hv_FAI29_P1_LEN.Dispose();
      hv_FAI29_P2_LEN.Dispose();
      hv_FAI29_P3_LEN.Dispose();
      hv_FAI31_LEFT_LEN.Dispose();
      hv_FAI31_RIGHT_LEN.Dispose();
      hv_FAI31_CENTERY_LEN.Dispose();
      hv_FAI31_CENTERX_LEN.Dispose();
      hv_FAI32_X1_LEN.Dispose();
      hv_FAI32_X2_LEN.Dispose();
      hv_FAI32_Y1_LEN.Dispose();
      hv_FAI32_Y2_LEN.Dispose();
      hv_FAI33_V_LEN.Dispose();
      hv_FAI33_H_LEN.Dispose();
      hv_FAI123_P1_LEN.Dispose();
      hv_FAI123_P2_LEN.Dispose();
      hv_FAI123_P3_LEN.Dispose();
      hv_sigma2.Dispose();
      hv_row1TopBase.Dispose();
      hv_col1TopBase.Dispose();
      hv_radianTopBase.Dispose();
      hv_len1TopBase.Dispose();
      hv_len2TopBase.Dispose();
      hv_row1TopBase1.Dispose();
      hv_col1TopBase1.Dispose();
      hv_radianTopBase1.Dispose();
      hv_len1TopBase1.Dispose();
      hv_len2TopBase1.Dispose();
      hv_row1TopBase2.Dispose();
      hv_col1TopBase2.Dispose();
      hv_radianTopBase2.Dispose();
      hv_len1TopBase2.Dispose();
      hv_len2TopBase2.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_newWidth.Dispose();
      hv_cannyLow.Dispose();
      hv_cannyHigh.Dispose();
      hv_lineX1TopBase.Dispose();
      hv_lineY1TopBase.Dispose();
      hv_lineX2TopBase.Dispose();
      hv_lineY2TopBase.Dispose();
      hv_ptsXUsed.Dispose();
      hv_ptsYUsed.Dispose();
      hv_ptsXIgnored.Dispose();
      hv_ptsYIgnored.Dispose();
      hv_row1LeftBase.Dispose();
      hv_col1LeftBase.Dispose();
      hv_radianLeftBase.Dispose();
      hv_len1LeftBase.Dispose();
      hv_len2LeftBase.Dispose();
      hv_row1LeftBase1.Dispose();
      hv_col1LeftBase1.Dispose();
      hv_radianLeftBase1.Dispose();
      hv_len1LeftBase1.Dispose();
      hv_len2LeftBase1.Dispose();
      hv_lineX1LeftBase.Dispose();
      hv_lineY1LeftBase.Dispose();
      hv_lineX2LeftBase.Dispose();
      hv_lineY2LeftBase.Dispose();
      hv_row1FAI21LeftUpper.Dispose();
      hv_col1FAI21LeftUpper.Dispose();
      hv_radianFAI21LeftUpper.Dispose();
      hv_len1FAI21LeftUpper.Dispose();
      hv_len2FAI21LeftUpper.Dispose();
      hv_row1FAI21LeftLower.Dispose();
      hv_col1FAI21LeftLower.Dispose();
      hv_radianFAI21LeftLower.Dispose();
      hv_len1FAI21LeftLower.Dispose();
      hv_len2FAI21LeftLower.Dispose();
      hv_row1FAI21Left.Dispose();
      hv_col1FAI21Left.Dispose();
      hv_radianFAI21Left.Dispose();
      hv_len1FAI21Left.Dispose();
      hv_len2FAI21Left.Dispose();
      hv_lineX1_FAI21_LEFT.Dispose();
      hv_lineY1_FAI21_LEFT.Dispose();
      hv_lineX2_FAI21_LEFT.Dispose();
      hv_lineY2_FAI21_LEFT.Dispose();
      hv_row1FAI21RightUpper.Dispose();
      hv_col1FAI21RightUpper.Dispose();
      hv_radianFAI21RightUpper.Dispose();
      hv_len1FAI21RightUpper.Dispose();
      hv_len2FAI21RightUpper.Dispose();
      hv_row1FAI21RightLower.Dispose();
      hv_col1FAI21RightLower.Dispose();
      hv_radianFAI21RightLower.Dispose();
      hv_len1FAI21RightLower.Dispose();
      hv_len2FAI21RightLower.Dispose();
      hv_row1FAI21Right.Dispose();
      hv_col1FAI21Right.Dispose();
      hv_radianFAI21Right.Dispose();
      hv_len1FAI21Right.Dispose();
      hv_len2FAI21Right.Dispose();
      hv_lineX1_FAI21_Right.Dispose();
      hv_lineY1_FAI21_Right.Dispose();
      hv_lineX2_FAI21_Right.Dispose();
      hv_lineY2_FAI21_Right.Dispose();
      hv_X1_FAI21_LINE_H_P1.Dispose();
      hv_Y1_FAI21_LINE_H_P1.Dispose();
      hv_X2_FAI21_LINE_H_P1.Dispose();
      hv_Y2_FAI21_LINE_H_P1.Dispose();
      hv_X1_FAI21_LINE_H_P3.Dispose();
      hv_Y1_FAI21_LINE_H_P3.Dispose();
      hv_X2_FAI21_LINE_H_P3.Dispose();
      hv_Y2_FAI21_LINE_H_P3.Dispose();
      hv_intersectY_LEFT.Dispose();
      hv_intersectX_LEFT.Dispose();
      hv_IsOverlapping.Dispose();
      hv_intersectY_RIGHT.Dispose();
      hv_intersectX_RIGHT.Dispose();
      hv_Distance.Dispose();
      hv_rectX1.Dispose();
      hv_rectY1.Dispose();
      hv_rectRadian.Dispose();
      hv_rectLen1.Dispose();
      hv_rectLen2.Dispose();
      hv_lineX1_FAI23_TOP.Dispose();
      hv_lineY1_FAI23_TOP.Dispose();
      hv_lineX2_FAI23_TOP.Dispose();
      hv_lineY2_FAI23_TOP.Dispose();
      hv_XsUsed.Dispose();
      hv_YsUsed.Dispose();
      hv_XsIgnored.Dispose();
      hv_YsIgnored.Dispose();
      hv_rect1X1.Dispose();
      hv_rect1Y1.Dispose();
      hv_rect1Radian.Dispose();
      hv_rect1Len1.Dispose();
      hv_rect1Len2.Dispose();
      hv_rect2X1.Dispose();
      hv_rect2Y1.Dispose();
      hv_rect2Radian.Dispose();
      hv_rect2Len1.Dispose();
      hv_rect2Len2.Dispose();
      hv_rect3X1.Dispose();
      hv_rect3Y1.Dispose();
      hv_rect3Radian.Dispose();
      hv_rect3Len1.Dispose();
      hv_rect3Len2.Dispose();
      hv_lineX1_FAI23_BOTTOM.Dispose();
      hv_lineY1_FAI23_BOTTOM.Dispose();
      hv_lineX2_FAI23_BOTTOM.Dispose();
      hv_lineY2_FAI23_BOTTOM.Dispose();
      hv_X1_FAI23_P1.Dispose();
      hv_Y1_FAI23_P1.Dispose();
      hv_X2_FAI23_P1.Dispose();
      hv_Y2_FAI23_P1.Dispose();
      hv_X1_FAI23_P3.Dispose();
      hv_Y1_FAI23_P3.Dispose();
      hv_X2_FAI23_P3.Dispose();
      hv_Y2_FAI23_P3.Dispose();
      hv_intersectY_TOP.Dispose();
      hv_intersectX_TOP.Dispose();
      hv_intersectY_BOTTOM.Dispose();
      hv_intersectX_BOTTOM.Dispose();
      hv_lineX1_FAI24_LEFT.Dispose();
      hv_lineY1_FAI24_LEFT.Dispose();
      hv_lineX2_FAI24_LEFT.Dispose();
      hv_lineY2_FAI24_LEFT.Dispose();
      hv_lineX1_FAI24_RIGHT.Dispose();
      hv_lineY1_FAI24_RIGHT.Dispose();
      hv_lineX2_FAI24_RIGHT.Dispose();
      hv_lineY2_FAI24_RIGHT.Dispose();
      hv_X1_FAI24_LINE_H_P2.Dispose();
      hv_Y1_FAI24_LINE_H_P2.Dispose();
      hv_X2_FAI24_LINE_H_P2.Dispose();
      hv_Y2_FAI24_LINE_H_P2.Dispose();
      hv_contourLength.Dispose();
      hv_Radius.Dispose();
      hv_StartPhi.Dispose();
      hv_EndPhi.Dispose();
      hv_PointOrder.Dispose();
      hv_diameterPixel.Dispose();
      hv_FAI25_H_X1.Dispose();
      hv_FAI25_H_Y1.Dispose();
      hv_FAI25_H_X2.Dispose();
      hv_FAI25_H_Y2.Dispose();
      hv_FAI25_V_X1.Dispose();
      hv_FAI25_V_Y1.Dispose();
      hv_FAI25_V_X2.Dispose();
      hv_FAI25_V_Y2.Dispose();
      hv_DistanceX.Dispose();
      hv_distancePixel.Dispose();
      hv_DistanceY.Dispose();
      hv_distance.Dispose();
      hv_X1_FAI26_LEFT.Dispose();
      hv_Y1_FAI26_LEFT.Dispose();
      hv_X2_FAI26_LEFT.Dispose();
      hv_Y2_FAI26_LEFT.Dispose();
      hv_X1_FAI26_RIGHT.Dispose();
      hv_Y1_FAI26_RIGHT.Dispose();
      hv_X2_FAI26_RIGHT.Dispose();
      hv_Y2_FAI26_RIGHT.Dispose();
      hv_contourLength1.Dispose();
      hv_rowTL_FAI26.Dispose();
      hv_colTL_FAI26.Dispose();
      hv_IsOverlapping3.Dispose();
      hv_contourLength2.Dispose();
      hv_rowBL_FAI26.Dispose();
      hv_colBL_FAI26.Dispose();
      hv_contourLength3.Dispose();
      hv_rowTR_FAI26.Dispose();
      hv_colTR_FAI26.Dispose();
      hv_contourLength4.Dispose();
      hv_rowBR_FAI26.Dispose();
      hv_colBR_FAI26.Dispose();
      hv_lineX1_FAI27_TOP.Dispose();
      hv_lineY1_FAI27_TOP.Dispose();
      hv_lineX2_FAI27_TOP.Dispose();
      hv_lineY2_FAI27_TOP.Dispose();
      hv_lineX1_FAI27_BOTTOM.Dispose();
      hv_lineY1_FAI27_BOTTOM.Dispose();
      hv_lineX2_FAI27_BOTTOM.Dispose();
      hv_lineY2_FAI27_BOTTOM.Dispose();
      hv_contourLength5.Dispose();
      hv_rowRightCircle.Dispose();
      hv_colRightCircle.Dispose();
      hv_radRightCircle.Dispose();
      hv_X1_FAI27_P2.Dispose();
      hv_Y1_FAI27_P2.Dispose();
      hv_X2_FAI27_P2.Dispose();
      hv_Y2_FAI27_P2.Dispose();
      hv_intersectY.Dispose();
      hv_intersectX.Dispose();
      hv_X1H.Dispose();
      hv_Y1H.Dispose();
      hv_X2H.Dispose();
      hv_Y2H.Dispose();
      hv_X1V.Dispose();
      hv_Y1V.Dispose();
      hv_X2V.Dispose();
      hv_Y2V.Dispose();
      hv_centerY.Dispose();
      hv_centerX.Dispose();
      hv_IsOverlapping9.Dispose();
      hv_lineX1_FAI29_LEFT.Dispose();
      hv_lineY1_FAI29_LEFT.Dispose();
      hv_lineX2_FAI29_LEFT.Dispose();
      hv_lineY2_FAI29_LEFT.Dispose();
      hv_lineX1_FAI29_RIGHT.Dispose();
      hv_lineY1_FAI29_RIGHT.Dispose();
      hv_lineX2_FAI29_RIGHT.Dispose();
      hv_lineY2_FAI29_RIGHT.Dispose();
      hv_X1_FAI29_LINE_H_P2.Dispose();
      hv_Y1_FAI29_LINE_H_P2.Dispose();
      hv_X2_FAI29_LINE_H_P2.Dispose();
      hv_Y2_FAI29_LINE_H_P2.Dispose();
      hv_lineX1_FAI31_TOPLEFT.Dispose();
      hv_lineY1_FAI31_TOPLEFT.Dispose();
      hv_lineX2_FAI31_TOPLEFT.Dispose();
      hv_lineY2_FAI31_TOPLEFT.Dispose();
      hv_lineX1_FAI31_BOTTOMLEFT.Dispose();
      hv_lineY1_FAI31_BOTTOMLEFT.Dispose();
      hv_lineX2_FAI31_BOTTOMLEFT.Dispose();
      hv_lineY2_FAI31_BOTTOMLEFT.Dispose();
      hv_lineX1_FAI31_TOPRIGHT.Dispose();
      hv_lineY1_FAI31_TOPRIGHT.Dispose();
      hv_lineX2_FAI31_TOPRIGHT.Dispose();
      hv_lineY2_FAI31_TOPRIGHT.Dispose();
      hv_lineX1_FAI31_BOTTOMRIGHT.Dispose();
      hv_lineY1_FAI31_BOTTOMRIGHT.Dispose();
      hv_lineX2_FAI31_BOTTOMRIGHT.Dispose();
      hv_lineY2_FAI31_BOTTOMRIGHT.Dispose();
      hv_X1_X_1.Dispose();
      hv_Y1_X_1.Dispose();
      hv_X2_X_1.Dispose();
      hv_Y2_X_1.Dispose();
      hv_ptY_TL.Dispose();
      hv_ptX_TL.Dispose();
      hv_IsOverlapping1.Dispose();
      hv_ptY_BL.Dispose();
      hv_ptX_BL.Dispose();
      hv_X1_X_2.Dispose();
      hv_Y1_X_2.Dispose();
      hv_X2_X_2.Dispose();
      hv_Y2_X_2.Dispose();
      hv_ptY_TR.Dispose();
      hv_ptX_TR.Dispose();
      hv_ptY_BR.Dispose();
      hv_ptX_BR.Dispose();
      hv_ptY.Dispose();
      hv_ptX.Dispose();
      hv_IsOverlapping2.Dispose();
      hv_IsOverlapping8.Dispose();
      hv_intersectY_TL.Dispose();
      hv_intersectX_TL.Dispose();
      hv_IsOverlapping5.Dispose();
      hv_intersectY_BL.Dispose();
      hv_intersectX_BL.Dispose();
      hv_intersectY_TR.Dispose();
      hv_intersectX_TR.Dispose();
      hv_intersectY_BR.Dispose();
      hv_intersectX_BR.Dispose();
      hv_X1_L6.Dispose();
      hv_Y1_L6.Dispose();
      hv_X2_L6.Dispose();
      hv_Y2_L6.Dispose();
      hv_X1_Y_1.Dispose();
      hv_Y1_Y_1.Dispose();
      hv_X2_Y_1.Dispose();
      hv_Y2_Y_1.Dispose();
      hv_intersectY_LT.Dispose();
      hv_intersectX_LT.Dispose();
      hv_IsOverlapping6.Dispose();
      hv_intersectY_RT.Dispose();
      hv_intersectX_RT.Dispose();
      hv_X1_Y_2.Dispose();
      hv_Y1_Y_2.Dispose();
      hv_X2_Y_2.Dispose();
      hv_Y2_Y_2.Dispose();
      hv_intersectY_LB.Dispose();
      hv_intersectX_LB.Dispose();
      hv_intersectY_RB.Dispose();
      hv_intersectX_RB.Dispose();
      hv_X1_L5.Dispose();
      hv_Y1_L5.Dispose();
      hv_X2_L5.Dispose();
      hv_Y2_L5.Dispose();
      hv_centerY_FAI32.Dispose();
      hv_centerX_FAI32.Dispose();
      hv_IsOverlapping7.Dispose();
      hv_L6_ROW1.Dispose();
      hv_L6_COL1.Dispose();
      hv_L6_ROW2.Dispose();
      hv_L6_COL2.Dispose();
      hv_L5_ROW1.Dispose();
      hv_L5_COL1.Dispose();
      hv_L5_ROW2.Dispose();
      hv_L5_COL2.Dispose();
      hv_centerY_FAI33.Dispose();
      hv_centerX_FAI33.Dispose();
      hv_IsOverlapping4.Dispose();
      hv_lineX1.Dispose();
      hv_lineY1.Dispose();
      hv_lineX2.Dispose();
      hv_lineY2.Dispose();
      hv_P1_X1.Dispose();
      hv_P1_Y1.Dispose();
      hv_P1_X2.Dispose();
      hv_P1_Y2.Dispose();
      hv_rowP1_TOP.Dispose();
      hv_colP1_TOP.Dispose();
      hv_IsOverlapping10.Dispose();
      hv_rowP1_BOTTOM.Dispose();
      hv_colP1_BOTTOM.Dispose();
      hv_P2_X1.Dispose();
      hv_P2_Y1.Dispose();
      hv_P2_X2.Dispose();
      hv_P2_Y2.Dispose();
      hv_rowP2_TOP.Dispose();
      hv_colP2_TOP.Dispose();
      hv_rowP2_BOTTOM.Dispose();
      hv_colP2_BOTTOM.Dispose();
      hv_P3_X1.Dispose();
      hv_P3_Y1.Dispose();
      hv_P3_X2.Dispose();
      hv_P3_Y2.Dispose();
      hv_rowP3_TOP.Dispose();
      hv_colP3_TOP.Dispose();
      hv_rowP3_BOTTOM.Dispose();
      hv_colP3_BOTTOM.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void I94FindLeftCircle (HObject ho_Image, out HObject ho_ContourCircle, 
      HTuple hv_row, HTuple hv_col, HTuple hv_radian, HTuple hv_len1, HTuple hv_len2, 
      out HTuple hv_centerXImageAbs, out HTuple hv_centerYImageAbs, out HTuple hv_radiusPixel)
  {




    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageReduced1, ho_Edges2;
    HObject ho_SelectedContours, ho_UnionContours, ho_outputContour;

    // Local control variables 

    HTuple hv_contourLength = new HTuple(), hv_StartPhi = new HTuple();
    HTuple hv_EndPhi = new HTuple(), hv_PointOrder = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ContourCircle);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced1);
    HOperatorSet.GenEmptyObj(out ho_Edges2);
    HOperatorSet.GenEmptyObj(out ho_SelectedContours);
    HOperatorSet.GenEmptyObj(out ho_UnionContours);
    HOperatorSet.GenEmptyObj(out ho_outputContour);
    hv_centerXImageAbs = new HTuple();
    hv_centerYImageAbs = new HTuple();
    hv_radiusPixel = new HTuple();
    try
    {

      ho_ROI_0.Dispose();
      HOperatorSet.GenRectangle2(out ho_ROI_0, hv_row, hv_col, hv_radian, hv_len1, 
          hv_len2);

      ho_ImageReduced1.Dispose();
      HOperatorSet.ReduceDomain(ho_Image, ho_ROI_0, out ho_ImageReduced1);
      ho_Edges2.Dispose();
      HOperatorSet.EdgesSubPix(ho_ImageReduced1, out ho_Edges2, "canny", 3, 15, 30);

      ho_SelectedContours.Dispose();
      HOperatorSet.SelectContoursXld(ho_Edges2, out ho_SelectedContours, "contour_length", 
          200, 999999, -0.5, 0.5);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_UnionContours.Dispose();
      HOperatorSet.UnionCocircularContoursXld(ho_SelectedContours, out ho_UnionContours, 
          (new HTuple(180)).TupleRad(), (new HTuple(5)).TupleRad(), (new HTuple(180)).TupleRad()
          , 2000, 10, 50, "true", 3);
      }

      ho_outputContour.Dispose();hv_contourLength.Dispose();
      LongestXLD(ho_UnionContours, out ho_outputContour, out hv_contourLength);
      hv_centerYImageAbs.Dispose();hv_centerXImageAbs.Dispose();hv_radiusPixel.Dispose();hv_StartPhi.Dispose();hv_EndPhi.Dispose();hv_PointOrder.Dispose();
      HOperatorSet.FitCircleContourXld(ho_outputContour, "algebraic", -1, 0, 0, 3, 
          2, out hv_centerYImageAbs, out hv_centerXImageAbs, out hv_radiusPixel, 
          out hv_StartPhi, out hv_EndPhi, out hv_PointOrder);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_ContourCircle.Dispose();
      HOperatorSet.GenCircleContourXld(out ho_ContourCircle, hv_centerYImageAbs, 
          hv_centerXImageAbs, hv_radiusPixel, 0, (new HTuple(360)).TupleRad(), "positive", 
          1);
      }

      ho_ROI_0.Dispose();
      ho_ImageReduced1.Dispose();
      ho_Edges2.Dispose();
      ho_SelectedContours.Dispose();
      ho_UnionContours.Dispose();
      ho_outputContour.Dispose();

      hv_contourLength.Dispose();
      hv_StartPhi.Dispose();
      hv_EndPhi.Dispose();
      hv_PointOrder.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_ROI_0.Dispose();
      ho_ImageReduced1.Dispose();
      ho_Edges2.Dispose();
      ho_SelectedContours.Dispose();
      ho_UnionContours.Dispose();
      ho_outputContour.Dispose();

      hv_contourLength.Dispose();
      hv_StartPhi.Dispose();
      hv_EndPhi.Dispose();
      hv_PointOrder.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void I94FindRightCircle (HObject ho_Image, out HObject ho_ContourCircle, 
      HTuple hv_row, HTuple hv_col, HTuple hv_radian, HTuple hv_len1, HTuple hv_len2, 
      out HTuple hv_centerXImageAbs, out HTuple hv_centerYImageAbs, out HTuple hv_radiusPixel)
  {




    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageReduced, ho_Region;
    HObject ho_ConnectedRegions, ho_SelectedRegions, ho_RegionDilation;
    HObject ho_image_intersection, ho_Edges, ho_UnionContours2;
    HObject ho_SelectedXLD;

    // Local control variables 

    HTuple hv_contourLength5 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ContourCircle);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_Region);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
    HOperatorSet.GenEmptyObj(out ho_RegionDilation);
    HOperatorSet.GenEmptyObj(out ho_image_intersection);
    HOperatorSet.GenEmptyObj(out ho_Edges);
    HOperatorSet.GenEmptyObj(out ho_UnionContours2);
    HOperatorSet.GenEmptyObj(out ho_SelectedXLD);
    hv_centerXImageAbs = new HTuple();
    hv_centerYImageAbs = new HTuple();
    hv_radiusPixel = new HTuple();
    try
    {

      ho_ROI_0.Dispose();
      HOperatorSet.GenRectangle2(out ho_ROI_0, hv_row, hv_col, hv_radian, hv_len1, 
          hv_len2);
      ho_ImageReduced.Dispose();
      HOperatorSet.ReduceDomain(ho_Image, ho_ROI_0, out ho_ImageReduced);
      ho_Region.Dispose();
      HOperatorSet.Threshold(ho_ImageReduced, out ho_Region, 100, 255);
      ho_ConnectedRegions.Dispose();
      HOperatorSet.Connection(ho_Region, out ho_ConnectedRegions);

      ho_SelectedRegions.Dispose();
      HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, "area", 
          "and", 800000, 1200000);
      ho_RegionDilation.Dispose();
      HOperatorSet.DilationCircle(ho_SelectedRegions, out ho_RegionDilation, 35);

      ho_image_intersection.Dispose();
      HOperatorSet.ReduceDomain(ho_Image, ho_RegionDilation, out ho_image_intersection
          );
      ho_Edges.Dispose();
      HOperatorSet.EdgesSubPix(ho_image_intersection, out ho_Edges, "canny", 1, 10, 
          20);

      ho_UnionContours2.Dispose();
      HOperatorSet.UnionAdjacentContoursXld(ho_Edges, out ho_UnionContours2, 1000, 
          1000, "attr_keep");
      ho_SelectedXLD.Dispose();hv_contourLength5.Dispose();
      LongestXLD(ho_UnionContours2, out ho_SelectedXLD, out hv_contourLength5);
      hv_centerYImageAbs.Dispose();hv_centerXImageAbs.Dispose();hv_radiusPixel.Dispose();
      HOperatorSet.SmallestCircleXld(ho_SelectedXLD, out hv_centerYImageAbs, out hv_centerXImageAbs, 
          out hv_radiusPixel);
      //fit_circle_contour_xld (SelectedXLD, 'algebraic', -1, 0, 0, 3, 2, rowRightCircle, colRightCircle, radRightCircle, StartPhi1, EndPhi1, PointOrder1)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_ContourCircle.Dispose();
      HOperatorSet.GenCircleContourXld(out ho_ContourCircle, hv_centerYImageAbs, 
          hv_centerXImageAbs, hv_radiusPixel, 0, (new HTuple(360)).TupleRad(), "positive", 
          1);
      }

      ho_ROI_0.Dispose();
      ho_ImageReduced.Dispose();
      ho_Region.Dispose();
      ho_ConnectedRegions.Dispose();
      ho_SelectedRegions.Dispose();
      ho_RegionDilation.Dispose();
      ho_image_intersection.Dispose();
      ho_Edges.Dispose();
      ho_UnionContours2.Dispose();
      ho_SelectedXLD.Dispose();

      hv_contourLength5.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_ROI_0.Dispose();
      ho_ImageReduced.Dispose();
      ho_Region.Dispose();
      ho_ConnectedRegions.Dispose();
      ho_SelectedRegions.Dispose();
      ho_RegionDilation.Dispose();
      ho_image_intersection.Dispose();
      ho_Edges.Dispose();
      ho_UnionContours2.Dispose();
      ho_SelectedXLD.Dispose();

      hv_contourLength5.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void I94TopFaceMeasurement (HObject ho_Image, out HObject ho_ImageUndistorted, 
      out HObject ho_lineRegions, out HObject ho_FindLineRects, HTuple hv_ModelID, 
      HTuple hv_xCoeff, HTuple hv_yCoeff, HTuple hv_FindLineNames, HTuple hv_thresholds, 
      HTuple hv_IgnorePortions, HTuple hv_Sigma1s, HTuple hv_Sigma2s, HTuple hv_NewWidths, 
      HTuple hv_CannyLows, HTuple hv_CannyHighs, out HTuple hv_outputs, out HTuple hv_crossesXused, 
      out HTuple hv_crossesYused, out HTuple hv_crossesXIgnored, out HTuple hv_crossesYIgnored, 
      out HTuple hv_intersectXs, out HTuple hv_intersectYs, out HTuple hv_outputsPixel)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageReduced, ho_Region;
    HObject ho_ConnectedRegions, ho_SelectedRegions, ho_ImageResult;
    HObject ho_Rectangle8, ho_ImageReduced1, ho_Rectangle1;
    HObject ho_rect=null, ho_lineRegion=null, ho_rectFAI2=null;
    HObject ho_Rectangle7, ho_rectFAI3=null, ho_Rectangle6;
    HObject ho_rectFAI4=null, ho_Rectangle2, ho_Rectangle, ho_lineRegion1;
    HObject ho_Cross, ho_Rectangle3, ho_Rectangle4, ho_Rectangle5;

    // Local copy input parameter variables 
    HObject ho_Image_COPY_INP_TMP;
    ho_Image_COPY_INP_TMP = new HObject(ho_Image);



    // Local control variables 

    HTuple hv_CameraParameters = new HTuple();
    HTuple hv_CameraPose = new HTuple(), hv_OutCameraParams = new HTuple();
    HTuple hv_MapToWorld = new HTuple(), hv_MapToImage = new HTuple();
    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_crossSize = new HTuple(), hv_numSubRects = new HTuple();
    HTuple hv_ModelThreshold = new HTuple(), hv_FAI2_LEN_P1 = new HTuple();
    HTuple hv_FAI2_LEN_P2 = new HTuple(), hv_FAI2_LEN_P3 = new HTuple();
    HTuple hv_FAI3_LEN_P1 = new HTuple(), hv_FAI3_LEN_P2 = new HTuple();
    HTuple hv_FAI3_LEN_P3 = new HTuple(), hv_FAI4_LEN_P1 = new HTuple();
    HTuple hv_FAI4_LEN_P2 = new HTuple(), hv_FAI4_LEN_P3 = new HTuple();
    HTuple hv_FAI5_LEN_P1 = new HTuple(), hv_FAI5_LEN_P2 = new HTuple();
    HTuple hv_FAI5_LEN_P3 = new HTuple(), hv_FAI6_LEN_P1 = new HTuple();
    HTuple hv_FAI6_LEN_P2 = new HTuple(), hv_FAI6_LEN_P3 = new HTuple();
    HTuple hv_FAI9_LEN_P1 = new HTuple(), hv_FAI9_LEN_P2 = new HTuple();
    HTuple hv_FAI9_LEN_P3 = new HTuple(), hv_FAI12_LEN_P1 = new HTuple();
    HTuple hv_FAI12_LEN_P2 = new HTuple(), hv_FAI16_LEN_P1 = new HTuple();
    HTuple hv_FAI16_LEN_P2 = new HTuple(), hv_FAI17_LEN_P1 = new HTuple();
    HTuple hv_FAI17_LEN_P2 = new HTuple(), hv_FAI19_LEN_P1 = new HTuple();
    HTuple hv_FAI19_LEN_P2 = new HTuple(), hv_FAI20_LEN_X = new HTuple();
    HTuple hv_FAI20_LEN_Y = new HTuple(), hv_Threshold = new HTuple();
    HTuple hv_rowModel = new HTuple(), hv_colModel = new HTuple();
    HTuple hv_UsedThreshold = new HTuple(), hv_Row = new HTuple();
    HTuple hv_Column = new HTuple(), hv_Angle = new HTuple();
    HTuple hv_Score = new HTuple(), hv_MovementImageToImage = new HTuple();
    HTuple hv_ROW_1 = new HTuple(), hv_COL_1 = new HTuple();
    HTuple hv_RAD_1 = new HTuple(), hv_LEN_1 = new HTuple();
    HTuple hv_LEN_2 = new HTuple(), hv_Value = new HTuple();
    HTuple hv_standardGrayValue = new HTuple(), hv_scaleFacotr = new HTuple();
    HTuple hv_ROW1_1 = new HTuple(), hv_COL1_1 = new HTuple();
    HTuple hv_RAD1_1 = new HTuple(), hv_LEN1_1 = new HTuple();
    HTuple hv_LEN2_1 = new HTuple(), hv_ROW1_2 = new HTuple();
    HTuple hv_COL1_2 = new HTuple(), hv_RAD1_2 = new HTuple();
    HTuple hv_LEN1_2 = new HTuple(), hv_LEN2_2 = new HTuple();
    HTuple hv_baseRightRow = new HTuple(), hv_baseRightColum = new HTuple();
    HTuple hv_baseRightRadian = new HTuple(), hv_baseRightLen1 = new HTuple();
    HTuple hv_baseRightLen2 = new HTuple(), hv_threshValue = new HTuple();
    HTuple hv_ignorePortion = new HTuple(), hv_sigma1 = new HTuple();
    HTuple hv_sigma2 = new HTuple(), hv_newWidth = new HTuple();
    HTuple hv_cannyLow = new HTuple(), hv_cannyHigh = new HTuple();
    HTuple hv_lineX1RightBase = new HTuple(), hv_lineY1RightBase = new HTuple();
    HTuple hv_lineX2RightBase = new HTuple(), hv_lineY2RightBase = new HTuple();
    HTuple hv_XsUsed = new HTuple(), hv_YsUsed = new HTuple();
    HTuple hv_XsIgnored = new HTuple(), hv_YsIgnored = new HTuple();
    HTuple hv_ROW_2 = new HTuple(), hv_COL_2 = new HTuple();
    HTuple hv_RAD_2 = new HTuple(), hv_ROW_3 = new HTuple();
    HTuple hv_COL_3 = new HTuple(), hv_RAD_3 = new HTuple();
    HTuple hv_LEN1_3 = new HTuple(), hv_LEN2_3 = new HTuple();
    HTuple hv_baseTopRow = new HTuple(), hv_baseTopColumn = new HTuple();
    HTuple hv_baseTopRadian = new HTuple(), hv_baseTopLen1 = new HTuple();
    HTuple hv_baseTopLen2 = new HTuple(), hv_lineX1TopBase = new HTuple();
    HTuple hv_lineY1TopBase = new HTuple(), hv_lineX2TopBase = new HTuple();
    HTuple hv_lineY2TopBase = new HTuple(), hv_rowOrigin = new HTuple();
    HTuple hv_colOrigin = new HTuple(), hv_IsOverlapping = new HTuple();
    HTuple hv_ptXOnPerpenducularDir = new HTuple(), hv_ptYOnPerpenducularDir = new HTuple();
    HTuple hv_FAI2_P1_LineStartX = new HTuple(), hv_FAI2_P1_LineStartY = new HTuple();
    HTuple hv_FAI2_P1_LineEndX = new HTuple(), hv_FAI2_P1_LineEndY = new HTuple();
    HTuple hv_FAI2_P2_LineStartX = new HTuple(), hv_FAI2_P2_LineStartY = new HTuple();
    HTuple hv_FAI2_P2_LineEndX = new HTuple(), hv_FAI2_P2_LineEndY = new HTuple();
    HTuple hv_FAI2_P3_LineStartX = new HTuple(), hv_FAI2_P3_LineStartY = new HTuple();
    HTuple hv_FAI2_P3_LineEndX = new HTuple(), hv_FAI2_P3_LineEndY = new HTuple();
    HTuple hv_rectFAI2Row = new HTuple(), hv_rectFAI2Col = new HTuple();
    HTuple hv_rectFAI2Radian = new HTuple(), hv_rectFAI2Len1 = new HTuple();
    HTuple hv_rectFAI2Len2 = new HTuple(), hv_rectFAI2Row_RIGHT = new HTuple();
    HTuple hv_rectFAI2Col_RIGHT = new HTuple(), hv_rectFAI2Radian_RIGHT = new HTuple();
    HTuple hv_rectFAI2Len1_RIGHT = new HTuple(), hv_rectFAI2Len2_RIGHT = new HTuple();
    HTuple hv_lineStartX_FAI2H = new HTuple(), hv_lineStartY_FAI2H = new HTuple();
    HTuple hv_lineEndX_FAI2H = new HTuple(), hv_lineEndY_FAI2H = new HTuple();
    HTuple hv_rowIntersect = new HTuple(), hv_colIntersect = new HTuple();
    HTuple hv_IsOverlapping1 = new HTuple(), hv_distanceWorld = new HTuple();
    HTuple hv_distancePixel = new HTuple(), hv_rectFAI3Row = new HTuple();
    HTuple hv_rectFAI3Col = new HTuple(), hv_rectFAI3Radian = new HTuple();
    HTuple hv_rectFAI3Len1 = new HTuple(), hv_rectFAI3Len2 = new HTuple();
    HTuple hv_rectFAI3Row_RIGHT = new HTuple(), hv_rectFAI3Col_RIGHT = new HTuple();
    HTuple hv_rectFAI3Radian_RIGHT = new HTuple(), hv_rectFAI3Len1_RIGHT = new HTuple();
    HTuple hv_rectFAI3Len2_RIGHT = new HTuple(), hv_FAI3_P1_LineStartX = new HTuple();
    HTuple hv_FAI3_P1_LineStartY = new HTuple(), hv_FAI3_P1_LineEndX = new HTuple();
    HTuple hv_FAI3_P1_LineEndY = new HTuple(), hv_FAI3_P2_LineStartX = new HTuple();
    HTuple hv_FAI3_P2_LineStartY = new HTuple(), hv_FAI3_P2_LineEndX = new HTuple();
    HTuple hv_FAI3_P2_LineEndY = new HTuple(), hv_FAI3_P3_LineStartX = new HTuple();
    HTuple hv_FAI3_P3_LineStartY = new HTuple(), hv_FAI3_P3_LineEndX = new HTuple();
    HTuple hv_FAI3_P3_LineEndY = new HTuple(), hv_IsOverlapping2 = new HTuple();
    HTuple hv_rectFAI4Row = new HTuple(), hv_rectFAI4Col = new HTuple();
    HTuple hv_rectFAI4Radian = new HTuple(), hv_rectFAI4Len1 = new HTuple();
    HTuple hv_rectFAI4Len2 = new HTuple(), hv_lineX1FAI4 = new HTuple();
    HTuple hv_lineY1FAI4 = new HTuple(), hv_lineX2FAI4 = new HTuple();
    HTuple hv_lineY2FAI4 = new HTuple(), hv_rectFAI5Row = new HTuple();
    HTuple hv_rectFAI5Col = new HTuple(), hv_rectFAI5Radian = new HTuple();
    HTuple hv_rectFAI5Len1 = new HTuple(), hv_rectFAI5Len2 = new HTuple();
    HTuple hv_lineX1FAI5 = new HTuple(), hv_lineY1FAI5 = new HTuple();
    HTuple hv_lineX2FAI5 = new HTuple(), hv_lineY2FAI5 = new HTuple();
    HTuple hv_rectFAI6Row = new HTuple(), hv_rectFAI6Col = new HTuple();
    HTuple hv_rectFAI6Radian = new HTuple(), hv_rectFAI6Len1 = new HTuple();
    HTuple hv_rectFAI6Len2 = new HTuple(), hv_lineX1FAI6 = new HTuple();
    HTuple hv_lineY1FAI6 = new HTuple(), hv_lineX2FAI6 = new HTuple();
    HTuple hv_lineY2FAI6 = new HTuple(), hv_FAI6_P1_LineStartX = new HTuple();
    HTuple hv_FAI6_P1_LineStartY = new HTuple(), hv_FAI6_P1_LineEndX = new HTuple();
    HTuple hv_FAI6_P1_LineEndY = new HTuple(), hv_FAI6_P2_LineStartX = new HTuple();
    HTuple hv_FAI6_P2_LineStartY = new HTuple(), hv_FAI6_P2_LineEndX = new HTuple();
    HTuple hv_FAI6_P2_LineEndY = new HTuple(), hv_FAI6_P3_LineStartX = new HTuple();
    HTuple hv_FAI6_P3_LineStartY = new HTuple(), hv_FAI6_P3_LineEndX = new HTuple();
    HTuple hv_FAI6_P3_LineEndY = new HTuple(), hv_rectFAI9Row = new HTuple();
    HTuple hv_rectFAI9Col = new HTuple(), hv_rectFAI9Radian = new HTuple();
    HTuple hv_rectFAI9Len1 = new HTuple(), hv_rectFAI9Len2 = new HTuple();
    HTuple hv_lineX1FAI9 = new HTuple(), hv_lineY1FAI9 = new HTuple();
    HTuple hv_lineX2FAI9 = new HTuple(), hv_lineY2FAI9 = new HTuple();
    HTuple hv_FAI9_P1_LineStartX = new HTuple(), hv_FAI9_P1_LineStartY = new HTuple();
    HTuple hv_FAI9_P1_LineEndX = new HTuple(), hv_FAI9_P1_LineEndY = new HTuple();
    HTuple hv_FAI9_P2_LineStartX = new HTuple(), hv_FAI9_P2_LineStartY = new HTuple();
    HTuple hv_FAI9_P2_LineEndX = new HTuple(), hv_FAI9_P2_LineEndY = new HTuple();
    HTuple hv_FAI9_P3_LineStartX = new HTuple(), hv_FAI9_P3_LineStartY = new HTuple();
    HTuple hv_FAI9_P3_LineEndX = new HTuple(), hv_FAI9_P3_LineEndY = new HTuple();
    HTuple hv_rectFAI12Row = new HTuple(), hv_rectFAI12Col = new HTuple();
    HTuple hv_rectFAI12Radian = new HTuple(), hv_rectFAI12Len1 = new HTuple();
    HTuple hv_rectFAI12Len2 = new HTuple(), hv_lineX1FAI12 = new HTuple();
    HTuple hv_lineY1FAI12 = new HTuple(), hv_lineX2FAI12 = new HTuple();
    HTuple hv_lineY2FAI12 = new HTuple(), hv_FAI12_P1_LineStartX = new HTuple();
    HTuple hv_FAI12_P1_LineStartY = new HTuple(), hv_FAI12_P1_LineEndX = new HTuple();
    HTuple hv_FAI12_P1_LineEndY = new HTuple(), hv_FAI12_P2_LineStartX = new HTuple();
    HTuple hv_FAI12_P2_LineStartY = new HTuple(), hv_FAI12_P2_LineEndX = new HTuple();
    HTuple hv_FAI12_P2_LineEndY = new HTuple(), hv_rectFAI16Row = new HTuple();
    HTuple hv_rectFAI16Col = new HTuple(), hv_rectFAI16Radian = new HTuple();
    HTuple hv_rectFAI16Len1 = new HTuple(), hv_rectFAI16Len2 = new HTuple();
    HTuple hv_lineX1FAI16 = new HTuple(), hv_lineY1FAI16 = new HTuple();
    HTuple hv_lineX2FAI16 = new HTuple(), hv_lineY2FAI16 = new HTuple();
    HTuple hv_FAI16_P1_LineStartX = new HTuple(), hv_FAI16_P1_LineStartY = new HTuple();
    HTuple hv_FAI16_P1_LineEndX = new HTuple(), hv_FAI16_P1_LineEndY = new HTuple();
    HTuple hv_FAI16_P2_LineStartX = new HTuple(), hv_FAI16_P2_LineStartY = new HTuple();
    HTuple hv_FAI16_P2_LineEndX = new HTuple(), hv_FAI16_P2_LineEndY = new HTuple();
    HTuple hv_rectFAI17Row = new HTuple(), hv_rectFAI17Col = new HTuple();
    HTuple hv_rectFAI17Radian = new HTuple(), hv_rectFAI17Len1 = new HTuple();
    HTuple hv_rectFAI17Len2 = new HTuple(), hv_lineX1FAI17 = new HTuple();
    HTuple hv_lineY1FAI17 = new HTuple(), hv_lineX2FAI17 = new HTuple();
    HTuple hv_lineY2FAI17 = new HTuple(), hv_FAI17_P1_LineStartX = new HTuple();
    HTuple hv_FAI17_P1_LineStartY = new HTuple(), hv_FAI17_P1_LineEndX = new HTuple();
    HTuple hv_FAI17_P1_LineEndY = new HTuple(), hv_FAI17_P2_LineStartX = new HTuple();
    HTuple hv_FAI17_P2_LineStartY = new HTuple(), hv_FAI17_P2_LineEndX = new HTuple();
    HTuple hv_FAI17_P2_LineEndY = new HTuple(), hv_rectFAI19Row = new HTuple();
    HTuple hv_rectFAI19Col = new HTuple(), hv_rectFAI19Radian = new HTuple();
    HTuple hv_rectFAI19Len1 = new HTuple(), hv_rectFAI19Len2 = new HTuple();
    HTuple hv_lineX1FAI19 = new HTuple(), hv_lineY1FAI19 = new HTuple();
    HTuple hv_lineX2FAI19 = new HTuple(), hv_lineY2FAI19 = new HTuple();
    HTuple hv_FAI19_P1_LineStartX = new HTuple(), hv_FAI19_P1_LineStartY = new HTuple();
    HTuple hv_FAI19_P1_LineEndX = new HTuple(), hv_FAI19_P1_LineEndY = new HTuple();
    HTuple hv_FAI19_P2_LineStartX = new HTuple(), hv_FAI19_P2_LineStartY = new HTuple();
    HTuple hv_FAI19_P2_LineEndX = new HTuple(), hv_FAI19_P2_LineEndY = new HTuple();
    HTuple hv_FAI20_P2_LineStartX = new HTuple(), hv_FAI20_P2_LineStartY = new HTuple();
    HTuple hv_FAI20_P2_LineEndX = new HTuple(), hv_FAI20_P2_LineEndY = new HTuple();
    HTuple hv_FAI20V_P1_LineStartX = new HTuple(), hv_FAI20V_P1_LineStartY = new HTuple();
    HTuple hv_FAI20V_P1_LineEndX = new HTuple(), hv_FAI20V_P1_LineEndY = new HTuple();
    HTuple hv_rowCenterTop = new HTuple(), hv_colCenterTop = new HTuple();
    HTuple hv_rectFAI20TRRow = new HTuple(), hv_rectFAI20TRCol = new HTuple();
    HTuple hv_rectFAI20TRRadian = new HTuple(), hv_rectFAI20TRLen1 = new HTuple();
    HTuple hv_rectFAI20TRLen2 = new HTuple(), hv_lineX1FAI20TR = new HTuple();
    HTuple hv_lineY1FAI20TR = new HTuple(), hv_lineX2FAI20TR = new HTuple();
    HTuple hv_lineY2FAI20TR = new HTuple(), hv_rectFAI20BLRow = new HTuple();
    HTuple hv_rectFAI20BLCol = new HTuple(), hv_rectFAI20BLRadian = new HTuple();
    HTuple hv_rectFAI20BLLen1 = new HTuple(), hv_rectFAI20BLLen2 = new HTuple();
    HTuple hv_lineX1FAI20BL = new HTuple(), hv_lineY1FAI20BL = new HTuple();
    HTuple hv_lineX2FAI20BL = new HTuple(), hv_lineY2FAI20BL = new HTuple();
    HTuple hv_ptX_TR = new HTuple(), hv_ptY_TR = new HTuple();
    HTuple hv_ptX_BL = new HTuple(), hv_ptY_BL = new HTuple();
    HTuple hv_ptX = new HTuple(), hv_ptY = new HTuple(), hv_outLineX1 = new HTuple();
    HTuple hv_outLineY1 = new HTuple(), hv_outLineX2 = new HTuple();
    HTuple hv_outLineY2 = new HTuple(), hv_numOutputs = new HTuple();
    HTuple hv_numOutputPixels = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ImageUndistorted);
    HOperatorSet.GenEmptyObj(out ho_lineRegions);
    HOperatorSet.GenEmptyObj(out ho_FindLineRects);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_Region);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
    HOperatorSet.GenEmptyObj(out ho_ImageResult);
    HOperatorSet.GenEmptyObj(out ho_Rectangle8);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced1);
    HOperatorSet.GenEmptyObj(out ho_Rectangle1);
    HOperatorSet.GenEmptyObj(out ho_rect);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    HOperatorSet.GenEmptyObj(out ho_rectFAI2);
    HOperatorSet.GenEmptyObj(out ho_Rectangle7);
    HOperatorSet.GenEmptyObj(out ho_rectFAI3);
    HOperatorSet.GenEmptyObj(out ho_Rectangle6);
    HOperatorSet.GenEmptyObj(out ho_rectFAI4);
    HOperatorSet.GenEmptyObj(out ho_Rectangle2);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    HOperatorSet.GenEmptyObj(out ho_lineRegion1);
    HOperatorSet.GenEmptyObj(out ho_Cross);
    HOperatorSet.GenEmptyObj(out ho_Rectangle3);
    HOperatorSet.GenEmptyObj(out ho_Rectangle4);
    HOperatorSet.GenEmptyObj(out ho_Rectangle5);
    hv_outputs = new HTuple();
    hv_crossesXused = new HTuple();
    hv_crossesYused = new HTuple();
    hv_crossesXIgnored = new HTuple();
    hv_crossesYIgnored = new HTuple();
    hv_intersectXs = new HTuple();
    hv_intersectYs = new HTuple();
    hv_outputsPixel = new HTuple();
    try
    {
      hv_CameraParameters.Dispose();
      hv_CameraParameters = new HTuple();
      hv_CameraParameters[0] = "area_scan_telecentric_division";
      hv_CameraParameters[1] = 0.588471;
      hv_CameraParameters[2] = 3.42746;
      hv_CameraParameters[3] = 4.4974e-006;
      hv_CameraParameters[4] = 4.5e-006;
      hv_CameraParameters[5] = 2556.48;
      hv_CameraParameters[6] = 2560.7;
      hv_CameraParameters[7] = 5120;
      hv_CameraParameters[8] = 5120;
      hv_CameraPose.Dispose();
      hv_CameraPose = new HTuple();
      hv_CameraPose[0] = 0.00180843;
      hv_CameraPose[1] = -0.000646214;
      hv_CameraPose[2] = 0.000999199;
      hv_CameraPose[3] = 0.316458;
      hv_CameraPose[4] = 2.27204;
      hv_CameraPose[5] = 180.151;
      hv_CameraPose[6] = 0;
      {
      HObject ExpTmpOutVar_0;hv_OutCameraParams.Dispose();
      UndistortImage(ho_Image_COPY_INP_TMP, out ExpTmpOutVar_0, hv_CameraParameters, 
          out hv_OutCameraParams);
      ho_Image_COPY_INP_TMP.Dispose();
      ho_Image_COPY_INP_TMP = ExpTmpOutVar_0;
      }
      ho_ImageUndistorted.Dispose();
      ho_ImageUndistorted = new HObject(ho_Image_COPY_INP_TMP);

      hv_MapToWorld.Dispose();hv_MapToImage.Dispose();
      GenCalibrationMaps(ho_Image_COPY_INP_TMP, hv_OutCameraParams, hv_CameraPose, 
          out hv_MapToWorld, out hv_MapToImage);


      hv_Width.Dispose();hv_Height.Dispose();
      HOperatorSet.GetImageSize(ho_Image_COPY_INP_TMP, out hv_Width, out hv_Height);


      HOperatorSet.SetDraw(hv_ExpDefaultWinHandle, "margin");

      hv_crossSize.Dispose();
      hv_crossSize = 100;
      hv_numSubRects.Dispose();
      hv_numSubRects = 10;

      hv_ModelThreshold.Dispose();
      hv_ModelThreshold = 160;


      //record find line points
      hv_crossesXused.Dispose();
      hv_crossesXused = new HTuple();
      hv_crossesYused.Dispose();
      hv_crossesYused = new HTuple();
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = new HTuple();
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = new HTuple();

      //record line-line intersections
      hv_intersectXs.Dispose();
      hv_intersectXs = new HTuple();
      hv_intersectYs.Dispose();
      hv_intersectYs = new HTuple();

      //outputs
      hv_outputs.Dispose();
      hv_outputs = new HTuple();
      hv_outputsPixel.Dispose();
      hv_outputsPixel = new HTuple();

      //set units and positions


      hv_FAI2_LEN_P1.Dispose();
      hv_FAI2_LEN_P1 = 4.583;
      hv_FAI2_LEN_P2.Dispose();
      hv_FAI2_LEN_P2 = 9;
      hv_FAI2_LEN_P3.Dispose();
      hv_FAI2_LEN_P3 = 14.583;

      hv_FAI3_LEN_P1.Dispose();
      hv_FAI3_LEN_P1 = 5.299;
      hv_FAI3_LEN_P2.Dispose();
      hv_FAI3_LEN_P2 = 9;
      hv_FAI3_LEN_P3.Dispose();
      hv_FAI3_LEN_P3 = 13.299;

      hv_FAI4_LEN_P1.Dispose();
      hv_FAI4_LEN_P1 = 5.299;
      hv_FAI4_LEN_P2.Dispose();
      hv_FAI4_LEN_P2 = 9.299;
      hv_FAI4_LEN_P3.Dispose();
      hv_FAI4_LEN_P3 = 13.299;

      hv_FAI5_LEN_P1.Dispose();
      hv_FAI5_LEN_P1 = 5.299;
      hv_FAI5_LEN_P2.Dispose();
      hv_FAI5_LEN_P2 = 9.299;
      hv_FAI5_LEN_P3.Dispose();
      hv_FAI5_LEN_P3 = 13.299;

      hv_FAI6_LEN_P1.Dispose();
      hv_FAI6_LEN_P1 = 22.024;
      hv_FAI6_LEN_P2.Dispose();
      hv_FAI6_LEN_P2 = 24.024;
      hv_FAI6_LEN_P3.Dispose();
      hv_FAI6_LEN_P3 = 26.024;

      hv_FAI9_LEN_P1.Dispose();
      hv_FAI9_LEN_P1 = 21.753;
      hv_FAI9_LEN_P2.Dispose();
      hv_FAI9_LEN_P2 = 23.753;
      hv_FAI9_LEN_P3.Dispose();
      hv_FAI9_LEN_P3 = 25.753;


      hv_FAI12_LEN_P1.Dispose();
      hv_FAI12_LEN_P1 = 23.213;
      hv_FAI12_LEN_P2.Dispose();
      hv_FAI12_LEN_P2 = 34.97;

      hv_FAI16_LEN_P1.Dispose();
      hv_FAI16_LEN_P1 = 13.071;
      hv_FAI16_LEN_P2.Dispose();
      hv_FAI16_LEN_P2 = 20.213;

      hv_FAI17_LEN_P1.Dispose();
      hv_FAI17_LEN_P1 = 1.53;
      hv_FAI17_LEN_P2.Dispose();
      hv_FAI17_LEN_P2 = 9.827;

      hv_FAI19_LEN_P1.Dispose();
      hv_FAI19_LEN_P1 = 2.157;
      hv_FAI19_LEN_P2.Dispose();
      hv_FAI19_LEN_P2 = 13.791;

      hv_FAI20_LEN_X.Dispose();
      hv_FAI20_LEN_X = 9.299;
      hv_FAI20_LEN_Y.Dispose();
      hv_FAI20_LEN_Y = 7.886;

      ho_FindLineRects.Dispose();
      HOperatorSet.GenEmptyObj(out ho_FindLineRects);
      ho_lineRegions.Dispose();
      HOperatorSet.GenEmptyObj(out ho_lineRegions);


      //find model
      hv_Threshold.Dispose();
      hv_Threshold = 128;
      hv_rowModel.Dispose();
      hv_rowModel = 1171.5;
      hv_colModel.Dispose();
      hv_colModel = 3678.5;
      ho_ROI_0.Dispose();
      HOperatorSet.GenRectangle1(out ho_ROI_0, 53.9, 1940.83, 2000, 3900);
      ho_ImageReduced.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_ROI_0, out ho_ImageReduced
          );
      ho_Region.Dispose();hv_UsedThreshold.Dispose();
      HOperatorSet.BinaryThreshold(ho_ImageReduced, out ho_Region, "max_separability", 
          "light", out hv_UsedThreshold);
      ho_ConnectedRegions.Dispose();
      HOperatorSet.Connection(ho_Region, out ho_ConnectedRegions);
      ho_SelectedRegions.Dispose();
      HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, "area", 
          "and", 800000, 99999999);
      ho_ImageResult.Dispose();
      HOperatorSet.PaintRegion(ho_SelectedRegions, ho_ImageReduced, out ho_ImageResult, 
          255, "fill");
      hv_Row.Dispose();hv_Column.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
      HOperatorSet.FindShapeModel(ho_ImageResult, hv_ModelID, -0.39, 0.79, 0.3, 1, 
          0.5, "least_squares", 0, 0.9, out hv_Row, out hv_Column, out hv_Angle, 
          out hv_Score);
      hv_MovementImageToImage.Dispose();
      HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Row, hv_Column, hv_Angle, out hv_MovementImageToImage);

      //image normalization
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 1972-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 4257-hv_colModel;
      }
      hv_RAD_1.Dispose();
      hv_RAD_1 = 0;
      hv_LEN_1.Dispose();
      hv_LEN_1 = 150;
      hv_LEN_2.Dispose();
      hv_LEN_2 = 150;

      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_ROW_1, hv_COL_1, hv_RAD_1, hv_LEN_1, hv_LEN_2, hv_MovementImageToImage, 
          out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, out ExpTmpOutVar_3, 
          out ExpTmpOutVar_4);
      hv_ROW_1.Dispose();
      hv_ROW_1 = ExpTmpOutVar_0;
      hv_COL_1.Dispose();
      hv_COL_1 = ExpTmpOutVar_1;
      hv_RAD_1.Dispose();
      hv_RAD_1 = ExpTmpOutVar_2;
      hv_LEN_1.Dispose();
      hv_LEN_1 = ExpTmpOutVar_3;
      hv_LEN_2.Dispose();
      hv_LEN_2 = ExpTmpOutVar_4;
      }
      ho_Rectangle8.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle8, hv_ROW_1, hv_COL_1, hv_RAD_1, 
          hv_LEN_1, hv_LEN_2);
      ho_ImageReduced1.Dispose();
      HOperatorSet.ReduceDomain(ho_ImageReduced, ho_Rectangle8, out ho_ImageReduced1
          );
      hv_Value.Dispose();
      HOperatorSet.GrayFeatures(ho_Rectangle8, ho_ImageReduced1, "mean", out hv_Value);
      hv_standardGrayValue.Dispose();
      hv_standardGrayValue = 140.0;
      hv_scaleFacotr.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_scaleFacotr = hv_standardGrayValue/hv_Value;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ScaleImage(ho_Image_COPY_INP_TMP, out ExpTmpOutVar_0, hv_scaleFacotr, 
          0);
      ho_Image_COPY_INP_TMP.Dispose();
      ho_Image_COPY_INP_TMP = ExpTmpOutVar_0;
      }

      hv_ROW1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW1_1 = 2684-hv_rowModel;
      }
      hv_COL1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL1_1 = 4804-hv_colModel;
      }
      hv_RAD1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD1_1 = (new HTuple(180)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 200;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 350;

      hv_ROW1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW1_2 = 4380-hv_rowModel;
      }
      hv_COL1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL1_2 = 4804-hv_colModel;
      }
      hv_RAD1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD1_2 = (new HTuple(180)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 200;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 350;

      hv_baseRightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightRow = new HTuple();
      hv_baseRightRow = hv_baseRightRow.TupleConcat(hv_ROW1_1, hv_ROW1_2);
      }
      hv_baseRightColum.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightColum = new HTuple();
      hv_baseRightColum = hv_baseRightColum.TupleConcat(hv_COL1_1, hv_COL1_2);
      }
      hv_baseRightRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightRadian = new HTuple();
      hv_baseRightRadian = hv_baseRightRadian.TupleConcat(hv_RAD1_1, hv_RAD1_2);
      }
      hv_baseRightLen1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightLen1 = new HTuple();
      hv_baseRightLen1 = hv_baseRightLen1.TupleConcat(hv_LEN1_1, hv_LEN1_2);
      }
      hv_baseRightLen2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightLen2 = new HTuple();
      hv_baseRightLen2 = hv_baseRightLen2.TupleConcat(hv_LEN2_1, hv_LEN2_2);
      }


      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_baseRightRow, hv_baseRightColum, hv_baseRightRadian, hv_baseRightLen1, 
          hv_baseRightLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_baseRightRow.Dispose();
      hv_baseRightRow = ExpTmpOutVar_0;
      hv_baseRightColum.Dispose();
      hv_baseRightColum = ExpTmpOutVar_1;
      hv_baseRightRadian.Dispose();
      hv_baseRightRadian = ExpTmpOutVar_2;
      hv_baseRightLen1.Dispose();
      hv_baseRightLen1 = ExpTmpOutVar_3;
      hv_baseRightLen2.Dispose();
      hv_baseRightLen2 = ExpTmpOutVar_4;
      }
      ho_Rectangle1.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle1, hv_baseRightRow, hv_baseRightColum, 
          hv_baseRightRadian, hv_baseRightLen1, hv_baseRightLen2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("RightBase", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', baseRightRow, baseRightColum, baseRightRadian, baseRightLen1, baseRightLen2, numSubRects, [threshValue,threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth1, longestOnly2, lineX1RightBase, lineY1RightBase, lineX2RightBase, lineY2RightBase, XsUsed, YsUsed, XsIgnored, YsIgnored)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }


      //find top base line
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 162.42300000-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 3050-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 200;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 162.42300000-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 3694-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 100;

      hv_ROW_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_3 = 162.42300000-hv_rowModel;
      }
      hv_COL_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_3 = 4310-hv_colModel;
      }
      hv_RAD_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_3 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_3.Dispose();
      hv_LEN1_3 = 100;
      hv_LEN2_3.Dispose();
      hv_LEN2_3 = 100;

      hv_baseTopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopRow = new HTuple();
      hv_baseTopRow = hv_baseTopRow.TupleConcat(hv_ROW_1, hv_ROW_2, hv_ROW_3);
      }
      hv_baseTopColumn.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopColumn = new HTuple();
      hv_baseTopColumn = hv_baseTopColumn.TupleConcat(hv_COL_1, hv_COL_2, hv_COL_3);
      }
      hv_baseTopRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopRadian = new HTuple();
      hv_baseTopRadian = hv_baseTopRadian.TupleConcat(hv_RAD_1, hv_RAD_2, hv_RAD_3);
      }
      hv_baseTopLen1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopLen1 = new HTuple();
      hv_baseTopLen1 = hv_baseTopLen1.TupleConcat(hv_LEN1_1, hv_LEN1_2, hv_LEN1_3);
      }
      hv_baseTopLen2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopLen2 = new HTuple();
      hv_baseTopLen2 = hv_baseTopLen2.TupleConcat(hv_LEN2_1, hv_LEN2_2, hv_LEN2_3);
      }



      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_baseTopRow, hv_baseTopColumn, hv_baseTopRadian, hv_baseTopLen1, 
          hv_baseTopLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_baseTopRow.Dispose();
      hv_baseTopRow = ExpTmpOutVar_0;
      hv_baseTopColumn.Dispose();
      hv_baseTopColumn = ExpTmpOutVar_1;
      hv_baseTopRadian.Dispose();
      hv_baseTopRadian = ExpTmpOutVar_2;
      hv_baseTopLen1.Dispose();
      hv_baseTopLen1 = ExpTmpOutVar_3;
      hv_baseTopLen2.Dispose();
      hv_baseTopLen2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("TopBase", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', baseTopRow, baseTopColumn, baseTopRadian, baseTopLen1, baseTopLen2, numSubRects, [threshValue,threshValue,threshValue], 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth2, longestOnly3, lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }



      //make origin
      hv_rowOrigin.Dispose();hv_colOrigin.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1RightBase, hv_lineX1RightBase, hv_lineY2RightBase, 
          hv_lineX2RightBase, hv_lineY1TopBase, hv_lineX1TopBase, hv_lineY2TopBase, 
          hv_lineX2TopBase, out hv_rowOrigin, out hv_colOrigin, out hv_IsOverlapping);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colOrigin);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowOrigin);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      //rectify bases
      hv_ptXOnPerpenducularDir.Dispose();hv_ptYOnPerpenducularDir.Dispose();
      get_perpendicular_line_that_passes(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, 
          hv_lineY2TopBase, hv_colOrigin, hv_rowOrigin, out hv_ptXOnPerpenducularDir, 
          out hv_ptYOnPerpenducularDir);
      hv_lineX1RightBase.Dispose();
      hv_lineX1RightBase = new HTuple(hv_colOrigin);
      hv_lineY1RightBase.Dispose();
      hv_lineY1RightBase = new HTuple(hv_rowOrigin);
      hv_lineX2RightBase.Dispose();
      hv_lineX2RightBase = new HTuple(hv_ptXOnPerpenducularDir);
      hv_lineY2RightBase.Dispose();
      hv_lineY2RightBase = new HTuple(hv_ptYOnPerpenducularDir);


      //***************************************************FAI2***********************************
      //make vertical grids
      hv_FAI2_P1_LineStartX.Dispose();hv_FAI2_P1_LineStartY.Dispose();hv_FAI2_P1_LineEndX.Dispose();hv_FAI2_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI2_LEN_P1, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI2_P1_LineStartX, out hv_FAI2_P1_LineStartY, 
          out hv_FAI2_P1_LineEndX, out hv_FAI2_P1_LineEndY);
      hv_FAI2_P2_LineStartX.Dispose();hv_FAI2_P2_LineStartY.Dispose();hv_FAI2_P2_LineEndX.Dispose();hv_FAI2_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI2_LEN_P2, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI2_P2_LineStartX, out hv_FAI2_P2_LineStartY, 
          out hv_FAI2_P2_LineEndX, out hv_FAI2_P2_LineEndY);
      hv_FAI2_P3_LineStartX.Dispose();hv_FAI2_P3_LineStartY.Dispose();hv_FAI2_P3_LineEndX.Dispose();hv_FAI2_P3_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI2_LEN_P3, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI2_P3_LineStartX, out hv_FAI2_P3_LineStartY, 
          out hv_FAI2_P3_LineEndX, out hv_FAI2_P3_LineEndY);

      //make H line for FAI2

      hv_rectFAI2Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Row = 2173.39000000-hv_rowModel;
      }
      hv_rectFAI2Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Col = 3168.38000000-hv_colModel;
      }
      hv_rectFAI2Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Radian = (new HTuple(-91)).TupleRad()
          ;
      }
      hv_rectFAI2Len1.Dispose();
      hv_rectFAI2Len1 = 100.89500000;
      hv_rectFAI2Len2.Dispose();
      hv_rectFAI2Len2 = 200.18000000;

      hv_rectFAI2Row_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Row_RIGHT = 2173.39000000-hv_rowModel;
      }
      hv_rectFAI2Col_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Col_RIGHT = 4168.38000000-hv_colModel;
      }
      hv_rectFAI2Radian_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Radian_RIGHT = (new HTuple(-91)).TupleRad()
          ;
      }
      hv_rectFAI2Len1_RIGHT.Dispose();
      hv_rectFAI2Len1_RIGHT = 100.89500000;
      hv_rectFAI2Len2_RIGHT.Dispose();
      hv_rectFAI2Len2_RIGHT = 200.18000000;
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Row.Dispose();hv_rectFAI2Col.Dispose();hv_rectFAI2Radian.Dispose();hv_rectFAI2Len1.Dispose();hv_rectFAI2Len2.Dispose();
      AffineTransRect2(hv_rectFAI2Row.TupleConcat(hv_rectFAI2Row_RIGHT), hv_rectFAI2Col.TupleConcat(
          hv_rectFAI2Col_RIGHT), hv_rectFAI2Radian.TupleConcat(hv_rectFAI2Radian_RIGHT), 
          hv_rectFAI2Len1.TupleConcat(hv_rectFAI2Len1_RIGHT), hv_rectFAI2Len2.TupleConcat(
          hv_rectFAI2Len2_RIGHT), hv_MovementImageToImage, out hv_rectFAI2Row, out hv_rectFAI2Col, 
          out hv_rectFAI2Radian, out hv_rectFAI2Len1, out hv_rectFAI2Len2);
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("2", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rectFAI2, lineRegion, 'positive', rectFAI2Row, rectFAI2Col, rectFAI2Radian, rectFAI2Len1, rectFAI2Len2, 10, [threshValue,threshValue], 'first', ignorePortion, 'false', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, kernelWidth3, longestOnly4, lineStartX_FAI2H, lineStartY_FAI2H, lineEndX_FAI2H, lineEndY_FAI2H, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rectFAI2, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }


      //FAI2-P2
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping1.Dispose();
      HOperatorSet.IntersectionLines(hv_lineStartY_FAI2H, hv_lineStartX_FAI2H, hv_lineEndY_FAI2H, 
          hv_lineEndX_FAI2H, hv_FAI2_P2_LineStartY, hv_FAI2_P2_LineStartX, hv_FAI2_P2_LineEndY, 
          hv_FAI2_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping1);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }



      //*********************************************FAI3************************************


      hv_rectFAI3Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Row = 2200.39000000-hv_rowModel;
      }
      hv_rectFAI3Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Col = 3168.38000000-hv_colModel;
      }
      hv_rectFAI3Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Radian = (new HTuple(-94)).TupleRad()
          ;
      }
      hv_rectFAI3Len1.Dispose();
      hv_rectFAI3Len1 = 50.89500000;
      hv_rectFAI3Len2.Dispose();
      hv_rectFAI3Len2 = 200.18000000;

      hv_rectFAI3Row_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Row_RIGHT = 2233.39000000-hv_rowModel;
      }
      hv_rectFAI3Col_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Col_RIGHT = 4168.38000000-hv_colModel;
      }
      hv_rectFAI3Radian_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Radian_RIGHT = (new HTuple(-93)).TupleRad()
          ;
      }
      hv_rectFAI3Len1_RIGHT.Dispose();
      hv_rectFAI3Len1_RIGHT = 50.89500000;
      hv_rectFAI3Len2_RIGHT.Dispose();
      hv_rectFAI3Len2_RIGHT = 200.18000000;
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Row.Dispose();hv_rectFAI3Col.Dispose();hv_rectFAI3Radian.Dispose();hv_rectFAI3Len1.Dispose();hv_rectFAI3Len2.Dispose();
      AffineTransRect2(hv_rectFAI3Row.TupleConcat(hv_rectFAI3Row_RIGHT), hv_rectFAI3Col.TupleConcat(
          hv_rectFAI3Col_RIGHT), hv_rectFAI3Radian.TupleConcat(hv_rectFAI3Radian_RIGHT), 
          hv_rectFAI3Len1.TupleConcat(hv_rectFAI3Len1_RIGHT), hv_rectFAI3Len2.TupleConcat(
          hv_rectFAI3Len2_RIGHT), hv_MovementImageToImage, out hv_rectFAI3Row, out hv_rectFAI3Col, 
          out hv_rectFAI3Radian, out hv_rectFAI3Len1, out hv_rectFAI3Len2);
      }

      ho_Rectangle7.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle7, hv_rectFAI3Row, hv_rectFAI3Col, 
          hv_rectFAI3Radian, hv_rectFAI3Len1, hv_rectFAI3Len2);
      //VisionProStyleFindLineOneStep (Image, rectFAI3, lineRegion, 'negative', rectFAI3Row, rectFAI3Col, rectFAI3Radian, rectFAI3Len1, rectFAI3Len2, 10, [FAI3Threshold,FAI3Threshold], 'first', 0.2, 'false', 1, 1, 5120, 5120, 5, 15, 5, kernelWidth4, longestOnly5, lineX1FAI3, lineY1FAI3, lineX2FAI3, lineY2FAI3, XsUsed, YsUsed, XsIgnored, YsIgnored)
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("3", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //FindLineAdaptiveSingle (Image, rectFAI3, lineRegion, lineContours, rectFAI3Row, rectFAI3Col, rectFAI3Radian, rectFAI3Len1, rectFAI3Len2, 5, 'negative', [threshValue,threshValue], sigma1, sigma21, 'first', widthRatio, ignoreFraction, newWidth1, cannyLow1, cannyHigh1, kernelWidth, longestOnly, XsUsed, Ys, lineX2, lineY2, XsUsed1, YsUsed1, XsIgnored1, YsIgnored1)

      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rectFAI3, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate base right
      hv_FAI3_P1_LineStartX.Dispose();hv_FAI3_P1_LineStartY.Dispose();hv_FAI3_P1_LineEndX.Dispose();hv_FAI3_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI3_LEN_P1, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI3_P1_LineStartX, out hv_FAI3_P1_LineStartY, 
          out hv_FAI3_P1_LineEndX, out hv_FAI3_P1_LineEndY);
      hv_FAI3_P2_LineStartX.Dispose();hv_FAI3_P2_LineStartY.Dispose();hv_FAI3_P2_LineEndX.Dispose();hv_FAI3_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI3_LEN_P2, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI3_P2_LineStartX, out hv_FAI3_P2_LineStartY, 
          out hv_FAI3_P2_LineEndX, out hv_FAI3_P2_LineEndY);
      hv_FAI3_P3_LineStartX.Dispose();hv_FAI3_P3_LineStartY.Dispose();hv_FAI3_P3_LineEndX.Dispose();hv_FAI3_P3_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI3_LEN_P3, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI3_P3_LineStartX, out hv_FAI3_P3_LineStartY, 
          out hv_FAI3_P3_LineEndX, out hv_FAI3_P3_LineEndY);


      //P2
      //intersection_lines (lineY1FAI3, lineX1FAI3, lineY2FAI3, lineX2FAI3, FAI3_P2_LineStartY, FAI3_P2_LineStartX, FAI3_P2_LineEndY, FAI3_P2_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //**********************************************FAI4*******************************
      hv_rectFAI4Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI4Row = 4682.30000000-hv_rowModel;
      }
      hv_rectFAI4Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI4Col = 3567.21000000-hv_colModel;
      }
      hv_rectFAI4Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI4Radian = (new HTuple(85)).TupleRad()
          ;
      }
      hv_rectFAI4Len1.Dispose();
      hv_rectFAI4Len1 = 70.89900000;
      hv_rectFAI4Len2.Dispose();
      hv_rectFAI4Len2 = 800;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI4Row, hv_rectFAI4Col, hv_rectFAI4Radian, hv_rectFAI4Len1, 
          hv_rectFAI4Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI4Row.Dispose();
      hv_rectFAI4Row = ExpTmpOutVar_0;
      hv_rectFAI4Col.Dispose();
      hv_rectFAI4Col = ExpTmpOutVar_1;
      hv_rectFAI4Radian.Dispose();
      hv_rectFAI4Radian = ExpTmpOutVar_2;
      hv_rectFAI4Len1.Dispose();
      hv_rectFAI4Len1 = ExpTmpOutVar_3;
      hv_rectFAI4Len2.Dispose();
      hv_rectFAI4Len2 = ExpTmpOutVar_4;
      }
      ho_Rectangle6.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle6, hv_rectFAI4Row, hv_rectFAI4Col, 
          hv_rectFAI4Radian, hv_rectFAI4Len1, hv_rectFAI4Len2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("4", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rectFAI4, lineRegion, 'negative', rectFAI4Row, rectFAI4Col, rectFAI4Radian, rectFAI4Len1, rectFAI4Len2, 6, threshValue, 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth5, longestOnly6, lineX1FAI4, lineY1FAI4, lineX2FAI4, lineY2FAI4, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rectFAI4, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //P1
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI4, hv_lineX1FAI4, hv_lineY2FAI4, 
          hv_lineX2FAI4, hv_FAI3_P1_LineStartY, hv_FAI3_P1_LineStartX, hv_FAI3_P1_LineEndY, 
          hv_FAI3_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI4, hv_lineX1FAI4, hv_lineY2FAI4, 
          hv_lineX2FAI4, hv_FAI3_P2_LineStartY, hv_FAI3_P2_LineStartX, hv_FAI3_P2_LineEndY, 
          hv_FAI3_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P3
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI4, hv_lineX1FAI4, hv_lineY2FAI4, 
          hv_lineX2FAI4, hv_FAI3_P3_LineStartY, hv_FAI3_P3_LineStartX, hv_FAI3_P3_LineEndY, 
          hv_FAI3_P3_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //************************************FAI 5***************************************
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 4850-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 2800-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 200;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 4850-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 3650-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 150;

      hv_ROW_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_3 = 4890-hv_rowModel;
      }
      hv_COL_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_3 = 4470-hv_colModel;
      }
      hv_RAD_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_3 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_3.Dispose();
      hv_LEN1_3 = 100;
      hv_LEN2_3.Dispose();
      hv_LEN2_3 = 200;


      hv_rectFAI5Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI5Row = new HTuple();
      hv_rectFAI5Row = hv_rectFAI5Row.TupleConcat(hv_ROW_1, hv_ROW_2, hv_ROW_3);
      }
      hv_rectFAI5Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI5Col = new HTuple();
      hv_rectFAI5Col = hv_rectFAI5Col.TupleConcat(hv_COL_1, hv_COL_2, hv_COL_3);
      }
      hv_rectFAI5Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI5Radian = new HTuple();
      hv_rectFAI5Radian = hv_rectFAI5Radian.TupleConcat(hv_RAD_1, hv_RAD_2, hv_RAD_3);
      }
      hv_rectFAI5Len1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI5Len1 = new HTuple();
      hv_rectFAI5Len1 = hv_rectFAI5Len1.TupleConcat(hv_LEN1_1, hv_LEN1_2, hv_LEN1_3);
      }
      hv_rectFAI5Len2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI5Len2 = new HTuple();
      hv_rectFAI5Len2 = hv_rectFAI5Len2.TupleConcat(hv_LEN2_1, hv_LEN2_2, hv_LEN2_3);
      }

      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI5Row, hv_rectFAI5Col, hv_rectFAI5Radian, hv_rectFAI5Len1, 
          hv_rectFAI5Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI5Row.Dispose();
      hv_rectFAI5Row = ExpTmpOutVar_0;
      hv_rectFAI5Col.Dispose();
      hv_rectFAI5Col = ExpTmpOutVar_1;
      hv_rectFAI5Radian.Dispose();
      hv_rectFAI5Radian = ExpTmpOutVar_2;
      hv_rectFAI5Len1.Dispose();
      hv_rectFAI5Len1 = ExpTmpOutVar_3;
      hv_rectFAI5Len2.Dispose();
      hv_rectFAI5Len2 = ExpTmpOutVar_4;
      }
      ho_Rectangle2.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle2, hv_rectFAI5Row, hv_rectFAI5Col, 
          hv_rectFAI5Radian, hv_rectFAI5Len1, hv_rectFAI5Len2);

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("5", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'positive', rectFAI5Row, rectFAI5Col, rectFAI5Radian, rectFAI5Len1, rectFAI5Len2, 6, [threshValue,threshValue,threshValue], 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth6, longestOnly7, lineX1FAI5, lineY1FAI5, lineX2FAI5, lineY2FAI5, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //P1
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI5, hv_lineX1FAI5, hv_lineY2FAI5, 
          hv_lineX2FAI5, hv_FAI3_P1_LineStartY, hv_FAI3_P1_LineStartX, hv_FAI3_P1_LineEndY, 
          hv_FAI3_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI5, hv_lineX1FAI5, hv_lineY2FAI5, 
          hv_lineX2FAI5, hv_FAI3_P2_LineStartY, hv_FAI3_P2_LineStartX, hv_FAI3_P2_LineEndY, 
          hv_FAI3_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P3
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI5, hv_lineX1FAI5, hv_lineY2FAI5, 
          hv_lineX2FAI5, hv_FAI3_P3_LineStartY, hv_FAI3_P3_LineStartX, hv_FAI3_P3_LineEndY, 
          hv_FAI3_P3_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }



      //************************************FAI 6******************************************
      hv_rectFAI6Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI6Row = 2983.82000000-hv_rowModel;
      }
      hv_rectFAI6Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI6Col = 1710.50000000-hv_colModel;
      }
      hv_rectFAI6Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI6Radian = (new HTuple(88)).TupleRad()
          ;
      }
      hv_rectFAI6Len1.Dispose();
      hv_rectFAI6Len1 = 101.93600000;
      hv_rectFAI6Len2.Dispose();
      hv_rectFAI6Len2 = 300.58900000;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI6Row, hv_rectFAI6Col, hv_rectFAI6Radian, hv_rectFAI6Len1, 
          hv_rectFAI6Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI6Row.Dispose();
      hv_rectFAI6Row = ExpTmpOutVar_0;
      hv_rectFAI6Col.Dispose();
      hv_rectFAI6Col = ExpTmpOutVar_1;
      hv_rectFAI6Radian.Dispose();
      hv_rectFAI6Radian = ExpTmpOutVar_2;
      hv_rectFAI6Len1.Dispose();
      hv_rectFAI6Len1 = ExpTmpOutVar_3;
      hv_rectFAI6Len2.Dispose();
      hv_rectFAI6Len2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("6", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', rectFAI6Row, rectFAI6Col, rectFAI6Radian, rectFAI6Len1, rectFAI6Len2, numSubRects, threshValue, 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth7, longestOnly8, lineX1FAI6, lineY1FAI6, lineX2FAI6, lineY2FAI6, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate base right
      hv_FAI6_P1_LineStartX.Dispose();hv_FAI6_P1_LineStartY.Dispose();hv_FAI6_P1_LineEndX.Dispose();hv_FAI6_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI6_LEN_P1, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI6_P1_LineStartX, out hv_FAI6_P1_LineStartY, 
          out hv_FAI6_P1_LineEndX, out hv_FAI6_P1_LineEndY);
      hv_FAI6_P2_LineStartX.Dispose();hv_FAI6_P2_LineStartY.Dispose();hv_FAI6_P2_LineEndX.Dispose();hv_FAI6_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI6_LEN_P2, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI6_P2_LineStartX, out hv_FAI6_P2_LineStartY, 
          out hv_FAI6_P2_LineEndX, out hv_FAI6_P2_LineEndY);
      hv_FAI6_P3_LineStartX.Dispose();hv_FAI6_P3_LineStartY.Dispose();hv_FAI6_P3_LineEndX.Dispose();hv_FAI6_P3_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI6_LEN_P3, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI6_P3_LineStartX, out hv_FAI6_P3_LineStartY, 
          out hv_FAI6_P3_LineEndX, out hv_FAI6_P3_LineEndY);

      //P1
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI6, hv_lineX1FAI6, hv_lineY2FAI6, 
          hv_lineX2FAI6, hv_FAI6_P1_LineStartY, hv_FAI6_P1_LineStartX, hv_FAI6_P1_LineEndY, 
          hv_FAI6_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI6, hv_lineX1FAI6, hv_lineY2FAI6, 
          hv_lineX2FAI6, hv_FAI6_P2_LineStartY, hv_FAI6_P2_LineStartX, hv_FAI6_P2_LineEndY, 
          hv_FAI6_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P3
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI6, hv_lineX1FAI6, hv_lineY2FAI6, 
          hv_lineX2FAI6, hv_FAI6_P3_LineStartY, hv_FAI6_P3_LineStartX, hv_FAI6_P3_LineEndY, 
          hv_FAI6_P3_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //************************************FAI9********************************************
      hv_rectFAI9Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI9Row = 1584.57000000-hv_rowModel;
      }
      hv_rectFAI9Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI9Col = 1744.61000000-hv_colModel;
      }
      hv_rectFAI9Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI9Radian = (new HTuple(-90)).TupleRad()
          ;
      }
      hv_rectFAI9Len1.Dispose();
      hv_rectFAI9Len1 = 97.95910000;
      hv_rectFAI9Len2.Dispose();
      hv_rectFAI9Len2 = 275.13700000;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI9Row, hv_rectFAI9Col, hv_rectFAI9Radian, hv_rectFAI9Len1, 
          hv_rectFAI9Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI9Row.Dispose();
      hv_rectFAI9Row = ExpTmpOutVar_0;
      hv_rectFAI9Col.Dispose();
      hv_rectFAI9Col = ExpTmpOutVar_1;
      hv_rectFAI9Radian.Dispose();
      hv_rectFAI9Radian = ExpTmpOutVar_2;
      hv_rectFAI9Len1.Dispose();
      hv_rectFAI9Len1 = ExpTmpOutVar_3;
      hv_rectFAI9Len2.Dispose();
      hv_rectFAI9Len2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("9", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', rectFAI9Row, rectFAI9Col, rectFAI9Radian, rectFAI9Len1, rectFAI9Len2, numSubRects, threshValue, 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth8, longestOnly9, lineX1FAI9, lineY1FAI9, lineX2FAI9, lineY2FAI9, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate base right
      hv_FAI9_P1_LineStartX.Dispose();hv_FAI9_P1_LineStartY.Dispose();hv_FAI9_P1_LineEndX.Dispose();hv_FAI9_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI9_LEN_P1, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI9_P1_LineStartX, out hv_FAI9_P1_LineStartY, 
          out hv_FAI9_P1_LineEndX, out hv_FAI9_P1_LineEndY);
      hv_FAI9_P2_LineStartX.Dispose();hv_FAI9_P2_LineStartY.Dispose();hv_FAI9_P2_LineEndX.Dispose();hv_FAI9_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI9_LEN_P2, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI9_P2_LineStartX, out hv_FAI9_P2_LineStartY, 
          out hv_FAI9_P2_LineEndX, out hv_FAI9_P2_LineEndY);
      hv_FAI9_P3_LineStartX.Dispose();hv_FAI9_P3_LineStartY.Dispose();hv_FAI9_P3_LineEndX.Dispose();hv_FAI9_P3_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI9_LEN_P3, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI9_P3_LineStartX, out hv_FAI9_P3_LineStartY, 
          out hv_FAI9_P3_LineEndX, out hv_FAI9_P3_LineEndY);

      //P1
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI9, hv_lineX1FAI9, hv_lineY2FAI9, 
          hv_lineX2FAI9, hv_FAI9_P1_LineStartY, hv_FAI9_P1_LineStartX, hv_FAI9_P1_LineEndY, 
          hv_FAI9_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI9, hv_lineX1FAI9, hv_lineY2FAI9, 
          hv_lineX2FAI9, hv_FAI9_P2_LineStartY, hv_FAI9_P2_LineStartX, hv_FAI9_P2_LineEndY, 
          hv_FAI9_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P3
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI9, hv_lineX1FAI9, hv_lineY2FAI9, 
          hv_lineX2FAI9, hv_FAI9_P3_LineStartY, hv_FAI9_P3_LineStartX, hv_FAI9_P3_LineEndY, 
          hv_FAI9_P3_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //*****************************FAI12**************************
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 3240-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 2420-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 100;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 3886-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 2400-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 100;

      hv_ROW_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_3 = 4500-hv_rowModel;
      }
      hv_COL_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_3 = 2400-hv_colModel;
      }
      hv_RAD_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_3 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_3.Dispose();
      hv_LEN1_3 = 100;
      hv_LEN2_3.Dispose();
      hv_LEN2_3 = 200;



      hv_rectFAI12Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI12Row = new HTuple();
      hv_rectFAI12Row = hv_rectFAI12Row.TupleConcat(hv_ROW_1, hv_ROW_2, hv_ROW_3);
      }
      hv_rectFAI12Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI12Col = new HTuple();
      hv_rectFAI12Col = hv_rectFAI12Col.TupleConcat(hv_COL_1, hv_COL_2, hv_COL_3);
      }
      hv_rectFAI12Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI12Radian = new HTuple();
      hv_rectFAI12Radian = hv_rectFAI12Radian.TupleConcat(hv_RAD_1, hv_RAD_2, hv_RAD_3);
      }
      hv_rectFAI12Len1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI12Len1 = new HTuple();
      hv_rectFAI12Len1 = hv_rectFAI12Len1.TupleConcat(hv_LEN1_1, hv_LEN1_2, hv_LEN1_3);
      }
      hv_rectFAI12Len2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI12Len2 = new HTuple();
      hv_rectFAI12Len2 = hv_rectFAI12Len2.TupleConcat(hv_LEN2_1, hv_LEN2_2, hv_LEN2_3);
      }
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI12Row, hv_rectFAI12Col, hv_rectFAI12Radian, hv_rectFAI12Len1, 
          hv_rectFAI12Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI12Row.Dispose();
      hv_rectFAI12Row = ExpTmpOutVar_0;
      hv_rectFAI12Col.Dispose();
      hv_rectFAI12Col = ExpTmpOutVar_1;
      hv_rectFAI12Radian.Dispose();
      hv_rectFAI12Radian = ExpTmpOutVar_2;
      hv_rectFAI12Len1.Dispose();
      hv_rectFAI12Len1 = ExpTmpOutVar_3;
      hv_rectFAI12Len2.Dispose();
      hv_rectFAI12Len2 = ExpTmpOutVar_4;
      }

      ho_Rectangle.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle, hv_rectFAI12Row, hv_rectFAI12Col, 
          hv_rectFAI12Radian, hv_rectFAI12Len1, hv_rectFAI12Len2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("12", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', rectFAI12Row, rectFAI12Col, rectFAI12Radian, rectFAI12Len1, rectFAI12Len2, numSubRects, [threshValue,threshValue,threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth9, longestOnly10, lineX1FAI12, lineY1FAI12, lineX2FAI12, lineY2FAI12, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate TOP right
      hv_FAI12_P1_LineStartX.Dispose();hv_FAI12_P1_LineStartY.Dispose();hv_FAI12_P1_LineEndX.Dispose();hv_FAI12_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI12_LEN_P1, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_FAI12_P1_LineStartX, out hv_FAI12_P1_LineStartY, out hv_FAI12_P1_LineEndX, 
          out hv_FAI12_P1_LineEndY);
      hv_FAI12_P2_LineStartX.Dispose();hv_FAI12_P2_LineStartY.Dispose();hv_FAI12_P2_LineEndX.Dispose();hv_FAI12_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI12_LEN_P2, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_FAI12_P2_LineStartX, out hv_FAI12_P2_LineStartY, out hv_FAI12_P2_LineEndX, 
          out hv_FAI12_P2_LineEndY);

      //P1
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI12, hv_lineX1FAI12, hv_lineY2FAI12, 
          hv_lineX2FAI12, hv_FAI12_P1_LineStartY, hv_FAI12_P1_LineStartX, hv_FAI12_P1_LineEndY, 
          hv_FAI12_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      //***************
      ho_lineRegion1.Dispose();
      GenLineRegion(out ho_lineRegion1, hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, 5120, 5120);
      ho_Cross.Dispose();
      HOperatorSet.GenCrossContourXld(out ho_Cross, hv_rowIntersect, hv_colIntersect, 
          300, hv_Angle);
      //**************
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI12, hv_lineX1FAI12, hv_lineY2FAI12, 
          hv_lineX2FAI12, hv_FAI12_P2_LineStartY, hv_FAI12_P2_LineStartX, hv_FAI12_P2_LineEndY, 
          hv_FAI12_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //********************************FAI16*************************
      hv_rectFAI16Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI16Row = 2246.47000000-hv_rowModel;
      }
      hv_rectFAI16Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI16Col = 992.65500000-hv_colModel;
      }
      hv_rectFAI16Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI16Radian = (new HTuple(-0.5)).TupleRad()
          ;
      }
      hv_rectFAI16Len1.Dispose();
      hv_rectFAI16Len1 = 125.95600000;
      hv_rectFAI16Len2.Dispose();
      hv_rectFAI16Len2 = 470.84500000;

      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI16Row, hv_rectFAI16Col, hv_rectFAI16Radian, hv_rectFAI16Len1, 
          hv_rectFAI16Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI16Row.Dispose();
      hv_rectFAI16Row = ExpTmpOutVar_0;
      hv_rectFAI16Col.Dispose();
      hv_rectFAI16Col = ExpTmpOutVar_1;
      hv_rectFAI16Radian.Dispose();
      hv_rectFAI16Radian = ExpTmpOutVar_2;
      hv_rectFAI16Len1.Dispose();
      hv_rectFAI16Len1 = ExpTmpOutVar_3;
      hv_rectFAI16Len2.Dispose();
      hv_rectFAI16Len2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("16", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', rectFAI16Row, rectFAI16Col, rectFAI16Radian, rectFAI16Len1, rectFAI16Len2, 6, threshValue, 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth10, longestOnly11, lineX1FAI16, lineY1FAI16, lineX2FAI16, lineY2FAI16, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate base top
      hv_FAI16_P1_LineStartX.Dispose();hv_FAI16_P1_LineStartY.Dispose();hv_FAI16_P1_LineEndX.Dispose();hv_FAI16_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI16_LEN_P1, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_FAI16_P1_LineStartX, out hv_FAI16_P1_LineStartY, out hv_FAI16_P1_LineEndX, 
          out hv_FAI16_P1_LineEndY);
      hv_FAI16_P2_LineStartX.Dispose();hv_FAI16_P2_LineStartY.Dispose();hv_FAI16_P2_LineEndX.Dispose();hv_FAI16_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI16_LEN_P2, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_FAI16_P2_LineStartX, out hv_FAI16_P2_LineStartY, out hv_FAI16_P2_LineEndX, 
          out hv_FAI16_P2_LineEndY);

      //P1
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI16, hv_lineX1FAI16, hv_lineY2FAI16, 
          hv_lineX2FAI16, hv_FAI16_P1_LineStartY, hv_FAI16_P1_LineStartX, hv_FAI16_P1_LineEndY, 
          hv_FAI16_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI16, hv_lineX1FAI16, hv_lineY2FAI16, 
          hv_lineX2FAI16, hv_FAI16_P2_LineStartY, hv_FAI16_P2_LineStartX, hv_FAI16_P2_LineEndY, 
          hv_FAI16_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //*************************FAI17*******************************
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 466-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 2700-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 100;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 868-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 2670-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 100;

      hv_ROW_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_3 = 1266-hv_rowModel;
      }
      hv_COL_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_3 = 2670-hv_colModel;
      }
      hv_RAD_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_3 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_3.Dispose();
      hv_LEN1_3 = 100;
      hv_LEN2_3.Dispose();
      hv_LEN2_3 = 100;



      hv_rectFAI17Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI17Row = new HTuple();
      hv_rectFAI17Row = hv_rectFAI17Row.TupleConcat(hv_ROW_1, hv_ROW_2, hv_ROW_3);
      }
      hv_rectFAI17Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI17Col = new HTuple();
      hv_rectFAI17Col = hv_rectFAI17Col.TupleConcat(hv_COL_1, hv_COL_2, hv_COL_3);
      }
      hv_rectFAI17Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI17Radian = new HTuple();
      hv_rectFAI17Radian = hv_rectFAI17Radian.TupleConcat(hv_RAD_1, hv_RAD_2, hv_RAD_3);
      }
      hv_rectFAI17Len1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI17Len1 = new HTuple();
      hv_rectFAI17Len1 = hv_rectFAI17Len1.TupleConcat(hv_LEN1_1, hv_LEN1_2, hv_LEN1_3);
      }
      hv_rectFAI17Len2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI17Len2 = new HTuple();
      hv_rectFAI17Len2 = hv_rectFAI17Len2.TupleConcat(hv_LEN2_1, hv_LEN2_2, hv_LEN2_3);
      }
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI17Row, hv_rectFAI17Col, hv_rectFAI17Radian, hv_rectFAI17Len1, 
          hv_rectFAI17Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI17Row.Dispose();
      hv_rectFAI17Row = ExpTmpOutVar_0;
      hv_rectFAI17Col.Dispose();
      hv_rectFAI17Col = ExpTmpOutVar_1;
      hv_rectFAI17Radian.Dispose();
      hv_rectFAI17Radian = ExpTmpOutVar_2;
      hv_rectFAI17Len1.Dispose();
      hv_rectFAI17Len1 = ExpTmpOutVar_3;
      hv_rectFAI17Len2.Dispose();
      hv_rectFAI17Len2 = ExpTmpOutVar_4;
      }
      ho_Rectangle3.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle3, hv_rectFAI17Row, hv_rectFAI17Col, 
          hv_rectFAI17Radian, hv_rectFAI17Len1, hv_rectFAI17Len2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("17", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', rectFAI17Row, rectFAI17Col, rectFAI17Radian, rectFAI17Len1, rectFAI17Len2, numSubRects, [threshValue, threshValue, threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth11, longestOnly12, lineX1FAI17, lineY1FAI17, lineX2FAI17, lineY2FAI17, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate top base
      hv_FAI17_P1_LineStartX.Dispose();hv_FAI17_P1_LineStartY.Dispose();hv_FAI17_P1_LineEndX.Dispose();hv_FAI17_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI17_LEN_P1, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_FAI17_P1_LineStartX, out hv_FAI17_P1_LineStartY, out hv_FAI17_P1_LineEndX, 
          out hv_FAI17_P1_LineEndY);
      hv_FAI17_P2_LineStartX.Dispose();hv_FAI17_P2_LineStartY.Dispose();hv_FAI17_P2_LineEndX.Dispose();hv_FAI17_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI17_LEN_P2, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_FAI17_P2_LineStartX, out hv_FAI17_P2_LineStartY, out hv_FAI17_P2_LineEndX, 
          out hv_FAI17_P2_LineEndY);

      //P1
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI17, hv_lineX1FAI17, hv_lineY2FAI17, 
          hv_lineX2FAI17, hv_FAI17_P1_LineStartY, hv_FAI17_P1_LineStartX, hv_FAI17_P1_LineEndY, 
          hv_FAI17_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI17, hv_lineX1FAI17, hv_lineY2FAI17, 
          hv_lineX2FAI17, hv_FAI17_P2_LineStartY, hv_FAI17_P2_LineStartX, hv_FAI17_P2_LineEndY, 
          hv_FAI17_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }


      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }





      //*******************************FAI19**************************
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 887-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 4665-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(179.5)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 350;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 1806-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 4665-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(179)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 140;

      hv_rectFAI19Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI19Row = new HTuple();
      hv_rectFAI19Row = hv_rectFAI19Row.TupleConcat(hv_ROW_1, hv_ROW_2);
      }
      hv_rectFAI19Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI19Col = new HTuple();
      hv_rectFAI19Col = hv_rectFAI19Col.TupleConcat(hv_COL_1, hv_COL_2);
      }
      hv_rectFAI19Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI19Radian = new HTuple();
      hv_rectFAI19Radian = hv_rectFAI19Radian.TupleConcat(hv_RAD_1, hv_RAD_2);
      }
      hv_rectFAI19Len1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI19Len1 = new HTuple();
      hv_rectFAI19Len1 = hv_rectFAI19Len1.TupleConcat(hv_LEN1_1, hv_LEN1_2);
      }
      hv_rectFAI19Len2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI19Len2 = new HTuple();
      hv_rectFAI19Len2 = hv_rectFAI19Len2.TupleConcat(hv_LEN2_1, hv_LEN2_2);
      }
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI19Row, hv_rectFAI19Col, hv_rectFAI19Radian, hv_rectFAI19Len1, 
          hv_rectFAI19Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI19Row.Dispose();
      hv_rectFAI19Row = ExpTmpOutVar_0;
      hv_rectFAI19Col.Dispose();
      hv_rectFAI19Col = ExpTmpOutVar_1;
      hv_rectFAI19Radian.Dispose();
      hv_rectFAI19Radian = ExpTmpOutVar_2;
      hv_rectFAI19Len1.Dispose();
      hv_rectFAI19Len1 = ExpTmpOutVar_3;
      hv_rectFAI19Len2.Dispose();
      hv_rectFAI19Len2 = ExpTmpOutVar_4;
      }
      ho_Rectangle4.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle4, hv_rectFAI19Row, hv_rectFAI19Col, 
          hv_rectFAI19Radian, hv_rectFAI19Len1, hv_rectFAI19Len2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("19", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', rectFAI19Row, rectFAI19Col, rectFAI19Radian, rectFAI19Len1, rectFAI19Len2, 6, [threshValue,threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth12, longestOnly13, lineX1FAI19, lineY1FAI19, lineX2FAI19, lineY2FAI19, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate top base
      hv_FAI19_P1_LineStartX.Dispose();hv_FAI19_P1_LineStartY.Dispose();hv_FAI19_P1_LineEndX.Dispose();hv_FAI19_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI19_LEN_P1, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_FAI19_P1_LineStartX, out hv_FAI19_P1_LineStartY, out hv_FAI19_P1_LineEndX, 
          out hv_FAI19_P1_LineEndY);
      hv_FAI19_P2_LineStartX.Dispose();hv_FAI19_P2_LineStartY.Dispose();hv_FAI19_P2_LineEndX.Dispose();hv_FAI19_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI19_LEN_P2, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_FAI19_P2_LineStartX, out hv_FAI19_P2_LineStartY, out hv_FAI19_P2_LineEndX, 
          out hv_FAI19_P2_LineEndY);

      //P1
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI19, hv_lineX1FAI19, hv_lineY2FAI19, 
          hv_lineX2FAI19, hv_FAI19_P1_LineStartY, hv_FAI19_P1_LineStartX, hv_FAI19_P1_LineEndY, 
          hv_FAI19_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI19, hv_lineX1FAI19, hv_lineY2FAI19, 
          hv_lineX2FAI19, hv_FAI19_P2_LineStartY, hv_FAI19_P2_LineStartX, hv_FAI19_P2_LineEndY, 
          hv_FAI19_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }




      //****************************FAI20********************************
      //定圆心
      hv_FAI20_P2_LineStartX.Dispose();hv_FAI20_P2_LineStartY.Dispose();hv_FAI20_P2_LineEndX.Dispose();hv_FAI20_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI20_LEN_Y, hv_MapToWorld, hv_MapToImage, 
          "false", out hv_FAI20_P2_LineStartX, out hv_FAI20_P2_LineStartY, out hv_FAI20_P2_LineEndX, 
          out hv_FAI20_P2_LineEndY);
      hv_FAI20V_P1_LineStartX.Dispose();hv_FAI20V_P1_LineStartY.Dispose();hv_FAI20V_P1_LineEndX.Dispose();hv_FAI20V_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI20_LEN_X, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI20V_P1_LineStartX, out hv_FAI20V_P1_LineStartY, 
          out hv_FAI20V_P1_LineEndX, out hv_FAI20V_P1_LineEndY);
      hv_rowCenterTop.Dispose();hv_colCenterTop.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_FAI20_P2_LineStartY, hv_FAI20_P2_LineStartX, 
          hv_FAI20_P2_LineEndY, hv_FAI20_P2_LineEndX, hv_FAI20V_P1_LineStartY, hv_FAI20V_P1_LineStartX, 
          hv_FAI20V_P1_LineEndY, hv_FAI20V_P1_LineEndX, out hv_rowCenterTop, out hv_colCenterTop, 
          out hv_IsOverlapping2);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colCenterTop);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowCenterTop);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      hv_rectFAI20TRRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20TRRow = 288.18300000-hv_rowModel;
      }
      hv_rectFAI20TRCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20TRCol = 4587.96000000-hv_colModel;
      }
      hv_rectFAI20TRRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20TRRadian = (new HTuple(50.84800000)).TupleRad()
          ;
      }
      hv_rectFAI20TRLen1.Dispose();
      hv_rectFAI20TRLen1 = 84.64630000;
      hv_rectFAI20TRLen2.Dispose();
      hv_rectFAI20TRLen2 = 65.46210000;

      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI20TRRow, hv_rectFAI20TRCol, hv_rectFAI20TRRadian, 
          hv_rectFAI20TRLen1, hv_rectFAI20TRLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, 
          out ExpTmpOutVar_1, out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI20TRRow.Dispose();
      hv_rectFAI20TRRow = ExpTmpOutVar_0;
      hv_rectFAI20TRCol.Dispose();
      hv_rectFAI20TRCol = ExpTmpOutVar_1;
      hv_rectFAI20TRRadian.Dispose();
      hv_rectFAI20TRRadian = ExpTmpOutVar_2;
      hv_rectFAI20TRLen1.Dispose();
      hv_rectFAI20TRLen1 = ExpTmpOutVar_3;
      hv_rectFAI20TRLen2.Dispose();
      hv_rectFAI20TRLen2 = ExpTmpOutVar_4;
      }
      ho_Rectangle5.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle5, hv_rectFAI20TRRow, hv_rectFAI20TRCol, 
          hv_rectFAI20TRRadian, hv_rectFAI20TRLen1, hv_rectFAI20TRLen2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("20-topRight", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep_Pairs (Image, rect, lineRegion, rectFAI20TRRow, rectFAI20TRCol, rectFAI20TRRadian, rectFAI20TRLen1, rectFAI20TRLen2, 'negative', 6, threshValue, sigma1, sigma2, 'last', 'false', ignorePortion, 'first', 10, 50, 5120, 5120, cannyHigh, cannyLow, 'true', newWidth, kernelWidth15, longestOnly1, XsUsed, YsUsed, XsIgnored, YsIgnored, lineX1FAI20TR, lineY1FAI20TR, lineX2FAI20TR, lineY2FAI20TR)

      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', rectFAI20TRRow, rectFAI20TRCol, rectFAI20TRRadian, rectFAI20TRLen1, rectFAI20TRLen2, 5, FAI20Threshold_up, 'first', 0.3, 'false', 3, sigma2, Width, Height, newWidth, 30, 15, kernelWidth13, longestOnly14, lineX1FAI20TR, lineY1FAI20TR, lineX2FAI20TR, lineY2FAI20TR, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      hv_rectFAI20BLRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20BLRow = 2078.83000000-hv_rowModel;
      }
      hv_rectFAI20BLCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20BLCol = 2775.07000000-hv_colModel;
      }
      hv_rectFAI20BLRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20BLRadian = (new HTuple(45)).TupleRad()
          ;
      }
      hv_rectFAI20BLLen1.Dispose();
      hv_rectFAI20BLLen1 = 80.07090000;
      hv_rectFAI20BLLen2.Dispose();
      hv_rectFAI20BLLen2 = 80.95030000;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI20BLRow, hv_rectFAI20BLCol, hv_rectFAI20BLRadian, 
          hv_rectFAI20BLLen1, hv_rectFAI20BLLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, 
          out ExpTmpOutVar_1, out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI20BLRow.Dispose();
      hv_rectFAI20BLRow = ExpTmpOutVar_0;
      hv_rectFAI20BLCol.Dispose();
      hv_rectFAI20BLCol = ExpTmpOutVar_1;
      hv_rectFAI20BLRadian.Dispose();
      hv_rectFAI20BLRadian = ExpTmpOutVar_2;
      hv_rectFAI20BLLen1.Dispose();
      hv_rectFAI20BLLen1 = ExpTmpOutVar_3;
      hv_rectFAI20BLLen2.Dispose();
      hv_rectFAI20BLLen2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("20-bottomLeft", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', rectFAI20BLRow, rectFAI20BLCol, rectFAI20BLRadian, rectFAI20BLLen1, rectFAI20BLLen2, 10, threshValue, 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth14, longestOnly15, lineX1FAI20BL, lineY1FAI20BL, lineX2FAI20BL, lineY2FAI20BL, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //FAI20-1
      hv_ptX_TR.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptX_TR = (hv_lineX1FAI20TR+hv_lineX2FAI20TR)/2.0;
      }
      hv_ptY_TR.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptY_TR = (hv_lineY1FAI20TR+hv_lineY2FAI20TR)/2.0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_ptX_TR);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_ptY_TR);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1FAI20BL, hv_lineY1FAI20BL, hv_lineX2FAI20BL, hv_lineY2FAI20BL, 
          hv_ptX_TR, hv_ptY_TR, hv_MapToWorld, out hv_distanceWorld, out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //FAI20-2
      hv_ptX_BL.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptX_BL = (hv_lineX1FAI20BL+hv_lineX2FAI20BL)/2.0;
      }
      hv_ptY_BL.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptY_BL = (hv_lineY1FAI20BL+hv_lineY2FAI20BL)/2.0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_ptX_BL);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_ptY_BL);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      hv_ptX.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptX = (hv_ptX_TR+hv_ptX_BL)/2.0;
      }
      hv_ptY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptY = (hv_ptY_TR+hv_ptY_BL)/2.0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_lineRegion.Dispose();hv_outLineX1.Dispose();hv_outLineY1.Dispose();hv_outLineX2.Dispose();hv_outLineY2.Dispose();
      PivotLineAroundPoint(out ho_lineRegion, hv_lineX1TopBase, hv_lineY1TopBase, 
          hv_lineX2TopBase, hv_lineY2TopBase, hv_colOrigin, hv_rowOrigin, (new HTuple(45)).TupleRad()
          , "right", 5120, 5120, out hv_outLineX1, out hv_outLineY1, out hv_outLineX2, 
          out hv_outLineY2);
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_outLineX1, hv_outLineY1, hv_outLineX2, hv_outLineY2, hv_ptX, 
          hv_ptY, hv_MapToWorld, out hv_distanceWorld, out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_distanceWorld = ((hv_distanceWorld-12.202)).TupleAbs()
          ;
      hv_distanceWorld.Dispose();
      hv_distanceWorld = ExpTmpLocalVar_distanceWorld;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      hv_numOutputs.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_numOutputs = new HTuple(hv_outputs.TupleLength()
          );
      }
      hv_numOutputPixels.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_numOutputPixels = new HTuple(hv_outputsPixel.TupleLength()
          );
      }
      ho_Image_COPY_INP_TMP.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageReduced.Dispose();
      ho_Region.Dispose();
      ho_ConnectedRegions.Dispose();
      ho_SelectedRegions.Dispose();
      ho_ImageResult.Dispose();
      ho_Rectangle8.Dispose();
      ho_ImageReduced1.Dispose();
      ho_Rectangle1.Dispose();
      ho_rect.Dispose();
      ho_lineRegion.Dispose();
      ho_rectFAI2.Dispose();
      ho_Rectangle7.Dispose();
      ho_rectFAI3.Dispose();
      ho_Rectangle6.Dispose();
      ho_rectFAI4.Dispose();
      ho_Rectangle2.Dispose();
      ho_Rectangle.Dispose();
      ho_lineRegion1.Dispose();
      ho_Cross.Dispose();
      ho_Rectangle3.Dispose();
      ho_Rectangle4.Dispose();
      ho_Rectangle5.Dispose();

      hv_CameraParameters.Dispose();
      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_MapToWorld.Dispose();
      hv_MapToImage.Dispose();
      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_crossSize.Dispose();
      hv_numSubRects.Dispose();
      hv_ModelThreshold.Dispose();
      hv_FAI2_LEN_P1.Dispose();
      hv_FAI2_LEN_P2.Dispose();
      hv_FAI2_LEN_P3.Dispose();
      hv_FAI3_LEN_P1.Dispose();
      hv_FAI3_LEN_P2.Dispose();
      hv_FAI3_LEN_P3.Dispose();
      hv_FAI4_LEN_P1.Dispose();
      hv_FAI4_LEN_P2.Dispose();
      hv_FAI4_LEN_P3.Dispose();
      hv_FAI5_LEN_P1.Dispose();
      hv_FAI5_LEN_P2.Dispose();
      hv_FAI5_LEN_P3.Dispose();
      hv_FAI6_LEN_P1.Dispose();
      hv_FAI6_LEN_P2.Dispose();
      hv_FAI6_LEN_P3.Dispose();
      hv_FAI9_LEN_P1.Dispose();
      hv_FAI9_LEN_P2.Dispose();
      hv_FAI9_LEN_P3.Dispose();
      hv_FAI12_LEN_P1.Dispose();
      hv_FAI12_LEN_P2.Dispose();
      hv_FAI16_LEN_P1.Dispose();
      hv_FAI16_LEN_P2.Dispose();
      hv_FAI17_LEN_P1.Dispose();
      hv_FAI17_LEN_P2.Dispose();
      hv_FAI19_LEN_P1.Dispose();
      hv_FAI19_LEN_P2.Dispose();
      hv_FAI20_LEN_X.Dispose();
      hv_FAI20_LEN_Y.Dispose();
      hv_Threshold.Dispose();
      hv_rowModel.Dispose();
      hv_colModel.Dispose();
      hv_UsedThreshold.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementImageToImage.Dispose();
      hv_ROW_1.Dispose();
      hv_COL_1.Dispose();
      hv_RAD_1.Dispose();
      hv_LEN_1.Dispose();
      hv_LEN_2.Dispose();
      hv_Value.Dispose();
      hv_standardGrayValue.Dispose();
      hv_scaleFacotr.Dispose();
      hv_ROW1_1.Dispose();
      hv_COL1_1.Dispose();
      hv_RAD1_1.Dispose();
      hv_LEN1_1.Dispose();
      hv_LEN2_1.Dispose();
      hv_ROW1_2.Dispose();
      hv_COL1_2.Dispose();
      hv_RAD1_2.Dispose();
      hv_LEN1_2.Dispose();
      hv_LEN2_2.Dispose();
      hv_baseRightRow.Dispose();
      hv_baseRightColum.Dispose();
      hv_baseRightRadian.Dispose();
      hv_baseRightLen1.Dispose();
      hv_baseRightLen2.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_sigma2.Dispose();
      hv_newWidth.Dispose();
      hv_cannyLow.Dispose();
      hv_cannyHigh.Dispose();
      hv_lineX1RightBase.Dispose();
      hv_lineY1RightBase.Dispose();
      hv_lineX2RightBase.Dispose();
      hv_lineY2RightBase.Dispose();
      hv_XsUsed.Dispose();
      hv_YsUsed.Dispose();
      hv_XsIgnored.Dispose();
      hv_YsIgnored.Dispose();
      hv_ROW_2.Dispose();
      hv_COL_2.Dispose();
      hv_RAD_2.Dispose();
      hv_ROW_3.Dispose();
      hv_COL_3.Dispose();
      hv_RAD_3.Dispose();
      hv_LEN1_3.Dispose();
      hv_LEN2_3.Dispose();
      hv_baseTopRow.Dispose();
      hv_baseTopColumn.Dispose();
      hv_baseTopRadian.Dispose();
      hv_baseTopLen1.Dispose();
      hv_baseTopLen2.Dispose();
      hv_lineX1TopBase.Dispose();
      hv_lineY1TopBase.Dispose();
      hv_lineX2TopBase.Dispose();
      hv_lineY2TopBase.Dispose();
      hv_rowOrigin.Dispose();
      hv_colOrigin.Dispose();
      hv_IsOverlapping.Dispose();
      hv_ptXOnPerpenducularDir.Dispose();
      hv_ptYOnPerpenducularDir.Dispose();
      hv_FAI2_P1_LineStartX.Dispose();
      hv_FAI2_P1_LineStartY.Dispose();
      hv_FAI2_P1_LineEndX.Dispose();
      hv_FAI2_P1_LineEndY.Dispose();
      hv_FAI2_P2_LineStartX.Dispose();
      hv_FAI2_P2_LineStartY.Dispose();
      hv_FAI2_P2_LineEndX.Dispose();
      hv_FAI2_P2_LineEndY.Dispose();
      hv_FAI2_P3_LineStartX.Dispose();
      hv_FAI2_P3_LineStartY.Dispose();
      hv_FAI2_P3_LineEndX.Dispose();
      hv_FAI2_P3_LineEndY.Dispose();
      hv_rectFAI2Row.Dispose();
      hv_rectFAI2Col.Dispose();
      hv_rectFAI2Radian.Dispose();
      hv_rectFAI2Len1.Dispose();
      hv_rectFAI2Len2.Dispose();
      hv_rectFAI2Row_RIGHT.Dispose();
      hv_rectFAI2Col_RIGHT.Dispose();
      hv_rectFAI2Radian_RIGHT.Dispose();
      hv_rectFAI2Len1_RIGHT.Dispose();
      hv_rectFAI2Len2_RIGHT.Dispose();
      hv_lineStartX_FAI2H.Dispose();
      hv_lineStartY_FAI2H.Dispose();
      hv_lineEndX_FAI2H.Dispose();
      hv_lineEndY_FAI2H.Dispose();
      hv_rowIntersect.Dispose();
      hv_colIntersect.Dispose();
      hv_IsOverlapping1.Dispose();
      hv_distanceWorld.Dispose();
      hv_distancePixel.Dispose();
      hv_rectFAI3Row.Dispose();
      hv_rectFAI3Col.Dispose();
      hv_rectFAI3Radian.Dispose();
      hv_rectFAI3Len1.Dispose();
      hv_rectFAI3Len2.Dispose();
      hv_rectFAI3Row_RIGHT.Dispose();
      hv_rectFAI3Col_RIGHT.Dispose();
      hv_rectFAI3Radian_RIGHT.Dispose();
      hv_rectFAI3Len1_RIGHT.Dispose();
      hv_rectFAI3Len2_RIGHT.Dispose();
      hv_FAI3_P1_LineStartX.Dispose();
      hv_FAI3_P1_LineStartY.Dispose();
      hv_FAI3_P1_LineEndX.Dispose();
      hv_FAI3_P1_LineEndY.Dispose();
      hv_FAI3_P2_LineStartX.Dispose();
      hv_FAI3_P2_LineStartY.Dispose();
      hv_FAI3_P2_LineEndX.Dispose();
      hv_FAI3_P2_LineEndY.Dispose();
      hv_FAI3_P3_LineStartX.Dispose();
      hv_FAI3_P3_LineStartY.Dispose();
      hv_FAI3_P3_LineEndX.Dispose();
      hv_FAI3_P3_LineEndY.Dispose();
      hv_IsOverlapping2.Dispose();
      hv_rectFAI4Row.Dispose();
      hv_rectFAI4Col.Dispose();
      hv_rectFAI4Radian.Dispose();
      hv_rectFAI4Len1.Dispose();
      hv_rectFAI4Len2.Dispose();
      hv_lineX1FAI4.Dispose();
      hv_lineY1FAI4.Dispose();
      hv_lineX2FAI4.Dispose();
      hv_lineY2FAI4.Dispose();
      hv_rectFAI5Row.Dispose();
      hv_rectFAI5Col.Dispose();
      hv_rectFAI5Radian.Dispose();
      hv_rectFAI5Len1.Dispose();
      hv_rectFAI5Len2.Dispose();
      hv_lineX1FAI5.Dispose();
      hv_lineY1FAI5.Dispose();
      hv_lineX2FAI5.Dispose();
      hv_lineY2FAI5.Dispose();
      hv_rectFAI6Row.Dispose();
      hv_rectFAI6Col.Dispose();
      hv_rectFAI6Radian.Dispose();
      hv_rectFAI6Len1.Dispose();
      hv_rectFAI6Len2.Dispose();
      hv_lineX1FAI6.Dispose();
      hv_lineY1FAI6.Dispose();
      hv_lineX2FAI6.Dispose();
      hv_lineY2FAI6.Dispose();
      hv_FAI6_P1_LineStartX.Dispose();
      hv_FAI6_P1_LineStartY.Dispose();
      hv_FAI6_P1_LineEndX.Dispose();
      hv_FAI6_P1_LineEndY.Dispose();
      hv_FAI6_P2_LineStartX.Dispose();
      hv_FAI6_P2_LineStartY.Dispose();
      hv_FAI6_P2_LineEndX.Dispose();
      hv_FAI6_P2_LineEndY.Dispose();
      hv_FAI6_P3_LineStartX.Dispose();
      hv_FAI6_P3_LineStartY.Dispose();
      hv_FAI6_P3_LineEndX.Dispose();
      hv_FAI6_P3_LineEndY.Dispose();
      hv_rectFAI9Row.Dispose();
      hv_rectFAI9Col.Dispose();
      hv_rectFAI9Radian.Dispose();
      hv_rectFAI9Len1.Dispose();
      hv_rectFAI9Len2.Dispose();
      hv_lineX1FAI9.Dispose();
      hv_lineY1FAI9.Dispose();
      hv_lineX2FAI9.Dispose();
      hv_lineY2FAI9.Dispose();
      hv_FAI9_P1_LineStartX.Dispose();
      hv_FAI9_P1_LineStartY.Dispose();
      hv_FAI9_P1_LineEndX.Dispose();
      hv_FAI9_P1_LineEndY.Dispose();
      hv_FAI9_P2_LineStartX.Dispose();
      hv_FAI9_P2_LineStartY.Dispose();
      hv_FAI9_P2_LineEndX.Dispose();
      hv_FAI9_P2_LineEndY.Dispose();
      hv_FAI9_P3_LineStartX.Dispose();
      hv_FAI9_P3_LineStartY.Dispose();
      hv_FAI9_P3_LineEndX.Dispose();
      hv_FAI9_P3_LineEndY.Dispose();
      hv_rectFAI12Row.Dispose();
      hv_rectFAI12Col.Dispose();
      hv_rectFAI12Radian.Dispose();
      hv_rectFAI12Len1.Dispose();
      hv_rectFAI12Len2.Dispose();
      hv_lineX1FAI12.Dispose();
      hv_lineY1FAI12.Dispose();
      hv_lineX2FAI12.Dispose();
      hv_lineY2FAI12.Dispose();
      hv_FAI12_P1_LineStartX.Dispose();
      hv_FAI12_P1_LineStartY.Dispose();
      hv_FAI12_P1_LineEndX.Dispose();
      hv_FAI12_P1_LineEndY.Dispose();
      hv_FAI12_P2_LineStartX.Dispose();
      hv_FAI12_P2_LineStartY.Dispose();
      hv_FAI12_P2_LineEndX.Dispose();
      hv_FAI12_P2_LineEndY.Dispose();
      hv_rectFAI16Row.Dispose();
      hv_rectFAI16Col.Dispose();
      hv_rectFAI16Radian.Dispose();
      hv_rectFAI16Len1.Dispose();
      hv_rectFAI16Len2.Dispose();
      hv_lineX1FAI16.Dispose();
      hv_lineY1FAI16.Dispose();
      hv_lineX2FAI16.Dispose();
      hv_lineY2FAI16.Dispose();
      hv_FAI16_P1_LineStartX.Dispose();
      hv_FAI16_P1_LineStartY.Dispose();
      hv_FAI16_P1_LineEndX.Dispose();
      hv_FAI16_P1_LineEndY.Dispose();
      hv_FAI16_P2_LineStartX.Dispose();
      hv_FAI16_P2_LineStartY.Dispose();
      hv_FAI16_P2_LineEndX.Dispose();
      hv_FAI16_P2_LineEndY.Dispose();
      hv_rectFAI17Row.Dispose();
      hv_rectFAI17Col.Dispose();
      hv_rectFAI17Radian.Dispose();
      hv_rectFAI17Len1.Dispose();
      hv_rectFAI17Len2.Dispose();
      hv_lineX1FAI17.Dispose();
      hv_lineY1FAI17.Dispose();
      hv_lineX2FAI17.Dispose();
      hv_lineY2FAI17.Dispose();
      hv_FAI17_P1_LineStartX.Dispose();
      hv_FAI17_P1_LineStartY.Dispose();
      hv_FAI17_P1_LineEndX.Dispose();
      hv_FAI17_P1_LineEndY.Dispose();
      hv_FAI17_P2_LineStartX.Dispose();
      hv_FAI17_P2_LineStartY.Dispose();
      hv_FAI17_P2_LineEndX.Dispose();
      hv_FAI17_P2_LineEndY.Dispose();
      hv_rectFAI19Row.Dispose();
      hv_rectFAI19Col.Dispose();
      hv_rectFAI19Radian.Dispose();
      hv_rectFAI19Len1.Dispose();
      hv_rectFAI19Len2.Dispose();
      hv_lineX1FAI19.Dispose();
      hv_lineY1FAI19.Dispose();
      hv_lineX2FAI19.Dispose();
      hv_lineY2FAI19.Dispose();
      hv_FAI19_P1_LineStartX.Dispose();
      hv_FAI19_P1_LineStartY.Dispose();
      hv_FAI19_P1_LineEndX.Dispose();
      hv_FAI19_P1_LineEndY.Dispose();
      hv_FAI19_P2_LineStartX.Dispose();
      hv_FAI19_P2_LineStartY.Dispose();
      hv_FAI19_P2_LineEndX.Dispose();
      hv_FAI19_P2_LineEndY.Dispose();
      hv_FAI20_P2_LineStartX.Dispose();
      hv_FAI20_P2_LineStartY.Dispose();
      hv_FAI20_P2_LineEndX.Dispose();
      hv_FAI20_P2_LineEndY.Dispose();
      hv_FAI20V_P1_LineStartX.Dispose();
      hv_FAI20V_P1_LineStartY.Dispose();
      hv_FAI20V_P1_LineEndX.Dispose();
      hv_FAI20V_P1_LineEndY.Dispose();
      hv_rowCenterTop.Dispose();
      hv_colCenterTop.Dispose();
      hv_rectFAI20TRRow.Dispose();
      hv_rectFAI20TRCol.Dispose();
      hv_rectFAI20TRRadian.Dispose();
      hv_rectFAI20TRLen1.Dispose();
      hv_rectFAI20TRLen2.Dispose();
      hv_lineX1FAI20TR.Dispose();
      hv_lineY1FAI20TR.Dispose();
      hv_lineX2FAI20TR.Dispose();
      hv_lineY2FAI20TR.Dispose();
      hv_rectFAI20BLRow.Dispose();
      hv_rectFAI20BLCol.Dispose();
      hv_rectFAI20BLRadian.Dispose();
      hv_rectFAI20BLLen1.Dispose();
      hv_rectFAI20BLLen2.Dispose();
      hv_lineX1FAI20BL.Dispose();
      hv_lineY1FAI20BL.Dispose();
      hv_lineX2FAI20BL.Dispose();
      hv_lineY2FAI20BL.Dispose();
      hv_ptX_TR.Dispose();
      hv_ptY_TR.Dispose();
      hv_ptX_BL.Dispose();
      hv_ptY_BL.Dispose();
      hv_ptX.Dispose();
      hv_ptY.Dispose();
      hv_outLineX1.Dispose();
      hv_outLineY1.Dispose();
      hv_outLineX2.Dispose();
      hv_outLineY2.Dispose();
      hv_numOutputs.Dispose();
      hv_numOutputPixels.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Image_COPY_INP_TMP.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageReduced.Dispose();
      ho_Region.Dispose();
      ho_ConnectedRegions.Dispose();
      ho_SelectedRegions.Dispose();
      ho_ImageResult.Dispose();
      ho_Rectangle8.Dispose();
      ho_ImageReduced1.Dispose();
      ho_Rectangle1.Dispose();
      ho_rect.Dispose();
      ho_lineRegion.Dispose();
      ho_rectFAI2.Dispose();
      ho_Rectangle7.Dispose();
      ho_rectFAI3.Dispose();
      ho_Rectangle6.Dispose();
      ho_rectFAI4.Dispose();
      ho_Rectangle2.Dispose();
      ho_Rectangle.Dispose();
      ho_lineRegion1.Dispose();
      ho_Cross.Dispose();
      ho_Rectangle3.Dispose();
      ho_Rectangle4.Dispose();
      ho_Rectangle5.Dispose();

      hv_CameraParameters.Dispose();
      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_MapToWorld.Dispose();
      hv_MapToImage.Dispose();
      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_crossSize.Dispose();
      hv_numSubRects.Dispose();
      hv_ModelThreshold.Dispose();
      hv_FAI2_LEN_P1.Dispose();
      hv_FAI2_LEN_P2.Dispose();
      hv_FAI2_LEN_P3.Dispose();
      hv_FAI3_LEN_P1.Dispose();
      hv_FAI3_LEN_P2.Dispose();
      hv_FAI3_LEN_P3.Dispose();
      hv_FAI4_LEN_P1.Dispose();
      hv_FAI4_LEN_P2.Dispose();
      hv_FAI4_LEN_P3.Dispose();
      hv_FAI5_LEN_P1.Dispose();
      hv_FAI5_LEN_P2.Dispose();
      hv_FAI5_LEN_P3.Dispose();
      hv_FAI6_LEN_P1.Dispose();
      hv_FAI6_LEN_P2.Dispose();
      hv_FAI6_LEN_P3.Dispose();
      hv_FAI9_LEN_P1.Dispose();
      hv_FAI9_LEN_P2.Dispose();
      hv_FAI9_LEN_P3.Dispose();
      hv_FAI12_LEN_P1.Dispose();
      hv_FAI12_LEN_P2.Dispose();
      hv_FAI16_LEN_P1.Dispose();
      hv_FAI16_LEN_P2.Dispose();
      hv_FAI17_LEN_P1.Dispose();
      hv_FAI17_LEN_P2.Dispose();
      hv_FAI19_LEN_P1.Dispose();
      hv_FAI19_LEN_P2.Dispose();
      hv_FAI20_LEN_X.Dispose();
      hv_FAI20_LEN_Y.Dispose();
      hv_Threshold.Dispose();
      hv_rowModel.Dispose();
      hv_colModel.Dispose();
      hv_UsedThreshold.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementImageToImage.Dispose();
      hv_ROW_1.Dispose();
      hv_COL_1.Dispose();
      hv_RAD_1.Dispose();
      hv_LEN_1.Dispose();
      hv_LEN_2.Dispose();
      hv_Value.Dispose();
      hv_standardGrayValue.Dispose();
      hv_scaleFacotr.Dispose();
      hv_ROW1_1.Dispose();
      hv_COL1_1.Dispose();
      hv_RAD1_1.Dispose();
      hv_LEN1_1.Dispose();
      hv_LEN2_1.Dispose();
      hv_ROW1_2.Dispose();
      hv_COL1_2.Dispose();
      hv_RAD1_2.Dispose();
      hv_LEN1_2.Dispose();
      hv_LEN2_2.Dispose();
      hv_baseRightRow.Dispose();
      hv_baseRightColum.Dispose();
      hv_baseRightRadian.Dispose();
      hv_baseRightLen1.Dispose();
      hv_baseRightLen2.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_sigma2.Dispose();
      hv_newWidth.Dispose();
      hv_cannyLow.Dispose();
      hv_cannyHigh.Dispose();
      hv_lineX1RightBase.Dispose();
      hv_lineY1RightBase.Dispose();
      hv_lineX2RightBase.Dispose();
      hv_lineY2RightBase.Dispose();
      hv_XsUsed.Dispose();
      hv_YsUsed.Dispose();
      hv_XsIgnored.Dispose();
      hv_YsIgnored.Dispose();
      hv_ROW_2.Dispose();
      hv_COL_2.Dispose();
      hv_RAD_2.Dispose();
      hv_ROW_3.Dispose();
      hv_COL_3.Dispose();
      hv_RAD_3.Dispose();
      hv_LEN1_3.Dispose();
      hv_LEN2_3.Dispose();
      hv_baseTopRow.Dispose();
      hv_baseTopColumn.Dispose();
      hv_baseTopRadian.Dispose();
      hv_baseTopLen1.Dispose();
      hv_baseTopLen2.Dispose();
      hv_lineX1TopBase.Dispose();
      hv_lineY1TopBase.Dispose();
      hv_lineX2TopBase.Dispose();
      hv_lineY2TopBase.Dispose();
      hv_rowOrigin.Dispose();
      hv_colOrigin.Dispose();
      hv_IsOverlapping.Dispose();
      hv_ptXOnPerpenducularDir.Dispose();
      hv_ptYOnPerpenducularDir.Dispose();
      hv_FAI2_P1_LineStartX.Dispose();
      hv_FAI2_P1_LineStartY.Dispose();
      hv_FAI2_P1_LineEndX.Dispose();
      hv_FAI2_P1_LineEndY.Dispose();
      hv_FAI2_P2_LineStartX.Dispose();
      hv_FAI2_P2_LineStartY.Dispose();
      hv_FAI2_P2_LineEndX.Dispose();
      hv_FAI2_P2_LineEndY.Dispose();
      hv_FAI2_P3_LineStartX.Dispose();
      hv_FAI2_P3_LineStartY.Dispose();
      hv_FAI2_P3_LineEndX.Dispose();
      hv_FAI2_P3_LineEndY.Dispose();
      hv_rectFAI2Row.Dispose();
      hv_rectFAI2Col.Dispose();
      hv_rectFAI2Radian.Dispose();
      hv_rectFAI2Len1.Dispose();
      hv_rectFAI2Len2.Dispose();
      hv_rectFAI2Row_RIGHT.Dispose();
      hv_rectFAI2Col_RIGHT.Dispose();
      hv_rectFAI2Radian_RIGHT.Dispose();
      hv_rectFAI2Len1_RIGHT.Dispose();
      hv_rectFAI2Len2_RIGHT.Dispose();
      hv_lineStartX_FAI2H.Dispose();
      hv_lineStartY_FAI2H.Dispose();
      hv_lineEndX_FAI2H.Dispose();
      hv_lineEndY_FAI2H.Dispose();
      hv_rowIntersect.Dispose();
      hv_colIntersect.Dispose();
      hv_IsOverlapping1.Dispose();
      hv_distanceWorld.Dispose();
      hv_distancePixel.Dispose();
      hv_rectFAI3Row.Dispose();
      hv_rectFAI3Col.Dispose();
      hv_rectFAI3Radian.Dispose();
      hv_rectFAI3Len1.Dispose();
      hv_rectFAI3Len2.Dispose();
      hv_rectFAI3Row_RIGHT.Dispose();
      hv_rectFAI3Col_RIGHT.Dispose();
      hv_rectFAI3Radian_RIGHT.Dispose();
      hv_rectFAI3Len1_RIGHT.Dispose();
      hv_rectFAI3Len2_RIGHT.Dispose();
      hv_FAI3_P1_LineStartX.Dispose();
      hv_FAI3_P1_LineStartY.Dispose();
      hv_FAI3_P1_LineEndX.Dispose();
      hv_FAI3_P1_LineEndY.Dispose();
      hv_FAI3_P2_LineStartX.Dispose();
      hv_FAI3_P2_LineStartY.Dispose();
      hv_FAI3_P2_LineEndX.Dispose();
      hv_FAI3_P2_LineEndY.Dispose();
      hv_FAI3_P3_LineStartX.Dispose();
      hv_FAI3_P3_LineStartY.Dispose();
      hv_FAI3_P3_LineEndX.Dispose();
      hv_FAI3_P3_LineEndY.Dispose();
      hv_IsOverlapping2.Dispose();
      hv_rectFAI4Row.Dispose();
      hv_rectFAI4Col.Dispose();
      hv_rectFAI4Radian.Dispose();
      hv_rectFAI4Len1.Dispose();
      hv_rectFAI4Len2.Dispose();
      hv_lineX1FAI4.Dispose();
      hv_lineY1FAI4.Dispose();
      hv_lineX2FAI4.Dispose();
      hv_lineY2FAI4.Dispose();
      hv_rectFAI5Row.Dispose();
      hv_rectFAI5Col.Dispose();
      hv_rectFAI5Radian.Dispose();
      hv_rectFAI5Len1.Dispose();
      hv_rectFAI5Len2.Dispose();
      hv_lineX1FAI5.Dispose();
      hv_lineY1FAI5.Dispose();
      hv_lineX2FAI5.Dispose();
      hv_lineY2FAI5.Dispose();
      hv_rectFAI6Row.Dispose();
      hv_rectFAI6Col.Dispose();
      hv_rectFAI6Radian.Dispose();
      hv_rectFAI6Len1.Dispose();
      hv_rectFAI6Len2.Dispose();
      hv_lineX1FAI6.Dispose();
      hv_lineY1FAI6.Dispose();
      hv_lineX2FAI6.Dispose();
      hv_lineY2FAI6.Dispose();
      hv_FAI6_P1_LineStartX.Dispose();
      hv_FAI6_P1_LineStartY.Dispose();
      hv_FAI6_P1_LineEndX.Dispose();
      hv_FAI6_P1_LineEndY.Dispose();
      hv_FAI6_P2_LineStartX.Dispose();
      hv_FAI6_P2_LineStartY.Dispose();
      hv_FAI6_P2_LineEndX.Dispose();
      hv_FAI6_P2_LineEndY.Dispose();
      hv_FAI6_P3_LineStartX.Dispose();
      hv_FAI6_P3_LineStartY.Dispose();
      hv_FAI6_P3_LineEndX.Dispose();
      hv_FAI6_P3_LineEndY.Dispose();
      hv_rectFAI9Row.Dispose();
      hv_rectFAI9Col.Dispose();
      hv_rectFAI9Radian.Dispose();
      hv_rectFAI9Len1.Dispose();
      hv_rectFAI9Len2.Dispose();
      hv_lineX1FAI9.Dispose();
      hv_lineY1FAI9.Dispose();
      hv_lineX2FAI9.Dispose();
      hv_lineY2FAI9.Dispose();
      hv_FAI9_P1_LineStartX.Dispose();
      hv_FAI9_P1_LineStartY.Dispose();
      hv_FAI9_P1_LineEndX.Dispose();
      hv_FAI9_P1_LineEndY.Dispose();
      hv_FAI9_P2_LineStartX.Dispose();
      hv_FAI9_P2_LineStartY.Dispose();
      hv_FAI9_P2_LineEndX.Dispose();
      hv_FAI9_P2_LineEndY.Dispose();
      hv_FAI9_P3_LineStartX.Dispose();
      hv_FAI9_P3_LineStartY.Dispose();
      hv_FAI9_P3_LineEndX.Dispose();
      hv_FAI9_P3_LineEndY.Dispose();
      hv_rectFAI12Row.Dispose();
      hv_rectFAI12Col.Dispose();
      hv_rectFAI12Radian.Dispose();
      hv_rectFAI12Len1.Dispose();
      hv_rectFAI12Len2.Dispose();
      hv_lineX1FAI12.Dispose();
      hv_lineY1FAI12.Dispose();
      hv_lineX2FAI12.Dispose();
      hv_lineY2FAI12.Dispose();
      hv_FAI12_P1_LineStartX.Dispose();
      hv_FAI12_P1_LineStartY.Dispose();
      hv_FAI12_P1_LineEndX.Dispose();
      hv_FAI12_P1_LineEndY.Dispose();
      hv_FAI12_P2_LineStartX.Dispose();
      hv_FAI12_P2_LineStartY.Dispose();
      hv_FAI12_P2_LineEndX.Dispose();
      hv_FAI12_P2_LineEndY.Dispose();
      hv_rectFAI16Row.Dispose();
      hv_rectFAI16Col.Dispose();
      hv_rectFAI16Radian.Dispose();
      hv_rectFAI16Len1.Dispose();
      hv_rectFAI16Len2.Dispose();
      hv_lineX1FAI16.Dispose();
      hv_lineY1FAI16.Dispose();
      hv_lineX2FAI16.Dispose();
      hv_lineY2FAI16.Dispose();
      hv_FAI16_P1_LineStartX.Dispose();
      hv_FAI16_P1_LineStartY.Dispose();
      hv_FAI16_P1_LineEndX.Dispose();
      hv_FAI16_P1_LineEndY.Dispose();
      hv_FAI16_P2_LineStartX.Dispose();
      hv_FAI16_P2_LineStartY.Dispose();
      hv_FAI16_P2_LineEndX.Dispose();
      hv_FAI16_P2_LineEndY.Dispose();
      hv_rectFAI17Row.Dispose();
      hv_rectFAI17Col.Dispose();
      hv_rectFAI17Radian.Dispose();
      hv_rectFAI17Len1.Dispose();
      hv_rectFAI17Len2.Dispose();
      hv_lineX1FAI17.Dispose();
      hv_lineY1FAI17.Dispose();
      hv_lineX2FAI17.Dispose();
      hv_lineY2FAI17.Dispose();
      hv_FAI17_P1_LineStartX.Dispose();
      hv_FAI17_P1_LineStartY.Dispose();
      hv_FAI17_P1_LineEndX.Dispose();
      hv_FAI17_P1_LineEndY.Dispose();
      hv_FAI17_P2_LineStartX.Dispose();
      hv_FAI17_P2_LineStartY.Dispose();
      hv_FAI17_P2_LineEndX.Dispose();
      hv_FAI17_P2_LineEndY.Dispose();
      hv_rectFAI19Row.Dispose();
      hv_rectFAI19Col.Dispose();
      hv_rectFAI19Radian.Dispose();
      hv_rectFAI19Len1.Dispose();
      hv_rectFAI19Len2.Dispose();
      hv_lineX1FAI19.Dispose();
      hv_lineY1FAI19.Dispose();
      hv_lineX2FAI19.Dispose();
      hv_lineY2FAI19.Dispose();
      hv_FAI19_P1_LineStartX.Dispose();
      hv_FAI19_P1_LineStartY.Dispose();
      hv_FAI19_P1_LineEndX.Dispose();
      hv_FAI19_P1_LineEndY.Dispose();
      hv_FAI19_P2_LineStartX.Dispose();
      hv_FAI19_P2_LineStartY.Dispose();
      hv_FAI19_P2_LineEndX.Dispose();
      hv_FAI19_P2_LineEndY.Dispose();
      hv_FAI20_P2_LineStartX.Dispose();
      hv_FAI20_P2_LineStartY.Dispose();
      hv_FAI20_P2_LineEndX.Dispose();
      hv_FAI20_P2_LineEndY.Dispose();
      hv_FAI20V_P1_LineStartX.Dispose();
      hv_FAI20V_P1_LineStartY.Dispose();
      hv_FAI20V_P1_LineEndX.Dispose();
      hv_FAI20V_P1_LineEndY.Dispose();
      hv_rowCenterTop.Dispose();
      hv_colCenterTop.Dispose();
      hv_rectFAI20TRRow.Dispose();
      hv_rectFAI20TRCol.Dispose();
      hv_rectFAI20TRRadian.Dispose();
      hv_rectFAI20TRLen1.Dispose();
      hv_rectFAI20TRLen2.Dispose();
      hv_lineX1FAI20TR.Dispose();
      hv_lineY1FAI20TR.Dispose();
      hv_lineX2FAI20TR.Dispose();
      hv_lineY2FAI20TR.Dispose();
      hv_rectFAI20BLRow.Dispose();
      hv_rectFAI20BLCol.Dispose();
      hv_rectFAI20BLRadian.Dispose();
      hv_rectFAI20BLLen1.Dispose();
      hv_rectFAI20BLLen2.Dispose();
      hv_lineX1FAI20BL.Dispose();
      hv_lineY1FAI20BL.Dispose();
      hv_lineX2FAI20BL.Dispose();
      hv_lineY2FAI20BL.Dispose();
      hv_ptX_TR.Dispose();
      hv_ptY_TR.Dispose();
      hv_ptX_BL.Dispose();
      hv_ptY_BL.Dispose();
      hv_ptX.Dispose();
      hv_ptY.Dispose();
      hv_outLineX1.Dispose();
      hv_outLineY1.Dispose();
      hv_outLineX2.Dispose();
      hv_outLineY2.Dispose();
      hv_numOutputs.Dispose();
      hv_numOutputPixels.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void I94TopFaceMeasurementOverflow (HObject ho_Image, out HObject ho_ImageUndistorted, 
      out HObject ho_lineRegions, out HObject ho_FindLineRects, HTuple hv_ModelID, 
      HTuple hv_xCoeff, HTuple hv_yCoeff, HTuple hv_FindLineNames, HTuple hv_thresholds, 
      HTuple hv_IgnorePortions, HTuple hv_Sigma1s, HTuple hv_Sigma2s, HTuple hv_NewWidths, 
      HTuple hv_CannyLows, HTuple hv_CannyHighs, out HTuple hv_outputs, out HTuple hv_crossesXused, 
      out HTuple hv_crossesYused, out HTuple hv_crossesXIgnored, out HTuple hv_crossesYIgnored, 
      out HTuple hv_intersectXs, out HTuple hv_intersectYs, out HTuple hv_outputsPixel)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageReduced, ho_Region;
    HObject ho_ConnectedRegions, ho_SelectedRegions, ho_ImageResult;
    HObject ho_Rectangle1, ho_rect=null, ho_lineRegion=null;
    HObject ho_Rectangle, ho_Rectangle9, ho_rectFAI2, ho_Rectangle7;
    HObject ho_rectFAI3=null, ho_Rectangle6, ho_rectFAI4=null;
    HObject ho_Rectangle2, ho_lineRegion1, ho_Cross, ho_Rectangle5;

    // Local copy input parameter variables 
    HObject ho_Image_COPY_INP_TMP;
    ho_Image_COPY_INP_TMP = new HObject(ho_Image);



    // Local control variables 

    HTuple hv_CameraParameters = new HTuple();
    HTuple hv_CameraPose = new HTuple(), hv_OutCameraParams = new HTuple();
    HTuple hv_MapToWorld = new HTuple(), hv_MapToImage = new HTuple();
    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_crossSize = new HTuple(), hv_numSubRects = new HTuple();
    HTuple hv_ModelThreshold = new HTuple(), hv_FAI2_LEN_P1 = new HTuple();
    HTuple hv_FAI2_LEN_P2 = new HTuple(), hv_FAI2_LEN_P3 = new HTuple();
    HTuple hv_FAI3_LEN_P1 = new HTuple(), hv_FAI3_LEN_P2 = new HTuple();
    HTuple hv_FAI3_LEN_P3 = new HTuple(), hv_FAI4_LEN_P1 = new HTuple();
    HTuple hv_FAI4_LEN_P2 = new HTuple(), hv_FAI4_LEN_P3 = new HTuple();
    HTuple hv_FAI5_LEN_P1 = new HTuple(), hv_FAI5_LEN_P2 = new HTuple();
    HTuple hv_FAI5_LEN_P3 = new HTuple(), hv_FAI6_LEN_P1 = new HTuple();
    HTuple hv_FAI6_LEN_P2 = new HTuple(), hv_FAI6_LEN_P3 = new HTuple();
    HTuple hv_FAI9_LEN_P1 = new HTuple(), hv_FAI9_LEN_P2 = new HTuple();
    HTuple hv_FAI9_LEN_P3 = new HTuple(), hv_FAI12_LEN_P1 = new HTuple();
    HTuple hv_FAI12_LEN_P2 = new HTuple(), hv_FAI16_LEN_P1 = new HTuple();
    HTuple hv_FAI16_LEN_P2 = new HTuple(), hv_FAI17_LEN_P1 = new HTuple();
    HTuple hv_FAI17_LEN_P2 = new HTuple(), hv_FAI19_LEN_P1 = new HTuple();
    HTuple hv_FAI19_LEN_P2 = new HTuple(), hv_FAI20_LEN_X = new HTuple();
    HTuple hv_FAI20_LEN_Y = new HTuple(), hv_Threshold = new HTuple();
    HTuple hv_rowModel = new HTuple(), hv_colModel = new HTuple();
    HTuple hv_UsedThreshold = new HTuple(), hv_Row = new HTuple();
    HTuple hv_Column = new HTuple(), hv_Angle = new HTuple();
    HTuple hv_Score = new HTuple(), hv_MovementImageToImage = new HTuple();
    HTuple hv_ROW_1 = new HTuple(), hv_COL_1 = new HTuple();
    HTuple hv_RAD_1 = new HTuple(), hv_ROW1_1 = new HTuple();
    HTuple hv_COL1_1 = new HTuple(), hv_RAD1_1 = new HTuple();
    HTuple hv_LEN1_1 = new HTuple(), hv_LEN2_1 = new HTuple();
    HTuple hv_ROW1_2 = new HTuple(), hv_COL1_2 = new HTuple();
    HTuple hv_RAD1_2 = new HTuple(), hv_LEN1_2 = new HTuple();
    HTuple hv_LEN2_2 = new HTuple(), hv_baseRightRow = new HTuple();
    HTuple hv_baseRightColum = new HTuple(), hv_baseRightRadian = new HTuple();
    HTuple hv_baseRightLen1 = new HTuple(), hv_baseRightLen2 = new HTuple();
    HTuple hv_threshValue = new HTuple(), hv_ignorePortion = new HTuple();
    HTuple hv_sigma1 = new HTuple(), hv_sigma2 = new HTuple();
    HTuple hv_newWidth = new HTuple(), hv_cannyLow = new HTuple();
    HTuple hv_cannyHigh = new HTuple(), hv_lineX1RightBase = new HTuple();
    HTuple hv_lineY1RightBase = new HTuple(), hv_lineX2RightBase = new HTuple();
    HTuple hv_lineY2RightBase = new HTuple(), hv_XsUsed = new HTuple();
    HTuple hv_YsUsed = new HTuple(), hv_XsIgnored = new HTuple();
    HTuple hv_YsIgnored = new HTuple(), hv_ROW_2 = new HTuple();
    HTuple hv_COL_2 = new HTuple(), hv_RAD_2 = new HTuple();
    HTuple hv_ROW_3 = new HTuple(), hv_COL_3 = new HTuple();
    HTuple hv_RAD_3 = new HTuple(), hv_LEN1_3 = new HTuple();
    HTuple hv_LEN2_3 = new HTuple(), hv_baseTopRow = new HTuple();
    HTuple hv_baseTopColumn = new HTuple(), hv_baseTopRadian = new HTuple();
    HTuple hv_baseTopLen1 = new HTuple(), hv_baseTopLen2 = new HTuple();
    HTuple hv_rowOrigin = new HTuple(), hv_colOrigin = new HTuple();
    HTuple hv_ptXOnPerpenducularDir = new HTuple(), hv_ptYOnPerpenducularDir = new HTuple();
    HTuple hv_FAI2_P1_LineStartX = new HTuple(), hv_FAI2_P1_LineStartY = new HTuple();
    HTuple hv_FAI2_P1_LineEndX = new HTuple(), hv_FAI2_P1_LineEndY = new HTuple();
    HTuple hv_FAI2_P2_LineStartX = new HTuple(), hv_FAI2_P2_LineStartY = new HTuple();
    HTuple hv_FAI2_P2_LineEndX = new HTuple(), hv_FAI2_P2_LineEndY = new HTuple();
    HTuple hv_FAI2_P3_LineStartX = new HTuple(), hv_FAI2_P3_LineStartY = new HTuple();
    HTuple hv_FAI2_P3_LineEndX = new HTuple(), hv_FAI2_P3_LineEndY = new HTuple();
    HTuple hv_rectFAI2Row = new HTuple(), hv_rectFAI2Col = new HTuple();
    HTuple hv_rectFAI2Radian = new HTuple(), hv_rectFAI2Len1 = new HTuple();
    HTuple hv_rectFAI2Len2 = new HTuple(), hv_rectFAI2Row_RIGHT = new HTuple();
    HTuple hv_rectFAI2Col_RIGHT = new HTuple(), hv_rectFAI2Radian_RIGHT = new HTuple();
    HTuple hv_rectFAI2Len1_RIGHT = new HTuple(), hv_rectFAI2Len2_RIGHT = new HTuple();
    HTuple hv_lineStartX_FAI2H = new HTuple(), hv_lineStartY_FAI2H = new HTuple();
    HTuple hv_lineEndX_FAI2H = new HTuple(), hv_lineEndY_FAI2H = new HTuple();
    HTuple hv_rowIntersect = new HTuple(), hv_colIntersect = new HTuple();
    HTuple hv_IsOverlapping1 = new HTuple(), hv_distanceWorld = new HTuple();
    HTuple hv_distancePixel = new HTuple(), hv_rectFAI3Row = new HTuple();
    HTuple hv_rectFAI3Col = new HTuple(), hv_rectFAI3Radian = new HTuple();
    HTuple hv_rectFAI3Len1 = new HTuple(), hv_rectFAI3Len2 = new HTuple();
    HTuple hv_rectFAI3Row_RIGHT = new HTuple(), hv_rectFAI3Col_RIGHT = new HTuple();
    HTuple hv_rectFAI3Radian_RIGHT = new HTuple(), hv_rectFAI3Len1_RIGHT = new HTuple();
    HTuple hv_rectFAI3Len2_RIGHT = new HTuple(), hv_FAI3_P1_LineStartX = new HTuple();
    HTuple hv_FAI3_P1_LineStartY = new HTuple(), hv_FAI3_P1_LineEndX = new HTuple();
    HTuple hv_FAI3_P1_LineEndY = new HTuple(), hv_FAI3_P2_LineStartX = new HTuple();
    HTuple hv_FAI3_P2_LineStartY = new HTuple(), hv_FAI3_P2_LineEndX = new HTuple();
    HTuple hv_FAI3_P2_LineEndY = new HTuple(), hv_FAI3_P3_LineStartX = new HTuple();
    HTuple hv_FAI3_P3_LineStartY = new HTuple(), hv_FAI3_P3_LineEndX = new HTuple();
    HTuple hv_FAI3_P3_LineEndY = new HTuple(), hv_IsOverlapping2 = new HTuple();
    HTuple hv_rectFAI4Row = new HTuple(), hv_rectFAI4Col = new HTuple();
    HTuple hv_rectFAI4Radian = new HTuple(), hv_rectFAI4Len1 = new HTuple();
    HTuple hv_rectFAI4Len2 = new HTuple(), hv_rectFAI5Row = new HTuple();
    HTuple hv_rectFAI5Col = new HTuple(), hv_rectFAI5Radian = new HTuple();
    HTuple hv_rectFAI5Len1 = new HTuple(), hv_rectFAI5Len2 = new HTuple();
    HTuple hv_lineX1FAI5 = new HTuple(), hv_lineY1FAI5 = new HTuple();
    HTuple hv_lineX2FAI5 = new HTuple(), hv_lineY2FAI5 = new HTuple();
    HTuple hv_rectFAI6Row = new HTuple(), hv_rectFAI6Col = new HTuple();
    HTuple hv_rectFAI6Radian = new HTuple(), hv_rectFAI6Len1 = new HTuple();
    HTuple hv_rectFAI6Len2 = new HTuple(), hv_FAI6_P1_LineStartX = new HTuple();
    HTuple hv_FAI6_P1_LineStartY = new HTuple(), hv_FAI6_P1_LineEndX = new HTuple();
    HTuple hv_FAI6_P1_LineEndY = new HTuple(), hv_FAI6_P2_LineStartX = new HTuple();
    HTuple hv_FAI6_P2_LineStartY = new HTuple(), hv_FAI6_P2_LineEndX = new HTuple();
    HTuple hv_FAI6_P2_LineEndY = new HTuple(), hv_FAI6_P3_LineStartX = new HTuple();
    HTuple hv_FAI6_P3_LineStartY = new HTuple(), hv_FAI6_P3_LineEndX = new HTuple();
    HTuple hv_FAI6_P3_LineEndY = new HTuple(), hv_rectFAI9Row = new HTuple();
    HTuple hv_rectFAI9Col = new HTuple(), hv_rectFAI9Radian = new HTuple();
    HTuple hv_rectFAI9Len1 = new HTuple(), hv_rectFAI9Len2 = new HTuple();
    HTuple hv_FAI9_P1_LineStartX = new HTuple(), hv_FAI9_P1_LineStartY = new HTuple();
    HTuple hv_FAI9_P1_LineEndX = new HTuple(), hv_FAI9_P1_LineEndY = new HTuple();
    HTuple hv_FAI9_P2_LineStartX = new HTuple(), hv_FAI9_P2_LineStartY = new HTuple();
    HTuple hv_FAI9_P2_LineEndX = new HTuple(), hv_FAI9_P2_LineEndY = new HTuple();
    HTuple hv_FAI9_P3_LineStartX = new HTuple(), hv_FAI9_P3_LineStartY = new HTuple();
    HTuple hv_FAI9_P3_LineEndX = new HTuple(), hv_FAI9_P3_LineEndY = new HTuple();
    HTuple hv_rectFAI12Row = new HTuple(), hv_rectFAI12Col = new HTuple();
    HTuple hv_rectFAI12Radian = new HTuple(), hv_rectFAI12Len1 = new HTuple();
    HTuple hv_rectFAI12Len2 = new HTuple(), hv_rectFAI16Row = new HTuple();
    HTuple hv_rectFAI16Col = new HTuple(), hv_rectFAI16Radian = new HTuple();
    HTuple hv_rectFAI16Len1 = new HTuple(), hv_rectFAI16Len2 = new HTuple();
    HTuple hv_rectFAI17Row = new HTuple(), hv_rectFAI17Col = new HTuple();
    HTuple hv_rectFAI17Radian = new HTuple(), hv_rectFAI17Len1 = new HTuple();
    HTuple hv_rectFAI17Len2 = new HTuple(), hv_rectFAI19Row = new HTuple();
    HTuple hv_rectFAI19Col = new HTuple(), hv_rectFAI19Radian = new HTuple();
    HTuple hv_rectFAI19Len1 = new HTuple(), hv_rectFAI19Len2 = new HTuple();
    HTuple hv_FAI20_P2_LineStartX = new HTuple(), hv_FAI20_P2_LineStartY = new HTuple();
    HTuple hv_FAI20_P2_LineEndX = new HTuple(), hv_FAI20_P2_LineEndY = new HTuple();
    HTuple hv_FAI20V_P1_LineStartX = new HTuple(), hv_FAI20V_P1_LineStartY = new HTuple();
    HTuple hv_FAI20V_P1_LineEndX = new HTuple(), hv_FAI20V_P1_LineEndY = new HTuple();
    HTuple hv_rowCenterTop = new HTuple(), hv_colCenterTop = new HTuple();
    HTuple hv_rectFAI20TRRow = new HTuple(), hv_rectFAI20TRCol = new HTuple();
    HTuple hv_rectFAI20TRRadian = new HTuple(), hv_rectFAI20TRLen1 = new HTuple();
    HTuple hv_rectFAI20TRLen2 = new HTuple(), hv_lineX1FAI20TR = new HTuple();
    HTuple hv_lineY1FAI20TR = new HTuple(), hv_lineX2FAI20TR = new HTuple();
    HTuple hv_lineY2FAI20TR = new HTuple(), hv_rectFAI20BLRow = new HTuple();
    HTuple hv_rectFAI20BLCol = new HTuple(), hv_rectFAI20BLRadian = new HTuple();
    HTuple hv_rectFAI20BLLen1 = new HTuple(), hv_rectFAI20BLLen2 = new HTuple();
    HTuple hv_lineX1FAI20BL = new HTuple(), hv_lineY1FAI20BL = new HTuple();
    HTuple hv_lineX2FAI20BL = new HTuple(), hv_lineY2FAI20BL = new HTuple();
    HTuple hv_ptX_TR = new HTuple(), hv_ptY_TR = new HTuple();
    HTuple hv_ptX_BL = new HTuple(), hv_ptY_BL = new HTuple();
    HTuple hv_ptX = new HTuple(), hv_ptY = new HTuple(), hv_outLineX1 = new HTuple();
    HTuple hv_outLineY1 = new HTuple(), hv_outLineX2 = new HTuple();
    HTuple hv_outLineY2 = new HTuple(), hv_numOutputs = new HTuple();
    HTuple hv_numOutputPixels = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ImageUndistorted);
    HOperatorSet.GenEmptyObj(out ho_lineRegions);
    HOperatorSet.GenEmptyObj(out ho_FindLineRects);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_Region);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
    HOperatorSet.GenEmptyObj(out ho_ImageResult);
    HOperatorSet.GenEmptyObj(out ho_Rectangle1);
    HOperatorSet.GenEmptyObj(out ho_rect);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    HOperatorSet.GenEmptyObj(out ho_Rectangle9);
    HOperatorSet.GenEmptyObj(out ho_rectFAI2);
    HOperatorSet.GenEmptyObj(out ho_Rectangle7);
    HOperatorSet.GenEmptyObj(out ho_rectFAI3);
    HOperatorSet.GenEmptyObj(out ho_Rectangle6);
    HOperatorSet.GenEmptyObj(out ho_rectFAI4);
    HOperatorSet.GenEmptyObj(out ho_Rectangle2);
    HOperatorSet.GenEmptyObj(out ho_lineRegion1);
    HOperatorSet.GenEmptyObj(out ho_Cross);
    HOperatorSet.GenEmptyObj(out ho_Rectangle5);
    hv_outputs = new HTuple();
    hv_crossesXused = new HTuple();
    hv_crossesYused = new HTuple();
    hv_crossesXIgnored = new HTuple();
    hv_crossesYIgnored = new HTuple();
    hv_intersectXs = new HTuple();
    hv_intersectYs = new HTuple();
    hv_outputsPixel = new HTuple();
    try
    {
      hv_CameraParameters.Dispose();
      hv_CameraParameters = new HTuple();
      hv_CameraParameters[0] = "area_scan_telecentric_division";
      hv_CameraParameters[1] = 0.588471;
      hv_CameraParameters[2] = 3.42746;
      hv_CameraParameters[3] = 4.4974e-006;
      hv_CameraParameters[4] = 4.5e-006;
      hv_CameraParameters[5] = 2556.48;
      hv_CameraParameters[6] = 2560.7;
      hv_CameraParameters[7] = 5120;
      hv_CameraParameters[8] = 5120;
      hv_CameraPose.Dispose();
      hv_CameraPose = new HTuple();
      hv_CameraPose[0] = 0.00180843;
      hv_CameraPose[1] = -0.000646214;
      hv_CameraPose[2] = 0.000999199;
      hv_CameraPose[3] = 0.316458;
      hv_CameraPose[4] = 2.27204;
      hv_CameraPose[5] = 180.151;
      hv_CameraPose[6] = 0;
      {
      HObject ExpTmpOutVar_0;hv_OutCameraParams.Dispose();
      UndistortImage(ho_Image_COPY_INP_TMP, out ExpTmpOutVar_0, hv_CameraParameters, 
          out hv_OutCameraParams);
      ho_Image_COPY_INP_TMP.Dispose();
      ho_Image_COPY_INP_TMP = ExpTmpOutVar_0;
      }
      ho_ImageUndistorted.Dispose();
      ho_ImageUndistorted = new HObject(ho_Image_COPY_INP_TMP);

      hv_MapToWorld.Dispose();hv_MapToImage.Dispose();
      GenCalibrationMaps(ho_Image_COPY_INP_TMP, hv_OutCameraParams, hv_CameraPose, 
          out hv_MapToWorld, out hv_MapToImage);


      hv_Width.Dispose();hv_Height.Dispose();
      HOperatorSet.GetImageSize(ho_Image_COPY_INP_TMP, out hv_Width, out hv_Height);


      HOperatorSet.SetDraw(hv_ExpDefaultWinHandle, "margin");

      hv_crossSize.Dispose();
      hv_crossSize = 100;
      hv_numSubRects.Dispose();
      hv_numSubRects = 10;

      hv_ModelThreshold.Dispose();
      hv_ModelThreshold = 70;


      //record find line points
      hv_crossesXused.Dispose();
      hv_crossesXused = new HTuple();
      hv_crossesYused.Dispose();
      hv_crossesYused = new HTuple();
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = new HTuple();
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = new HTuple();

      //record line-line intersections
      hv_intersectXs.Dispose();
      hv_intersectXs = new HTuple();
      hv_intersectYs.Dispose();
      hv_intersectYs = new HTuple();

      //outputs
      hv_outputs.Dispose();
      hv_outputs = new HTuple();
      hv_outputsPixel.Dispose();
      hv_outputsPixel = new HTuple();

      //set units and positions


      hv_FAI2_LEN_P1.Dispose();
      hv_FAI2_LEN_P1 = 4.583;
      hv_FAI2_LEN_P2.Dispose();
      hv_FAI2_LEN_P2 = 9;
      hv_FAI2_LEN_P3.Dispose();
      hv_FAI2_LEN_P3 = 14.583;

      hv_FAI3_LEN_P1.Dispose();
      hv_FAI3_LEN_P1 = 5.299;
      hv_FAI3_LEN_P2.Dispose();
      hv_FAI3_LEN_P2 = 9;
      hv_FAI3_LEN_P3.Dispose();
      hv_FAI3_LEN_P3 = 13.299;

      hv_FAI4_LEN_P1.Dispose();
      hv_FAI4_LEN_P1 = 5.299;
      hv_FAI4_LEN_P2.Dispose();
      hv_FAI4_LEN_P2 = 9.299;
      hv_FAI4_LEN_P3.Dispose();
      hv_FAI4_LEN_P3 = 13.299;

      hv_FAI5_LEN_P1.Dispose();
      hv_FAI5_LEN_P1 = 5.299;
      hv_FAI5_LEN_P2.Dispose();
      hv_FAI5_LEN_P2 = 9.299;
      hv_FAI5_LEN_P3.Dispose();
      hv_FAI5_LEN_P3 = 13.299;

      hv_FAI6_LEN_P1.Dispose();
      hv_FAI6_LEN_P1 = 22.024;
      hv_FAI6_LEN_P2.Dispose();
      hv_FAI6_LEN_P2 = 24.024;
      hv_FAI6_LEN_P3.Dispose();
      hv_FAI6_LEN_P3 = 26.024;

      hv_FAI9_LEN_P1.Dispose();
      hv_FAI9_LEN_P1 = 21.753;
      hv_FAI9_LEN_P2.Dispose();
      hv_FAI9_LEN_P2 = 23.753;
      hv_FAI9_LEN_P3.Dispose();
      hv_FAI9_LEN_P3 = 25.753;


      hv_FAI12_LEN_P1.Dispose();
      hv_FAI12_LEN_P1 = 23.213;
      hv_FAI12_LEN_P2.Dispose();
      hv_FAI12_LEN_P2 = 34.97;

      hv_FAI16_LEN_P1.Dispose();
      hv_FAI16_LEN_P1 = 13.071;
      hv_FAI16_LEN_P2.Dispose();
      hv_FAI16_LEN_P2 = 20.213;

      hv_FAI17_LEN_P1.Dispose();
      hv_FAI17_LEN_P1 = 1.53;
      hv_FAI17_LEN_P2.Dispose();
      hv_FAI17_LEN_P2 = 9.827;

      hv_FAI19_LEN_P1.Dispose();
      hv_FAI19_LEN_P1 = 2.157;
      hv_FAI19_LEN_P2.Dispose();
      hv_FAI19_LEN_P2 = 13.791;

      hv_FAI20_LEN_X.Dispose();
      hv_FAI20_LEN_X = 9.299;
      hv_FAI20_LEN_Y.Dispose();
      hv_FAI20_LEN_Y = 7.886;

      ho_FindLineRects.Dispose();
      HOperatorSet.GenEmptyObj(out ho_FindLineRects);
      ho_lineRegions.Dispose();
      HOperatorSet.GenEmptyObj(out ho_lineRegions);


      //find model
      hv_Threshold.Dispose();
      hv_Threshold = 128;
      hv_rowModel.Dispose();
      hv_rowModel = 1171.5;
      hv_colModel.Dispose();
      hv_colModel = 3678.5;
      ho_ROI_0.Dispose();
      HOperatorSet.GenRectangle1(out ho_ROI_0, 53.9, 1940.83, 2000, 3900);
      ho_ImageReduced.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_ROI_0, out ho_ImageReduced
          );
      ho_Region.Dispose();hv_UsedThreshold.Dispose();
      HOperatorSet.BinaryThreshold(ho_ImageReduced, out ho_Region, "max_separability", 
          "dark", out hv_UsedThreshold);
      ho_ConnectedRegions.Dispose();
      HOperatorSet.Connection(ho_Region, out ho_ConnectedRegions);
      ho_SelectedRegions.Dispose();
      HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, "area", 
          "and", 800000, 99999999);
      ho_ImageResult.Dispose();
      HOperatorSet.PaintRegion(ho_SelectedRegions, ho_ImageReduced, out ho_ImageResult, 
          255, "fill");
      hv_Row.Dispose();hv_Column.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
      HOperatorSet.FindShapeModel(ho_ImageResult, hv_ModelID, -0.39, 0.79, 0.3, 1, 
          0.5, "least_squares", 0, 0.9, out hv_Row, out hv_Column, out hv_Angle, 
          out hv_Score);
      hv_MovementImageToImage.Dispose();
      HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Row, hv_Column, hv_Angle, out hv_MovementImageToImage);

      //image normalization
      //ROW_1 := 1972 - rowModel
      //COL_1 := 4257- colModel
      //RAD_1 := 0
      //LEN_1 := 150
      //LEN_2 := 150

      //AffineTransRect2 (ROW_1, COL_1, RAD_1, LEN_1, LEN_2, MovementImageToImage, ROW_1, COL_1, RAD_1, LEN_1, LEN_2)
      //gen_rectangle2 (Rectangle8, ROW_1, COL_1, RAD_1, LEN_1, LEN_2)
      //reduce_domain (ImageReduced, Rectangle8, ImageReduced1)
      //gray_features (Rectangle8, ImageReduced1, 'mean', Value)
      //standardGrayValue := 140.0
      //scaleFacotr := standardGrayValue / Value
      //scale_image (Image, Image, scaleFacotr, 0)

      hv_ROW1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW1_1 = 2684-hv_rowModel;
      }
      hv_COL1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL1_1 = 4804-hv_colModel;
      }
      hv_RAD1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD1_1 = (new HTuple(180)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 200;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 350;

      hv_ROW1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW1_2 = 4380-hv_rowModel;
      }
      hv_COL1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL1_2 = 4804-hv_colModel;
      }
      hv_RAD1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD1_2 = (new HTuple(180)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 200;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 350;

      hv_baseRightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightRow = 3400-hv_rowModel;
      }
      hv_baseRightColum.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightColum = 4804-hv_colModel;
      }
      hv_baseRightRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightRadian = (new HTuple(180)).TupleRad()
          ;
      }
      hv_baseRightLen1.Dispose();
      hv_baseRightLen1 = 150;
      hv_baseRightLen2.Dispose();
      hv_baseRightLen2 = 1000;


      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_baseRightRow, hv_baseRightColum, hv_baseRightRadian, hv_baseRightLen1, 
          hv_baseRightLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_baseRightRow.Dispose();
      hv_baseRightRow = ExpTmpOutVar_0;
      hv_baseRightColum.Dispose();
      hv_baseRightColum = ExpTmpOutVar_1;
      hv_baseRightRadian.Dispose();
      hv_baseRightRadian = ExpTmpOutVar_2;
      hv_baseRightLen1.Dispose();
      hv_baseRightLen1 = ExpTmpOutVar_3;
      hv_baseRightLen2.Dispose();
      hv_baseRightLen2 = ExpTmpOutVar_4;
      }
      ho_Rectangle1.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle1, hv_baseRightRow, hv_baseRightColum, 
          hv_baseRightRadian, hv_baseRightLen1, hv_baseRightLen2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("RightBase", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'positive', baseRightRow, baseRightColum, baseRightRadian, baseRightLen1, baseRightLen2, numSubRects, [threshValue,threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth10, longestOnly12, lineX1RightBase, lineY1RightBase, lineX2RightBase, lineY2RightBase, XsUsed, YsUsed, XsIgnored, YsIgnored)
      //FindLineAdaptiveSingle (Image, rect, lineRegion, lineContours, baseRightRow, baseRightColum, baseRightRadian, baseRightLen1, baseRightLen2, 10, 'positive', threshValue, sigma1, sigma21, 'first', widthRatio, ignoreFraction, newWidth1, cannyLow1, cannyHigh1, kernelWidth, longestOnly, XsUsed, Ys, lineX2, lineY2, XsUsed1, YsUsed1, XsIgnored1, YsIgnored1)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }


      //find top base line
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 162.42300000-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 3050-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 200;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 162.42300000-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 3694-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 100;

      hv_ROW_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_3 = 162.42300000-hv_rowModel;
      }
      hv_COL_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_3 = 4310-hv_colModel;
      }
      hv_RAD_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_3 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_3.Dispose();
      hv_LEN1_3 = 100;
      hv_LEN2_3.Dispose();
      hv_LEN2_3 = 100;

      hv_baseTopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopRow = 162.42300000-hv_rowModel;
      }
      hv_baseTopColumn.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopColumn = 3694-hv_colModel;
      }
      hv_baseTopRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopRadian = (new HTuple(-91)).TupleRad()
          ;
      }
      hv_baseTopLen1.Dispose();
      hv_baseTopLen1 = 100;
      hv_baseTopLen2.Dispose();
      hv_baseTopLen2 = 650;



      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_baseTopRow, hv_baseTopColumn, hv_baseTopRadian, hv_baseTopLen1, 
          hv_baseTopLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_baseTopRow.Dispose();
      hv_baseTopRow = ExpTmpOutVar_0;
      hv_baseTopColumn.Dispose();
      hv_baseTopColumn = ExpTmpOutVar_1;
      hv_baseTopRadian.Dispose();
      hv_baseTopRadian = ExpTmpOutVar_2;
      hv_baseTopLen1.Dispose();
      hv_baseTopLen1 = ExpTmpOutVar_3;
      hv_baseTopLen2.Dispose();
      hv_baseTopLen2 = ExpTmpOutVar_4;
      }
      ho_Rectangle.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle, hv_baseTopRow, hv_baseTopColumn, 
          hv_baseTopRadian, hv_baseTopLen1, hv_baseTopLen2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("TopBase", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'positive', baseTopRow, baseTopColumn, baseTopRadian, baseTopLen1, baseTopLen2, numSubRects, [threshValue,threshValue,threshValue], 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth11, longestOnly13, lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, XsUsed, YsUsed, XsIgnored, YsIgnored)
      //FindLineAdaptiveSingle (Image, rect, lineRegion, lineContours1, baseTopRow, baseTopColumn, baseTopRadian, baseTopLen1, baseTopLen2, 10, 'positive', threshValue, sigma1, sigma22, 'first', widthRatio1, ignoreFraction1, newWidth2, cannyLow2, cannyHigh2, kernelWidth1, longestOnly1, XsUsed, Ys1, lineX21, lineY21, XsUsed2, YsUsed2, XsIgnored2, YsIgnored2)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }



      //make origin
      //intersection_lines (lineY1RightBase, lineX1RightBase, lineY2RightBase, lineX2RightBase, lineY1TopBase, lineX1TopBase, lineY2TopBase, lineX2TopBase, rowOrigin, colOrigin, IsOverlapping)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colOrigin);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowOrigin);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      //rectify bases
      //get_perpendicular_line_that_passes (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colOrigin, rowOrigin, ptXOnPerpenducularDir, ptYOnPerpenducularDir)
      hv_lineX1RightBase.Dispose();
      hv_lineX1RightBase = new HTuple(hv_colOrigin);
      hv_lineY1RightBase.Dispose();
      hv_lineY1RightBase = new HTuple(hv_rowOrigin);
      hv_lineX2RightBase.Dispose();
      hv_lineX2RightBase = new HTuple(hv_ptXOnPerpenducularDir);
      hv_lineY2RightBase.Dispose();
      hv_lineY2RightBase = new HTuple(hv_ptYOnPerpenducularDir);


      //***************************************************FAI2***********************************
      //make vertical grids
      hv_FAI2_P1_LineStartX.Dispose();hv_FAI2_P1_LineStartY.Dispose();hv_FAI2_P1_LineEndX.Dispose();hv_FAI2_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI2_LEN_P1, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI2_P1_LineStartX, out hv_FAI2_P1_LineStartY, 
          out hv_FAI2_P1_LineEndX, out hv_FAI2_P1_LineEndY);
      hv_FAI2_P2_LineStartX.Dispose();hv_FAI2_P2_LineStartY.Dispose();hv_FAI2_P2_LineEndX.Dispose();hv_FAI2_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI2_LEN_P2, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI2_P2_LineStartX, out hv_FAI2_P2_LineStartY, 
          out hv_FAI2_P2_LineEndX, out hv_FAI2_P2_LineEndY);
      hv_FAI2_P3_LineStartX.Dispose();hv_FAI2_P3_LineStartY.Dispose();hv_FAI2_P3_LineEndX.Dispose();hv_FAI2_P3_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI2_LEN_P3, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI2_P3_LineStartX, out hv_FAI2_P3_LineStartY, 
          out hv_FAI2_P3_LineEndX, out hv_FAI2_P3_LineEndY);

      //make H line for FAI2

      hv_rectFAI2Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Row = 2145.39000000-hv_rowModel;
      }
      hv_rectFAI2Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Col = 3168.38000000-hv_colModel;
      }
      hv_rectFAI2Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Radian = (new HTuple(-91)).TupleRad()
          ;
      }
      hv_rectFAI2Len1.Dispose();
      hv_rectFAI2Len1 = 50.89500000;
      hv_rectFAI2Len2.Dispose();
      hv_rectFAI2Len2 = 200.18000000;

      hv_rectFAI2Row_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Row_RIGHT = 2160.39000000-hv_rowModel;
      }
      hv_rectFAI2Col_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Col_RIGHT = 4168.38000000-hv_colModel;
      }
      hv_rectFAI2Radian_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Radian_RIGHT = (new HTuple(-91)).TupleRad()
          ;
      }
      hv_rectFAI2Len1_RIGHT.Dispose();
      hv_rectFAI2Len1_RIGHT = 50.89500000;
      hv_rectFAI2Len2_RIGHT.Dispose();
      hv_rectFAI2Len2_RIGHT = 200.18000000;
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI2Row.Dispose();hv_rectFAI2Col.Dispose();hv_rectFAI2Radian.Dispose();hv_rectFAI2Len1.Dispose();hv_rectFAI2Len2.Dispose();
      AffineTransRect2(hv_rectFAI2Row.TupleConcat(hv_rectFAI2Row_RIGHT), hv_rectFAI2Col.TupleConcat(
          hv_rectFAI2Col_RIGHT), hv_rectFAI2Radian.TupleConcat(hv_rectFAI2Radian_RIGHT), 
          hv_rectFAI2Len1.TupleConcat(hv_rectFAI2Len1_RIGHT), hv_rectFAI2Len2.TupleConcat(
          hv_rectFAI2Len2_RIGHT), hv_MovementImageToImage, out hv_rectFAI2Row, out hv_rectFAI2Col, 
          out hv_rectFAI2Radian, out hv_rectFAI2Len1, out hv_rectFAI2Len2);
      }
      ho_Rectangle9.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle9, hv_rectFAI2Row, hv_rectFAI2Col, 
          hv_rectFAI2Radian, hv_rectFAI2Len1, hv_rectFAI2Len2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("2", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rectFAI2, lineRegion, 'negative', rectFAI2Row, rectFAI2Col, rectFAI2Radian, rectFAI2Len1, rectFAI2Len2, 10, [threshValue,threshValue], 'first', ignorePortion, 'false', sigma1, sigma2, 5120, 5120, newWidth, cannyHigh, cannyLow, kernelWidth12, longestOnly14, lineStartX_FAI2H, lineStartY_FAI2H, lineEndX_FAI2H, lineEndY_FAI2H, XsUsed, YsUsed, XsIgnored, YsIgnored)
      //VisionProStyleFindLineOneStep_Pairs (Image, rectFAI2, lineRegion, rectFAI2Row, rectFAI2Col, rectFAI2Radian, rectFAI2Len1, rectFAI2Len2, 'positive', 10, [threshValue,threshValue], sigma1, sigma2, 'first', 'false', ignorePortion, 'first', 1, 10, 5120, 5120, cannyHigh, cannyLow, 'false', newWidth, kernelWidth24, longestOnly10, XsUsed, YsUsed, XsIgnored, YsIgnored, lineStartX_FAI2H, lineStartY_FAI2H, lineEndX_FAI2H, lineEndY_FAI2H)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_rectFAI2.Dispose();ho_lineRegion.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();hv_lineStartX_FAI2H.Dispose();hv_lineStartY_FAI2H.Dispose();hv_lineEndX_FAI2H.Dispose();hv_lineEndY_FAI2H.Dispose();
      FindLineGradiant_Pair(ho_Image_COPY_INP_TMP, out ho_rectFAI2, out ho_lineRegion, 
          hv_rectFAI2Row, hv_rectFAI2Col, hv_rectFAI2Radian, hv_rectFAI2Len1, hv_rectFAI2Len2, 
          6, 0.2, "positive", hv_threshValue.TupleConcat(hv_threshValue), hv_sigma1, 
          "last", "first", 1, 10, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, 
          out hv_YsIgnored, out hv_lineStartX_FAI2H, out hv_lineStartY_FAI2H, out hv_lineEndX_FAI2H, 
          out hv_lineEndY_FAI2H);
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rectFAI2, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }


      //FAI2-P2
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping1.Dispose();
      HOperatorSet.IntersectionLines(hv_lineStartY_FAI2H, hv_lineStartX_FAI2H, hv_lineEndY_FAI2H, 
          hv_lineEndX_FAI2H, hv_FAI2_P2_LineStartY, hv_FAI2_P2_LineStartX, hv_FAI2_P2_LineEndY, 
          hv_FAI2_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping1);
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }



      //*********************************************FAI3************************************


      hv_rectFAI3Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Row = 2210.39000000-hv_rowModel;
      }
      hv_rectFAI3Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Col = 3168.38000000-hv_colModel;
      }
      hv_rectFAI3Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Radian = (new HTuple(-94)).TupleRad()
          ;
      }
      hv_rectFAI3Len1.Dispose();
      hv_rectFAI3Len1 = 40.89500000;
      hv_rectFAI3Len2.Dispose();
      hv_rectFAI3Len2 = 200.18000000;

      hv_rectFAI3Row_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Row_RIGHT = 2233.39000000-hv_rowModel;
      }
      hv_rectFAI3Col_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Col_RIGHT = 4168.38000000-hv_colModel;
      }
      hv_rectFAI3Radian_RIGHT.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Radian_RIGHT = (new HTuple(-93)).TupleRad()
          ;
      }
      hv_rectFAI3Len1_RIGHT.Dispose();
      hv_rectFAI3Len1_RIGHT = 40.89500000;
      hv_rectFAI3Len2_RIGHT.Dispose();
      hv_rectFAI3Len2_RIGHT = 200.18000000;
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI3Row.Dispose();hv_rectFAI3Col.Dispose();hv_rectFAI3Radian.Dispose();hv_rectFAI3Len1.Dispose();hv_rectFAI3Len2.Dispose();
      AffineTransRect2(hv_rectFAI3Row.TupleConcat(hv_rectFAI3Row_RIGHT), hv_rectFAI3Col.TupleConcat(
          hv_rectFAI3Col_RIGHT), hv_rectFAI3Radian.TupleConcat(hv_rectFAI3Radian_RIGHT), 
          hv_rectFAI3Len1.TupleConcat(hv_rectFAI3Len1_RIGHT), hv_rectFAI3Len2.TupleConcat(
          hv_rectFAI3Len2_RIGHT), hv_MovementImageToImage, out hv_rectFAI3Row, out hv_rectFAI3Col, 
          out hv_rectFAI3Radian, out hv_rectFAI3Len1, out hv_rectFAI3Len2);
      }

      ho_Rectangle7.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle7, hv_rectFAI3Row, hv_rectFAI3Col, 
          hv_rectFAI3Radian, hv_rectFAI3Len1, hv_rectFAI3Len2);
      //VisionProStyleFindLineOneStep (Image, rectFAI3, lineRegion, 'positive', rectFAI3Row, rectFAI3Col, rectFAI3Radian, rectFAI3Len1, rectFAI3Len2, 10, [FAI3Threshold,FAI3Threshold], 'first', 0.2, 'false', 1, 1, 5120, 5120, 5, 15, 5, kernelWidth13, longestOnly15, lineX1FAI3, lineY1FAI3, lineX2FAI3, lineY2FAI3, XsUsed, YsUsed, XsIgnored, YsIgnored)
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("3", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //FindLineAdaptiveSingle (Image, rectFAI3, lineRegion, lineContours2, rectFAI3Row, rectFAI3Col, rectFAI3Radian, rectFAI3Len1, rectFAI3Len2, 5, 'negative', [threshValue,threshValue], sigma1, sigma23, 'first', widthRatio2, ignoreFraction2, newWidth3, cannyLow3, cannyHigh3, kernelWidth2, longestOnly2, XsUsed, Ys2, lineX22, lineY22, XsUsed3, YsUsed3, XsIgnored3, YsIgnored3)

      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rectFAI3, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate base right
      hv_FAI3_P1_LineStartX.Dispose();hv_FAI3_P1_LineStartY.Dispose();hv_FAI3_P1_LineEndX.Dispose();hv_FAI3_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI3_LEN_P1, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI3_P1_LineStartX, out hv_FAI3_P1_LineStartY, 
          out hv_FAI3_P1_LineEndX, out hv_FAI3_P1_LineEndY);
      hv_FAI3_P2_LineStartX.Dispose();hv_FAI3_P2_LineStartY.Dispose();hv_FAI3_P2_LineEndX.Dispose();hv_FAI3_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI3_LEN_P2, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI3_P2_LineStartX, out hv_FAI3_P2_LineStartY, 
          out hv_FAI3_P2_LineEndX, out hv_FAI3_P2_LineEndY);
      hv_FAI3_P3_LineStartX.Dispose();hv_FAI3_P3_LineStartY.Dispose();hv_FAI3_P3_LineEndX.Dispose();hv_FAI3_P3_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI3_LEN_P3, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI3_P3_LineStartX, out hv_FAI3_P3_LineStartY, 
          out hv_FAI3_P3_LineEndX, out hv_FAI3_P3_LineEndY);


      //P2
      //intersection_lines (lineY1FAI3, lineX1FAI3, lineY2FAI3, lineX2FAI3, FAI3_P2_LineStartY, FAI3_P2_LineStartX, FAI3_P2_LineEndY, FAI3_P2_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //**********************************************FAI4*******************************
      hv_rectFAI4Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI4Row = 4682.30000000-hv_rowModel;
      }
      hv_rectFAI4Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI4Col = 3567.21000000-hv_colModel;
      }
      hv_rectFAI4Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI4Radian = (new HTuple(85)).TupleRad()
          ;
      }
      hv_rectFAI4Len1.Dispose();
      hv_rectFAI4Len1 = 70.89900000;
      hv_rectFAI4Len2.Dispose();
      hv_rectFAI4Len2 = 800;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI4Row, hv_rectFAI4Col, hv_rectFAI4Radian, hv_rectFAI4Len1, 
          hv_rectFAI4Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI4Row.Dispose();
      hv_rectFAI4Row = ExpTmpOutVar_0;
      hv_rectFAI4Col.Dispose();
      hv_rectFAI4Col = ExpTmpOutVar_1;
      hv_rectFAI4Radian.Dispose();
      hv_rectFAI4Radian = ExpTmpOutVar_2;
      hv_rectFAI4Len1.Dispose();
      hv_rectFAI4Len1 = ExpTmpOutVar_3;
      hv_rectFAI4Len2.Dispose();
      hv_rectFAI4Len2 = ExpTmpOutVar_4;
      }
      ho_Rectangle6.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle6, hv_rectFAI4Row, hv_rectFAI4Col, 
          hv_rectFAI4Radian, hv_rectFAI4Len1, hv_rectFAI4Len2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("4", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rectFAI4, lineRegion, 'negative', rectFAI4Row, rectFAI4Col, rectFAI4Radian, rectFAI4Len1, rectFAI4Len2, 6, threshValue, 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth14, longestOnly16, lineX1FAI4, lineY1FAI4, lineX2FAI4, lineY2FAI4, XsUsed, YsUsed, XsIgnored, YsIgnored)
      //FindLineAdaptiveSingle (Image, rectFAI4, lineRegion, lineContours3, rectFAI4Row, rectFAI4Col, rectFAI4Radian, rectFAI4Len1, rectFAI4Len2, 10, 'negative', threshValue, sigma1, sigma24, 'first', widthRatio3, ignoreFraction3, newWidth4, cannyLow4, cannyHigh4, kernelWidth3, longestOnly3, XsUsed, Ys3, lineX23, lineY23, XsUsed4, YsUsed4, XsIgnored4, YsIgnored4)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rectFAI4, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //P1
      //intersection_lines (lineY1FAI4, lineX1FAI4, lineY2FAI4, lineX2FAI4, FAI3_P1_LineStartY, FAI3_P1_LineStartX, FAI3_P1_LineEndY, FAI3_P1_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      //intersection_lines (lineY1FAI4, lineX1FAI4, lineY2FAI4, lineX2FAI4, FAI3_P2_LineStartY, FAI3_P2_LineStartX, FAI3_P2_LineEndY, FAI3_P2_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P3
      //intersection_lines (lineY1FAI4, lineX1FAI4, lineY2FAI4, lineX2FAI4, FAI3_P3_LineStartY, FAI3_P3_LineStartX, FAI3_P3_LineEndY, FAI3_P3_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //************************************FAI 5***************************************
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 4850-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 2800-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 200;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 4850-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 3650-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 150;

      hv_ROW_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_3 = 4890-hv_rowModel;
      }
      hv_COL_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_3 = 4470-hv_colModel;
      }
      hv_RAD_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_3 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_3.Dispose();
      hv_LEN1_3 = 100;
      hv_LEN2_3.Dispose();
      hv_LEN2_3 = 200;


      hv_rectFAI5Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI5Row = 4850-hv_rowModel;
      }
      hv_rectFAI5Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI5Col = 3600-hv_colModel;
      }
      hv_rectFAI5Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI5Radian = (new HTuple(-94)).TupleRad()
          ;
      }
      hv_rectFAI5Len1.Dispose();
      hv_rectFAI5Len1 = 100;
      hv_rectFAI5Len2.Dispose();
      hv_rectFAI5Len2 = 1000;

      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI5Row, hv_rectFAI5Col, hv_rectFAI5Radian, hv_rectFAI5Len1, 
          hv_rectFAI5Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI5Row.Dispose();
      hv_rectFAI5Row = ExpTmpOutVar_0;
      hv_rectFAI5Col.Dispose();
      hv_rectFAI5Col = ExpTmpOutVar_1;
      hv_rectFAI5Radian.Dispose();
      hv_rectFAI5Radian = ExpTmpOutVar_2;
      hv_rectFAI5Len1.Dispose();
      hv_rectFAI5Len1 = ExpTmpOutVar_3;
      hv_rectFAI5Len2.Dispose();
      hv_rectFAI5Len2 = ExpTmpOutVar_4;
      }
      ho_Rectangle2.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle2, hv_rectFAI5Row, hv_rectFAI5Col, 
          hv_rectFAI5Radian, hv_rectFAI5Len1, hv_rectFAI5Len2);

      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("5", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', rectFAI5Row, rectFAI5Col, rectFAI5Radian, rectFAI5Len1, rectFAI5Len2, 6, [threshValue,threshValue,threshValue], 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth15, longestOnly17, lineX1FAI5, lineY1FAI5, lineX2FAI5, lineY2FAI5, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //P1
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI5, hv_lineX1FAI5, hv_lineY2FAI5, 
          hv_lineX2FAI5, hv_FAI3_P1_LineStartY, hv_FAI3_P1_LineStartX, hv_FAI3_P1_LineEndY, 
          hv_FAI3_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI5, hv_lineX1FAI5, hv_lineY2FAI5, 
          hv_lineX2FAI5, hv_FAI3_P2_LineStartY, hv_FAI3_P2_LineStartX, hv_FAI3_P2_LineEndY, 
          hv_FAI3_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P3
      hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1FAI5, hv_lineX1FAI5, hv_lineY2FAI5, 
          hv_lineX2FAI5, hv_FAI3_P3_LineStartY, hv_FAI3_P3_LineStartX, hv_FAI3_P3_LineEndY, 
          hv_FAI3_P3_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }



      //************************************FAI 6******************************************
      hv_rectFAI6Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI6Row = 2983.82000000-hv_rowModel;
      }
      hv_rectFAI6Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI6Col = 1710.50000000-hv_colModel;
      }
      hv_rectFAI6Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI6Radian = (new HTuple(88)).TupleRad()
          ;
      }
      hv_rectFAI6Len1.Dispose();
      hv_rectFAI6Len1 = 101.93600000;
      hv_rectFAI6Len2.Dispose();
      hv_rectFAI6Len2 = 300.58900000;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI6Row, hv_rectFAI6Col, hv_rectFAI6Radian, hv_rectFAI6Len1, 
          hv_rectFAI6Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI6Row.Dispose();
      hv_rectFAI6Row = ExpTmpOutVar_0;
      hv_rectFAI6Col.Dispose();
      hv_rectFAI6Col = ExpTmpOutVar_1;
      hv_rectFAI6Radian.Dispose();
      hv_rectFAI6Radian = ExpTmpOutVar_2;
      hv_rectFAI6Len1.Dispose();
      hv_rectFAI6Len1 = ExpTmpOutVar_3;
      hv_rectFAI6Len2.Dispose();
      hv_rectFAI6Len2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("6", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'positive', rectFAI6Row, rectFAI6Col, rectFAI6Radian, rectFAI6Len1, rectFAI6Len2, numSubRects, threshValue, 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth16, longestOnly18, lineX1FAI6, lineY1FAI6, lineX2FAI6, lineY2FAI6, XsUsed, YsUsed, XsIgnored, YsIgnored)
      //FindLineAdaptiveSingle (Image, rect, lineRegion, lineContours4, rectFAI6Row, rectFAI6Col, rectFAI6Radian, rectFAI6Len1, rectFAI6Len2, 10, 'positive', threshValue, sigma1, sigma25, 'first', widthRatio4, ignoreFraction4, newWidth5, cannyLow5, cannyHigh5, kernelWidth4, longestOnly4, XsUsed, Ys4, lineX24, lineY24, XsUsed5, YsUsed5, XsIgnored5, YsIgnored5)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate base right
      hv_FAI6_P1_LineStartX.Dispose();hv_FAI6_P1_LineStartY.Dispose();hv_FAI6_P1_LineEndX.Dispose();hv_FAI6_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI6_LEN_P1, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI6_P1_LineStartX, out hv_FAI6_P1_LineStartY, 
          out hv_FAI6_P1_LineEndX, out hv_FAI6_P1_LineEndY);
      hv_FAI6_P2_LineStartX.Dispose();hv_FAI6_P2_LineStartY.Dispose();hv_FAI6_P2_LineEndX.Dispose();hv_FAI6_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI6_LEN_P2, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI6_P2_LineStartX, out hv_FAI6_P2_LineStartY, 
          out hv_FAI6_P2_LineEndX, out hv_FAI6_P2_LineEndY);
      hv_FAI6_P3_LineStartX.Dispose();hv_FAI6_P3_LineStartY.Dispose();hv_FAI6_P3_LineEndX.Dispose();hv_FAI6_P3_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI6_LEN_P3, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI6_P3_LineStartX, out hv_FAI6_P3_LineStartY, 
          out hv_FAI6_P3_LineEndX, out hv_FAI6_P3_LineEndY);

      //P1
      //intersection_lines (lineY1FAI6, lineX1FAI6, lineY2FAI6, lineX2FAI6, FAI6_P1_LineStartY, FAI6_P1_LineStartX, FAI6_P1_LineEndY, FAI6_P1_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      //intersection_lines (lineY1FAI6, lineX1FAI6, lineY2FAI6, lineX2FAI6, FAI6_P2_LineStartY, FAI6_P2_LineStartX, FAI6_P2_LineEndY, FAI6_P2_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P3
      //intersection_lines (lineY1FAI6, lineX1FAI6, lineY2FAI6, lineX2FAI6, FAI6_P3_LineStartY, FAI6_P3_LineStartX, FAI6_P3_LineEndY, FAI6_P3_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //************************************FAI9********************************************
      hv_rectFAI9Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI9Row = 1584.57000000-hv_rowModel;
      }
      hv_rectFAI9Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI9Col = 1744.61000000-hv_colModel;
      }
      hv_rectFAI9Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI9Radian = (new HTuple(-90)).TupleRad()
          ;
      }
      hv_rectFAI9Len1.Dispose();
      hv_rectFAI9Len1 = 97.95910000;
      hv_rectFAI9Len2.Dispose();
      hv_rectFAI9Len2 = 275.13700000;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI9Row, hv_rectFAI9Col, hv_rectFAI9Radian, hv_rectFAI9Len1, 
          hv_rectFAI9Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI9Row.Dispose();
      hv_rectFAI9Row = ExpTmpOutVar_0;
      hv_rectFAI9Col.Dispose();
      hv_rectFAI9Col = ExpTmpOutVar_1;
      hv_rectFAI9Radian.Dispose();
      hv_rectFAI9Radian = ExpTmpOutVar_2;
      hv_rectFAI9Len1.Dispose();
      hv_rectFAI9Len1 = ExpTmpOutVar_3;
      hv_rectFAI9Len2.Dispose();
      hv_rectFAI9Len2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("9", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'positive', rectFAI9Row, rectFAI9Col, rectFAI9Radian, rectFAI9Len1, rectFAI9Len2, numSubRects, threshValue, 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth17, longestOnly19, lineX1FAI9, lineY1FAI9, lineX2FAI9, lineY2FAI9, XsUsed, YsUsed, XsIgnored, YsIgnored)
      //FindLineAdaptiveSingle (Image, rect, lineRegion, lineContours5, rectFAI9Row, rectFAI9Col, rectFAI9Radian, rectFAI9Len1, rectFAI9Len2, 10, 'positive', threshValue, sigma1, sigma26, 'first', widthRatio5, ignoreFraction5, newWidth6, cannyLow6, cannyHigh6, kernelWidth5, longestOnly5, XsUsed, Ys5, lineX25, lineY25, XsUsed6, YsUsed6, XsIgnored6, YsIgnored6)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate base right
      hv_FAI9_P1_LineStartX.Dispose();hv_FAI9_P1_LineStartY.Dispose();hv_FAI9_P1_LineEndX.Dispose();hv_FAI9_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI9_LEN_P1, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI9_P1_LineStartX, out hv_FAI9_P1_LineStartY, 
          out hv_FAI9_P1_LineEndX, out hv_FAI9_P1_LineEndY);
      hv_FAI9_P2_LineStartX.Dispose();hv_FAI9_P2_LineStartY.Dispose();hv_FAI9_P2_LineEndX.Dispose();hv_FAI9_P2_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI9_LEN_P2, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI9_P2_LineStartX, out hv_FAI9_P2_LineStartY, 
          out hv_FAI9_P2_LineEndX, out hv_FAI9_P2_LineEndY);
      hv_FAI9_P3_LineStartX.Dispose();hv_FAI9_P3_LineStartY.Dispose();hv_FAI9_P3_LineEndX.Dispose();hv_FAI9_P3_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI9_LEN_P3, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI9_P3_LineStartX, out hv_FAI9_P3_LineStartY, 
          out hv_FAI9_P3_LineEndX, out hv_FAI9_P3_LineEndY);

      //P1
      //intersection_lines (lineY1FAI9, lineX1FAI9, lineY2FAI9, lineX2FAI9, FAI9_P1_LineStartY, FAI9_P1_LineStartX, FAI9_P1_LineEndY, FAI9_P1_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      //intersection_lines (lineY1FAI9, lineX1FAI9, lineY2FAI9, lineX2FAI9, FAI9_P2_LineStartY, FAI9_P2_LineStartX, FAI9_P2_LineEndY, FAI9_P2_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P3
      //intersection_lines (lineY1FAI9, lineX1FAI9, lineY2FAI9, lineX2FAI9, FAI9_P3_LineStartY, FAI9_P3_LineStartX, FAI9_P3_LineEndY, FAI9_P3_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      //DistancePLInWorld (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colIntersect, rowIntersect, MapToWorld, distanceWorld, distancePixel)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //*****************************FAI12**************************
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 3240-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 2420-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 100;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 3886-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 2400-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 100;

      hv_ROW_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_3 = 4500-hv_rowModel;
      }
      hv_COL_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_3 = 2400-hv_colModel;
      }
      hv_RAD_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_3 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_3.Dispose();
      hv_LEN1_3 = 100;
      hv_LEN2_3.Dispose();
      hv_LEN2_3 = 200;



      hv_rectFAI12Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI12Row = 3836-hv_rowModel;
      }
      hv_rectFAI12Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI12Col = 2400-hv_colModel;
      }
      hv_rectFAI12Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI12Radian = (new HTuple(0)).TupleRad()
          ;
      }
      hv_rectFAI12Len1.Dispose();
      hv_rectFAI12Len1 = 150;
      hv_rectFAI12Len2.Dispose();
      hv_rectFAI12Len2 = 600;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI12Row, hv_rectFAI12Col, hv_rectFAI12Radian, hv_rectFAI12Len1, 
          hv_rectFAI12Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI12Row.Dispose();
      hv_rectFAI12Row = ExpTmpOutVar_0;
      hv_rectFAI12Col.Dispose();
      hv_rectFAI12Col = ExpTmpOutVar_1;
      hv_rectFAI12Radian.Dispose();
      hv_rectFAI12Radian = ExpTmpOutVar_2;
      hv_rectFAI12Len1.Dispose();
      hv_rectFAI12Len1 = ExpTmpOutVar_3;
      hv_rectFAI12Len2.Dispose();
      hv_rectFAI12Len2 = ExpTmpOutVar_4;
      }

      ho_Rectangle.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle, hv_rectFAI12Row, hv_rectFAI12Col, 
          hv_rectFAI12Radian, hv_rectFAI12Len1, hv_rectFAI12Len2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("12", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'positive', rectFAI12Row, rectFAI12Col, rectFAI12Radian, rectFAI12Len1, rectFAI12Len2, numSubRects, [threshValue,threshValue,threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth18, longestOnly20, lineX1FAI12, lineY1FAI12, lineX2FAI12, lineY2FAI12, XsUsed, YsUsed, XsIgnored, YsIgnored)
      //FindLineAdaptiveSingle (Image, rect, lineRegion, lineContours6, rectFAI12Row, rectFAI12Col, rectFAI12Radian, rectFAI12Len1, rectFAI12Len2, 10, 'positive', threshValue, sigma1, sigma27, 'first', widthRatio6, ignoreFraction6, newWidth7, cannyLow7, cannyHigh7, kernelWidth6, longestOnly6, XsUsed, Ys6, lineX26, lineY26, XsUsed7, YsUsed7, XsIgnored7, YsIgnored7)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate TOP right
      //TranslateLineInWorldCoordinateAndConvertBack (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, FAI12_LEN_P1, MapToWorld, MapToImage, 'false', FAI12_P1_LineStartX, FAI12_P1_LineStartY, FAI12_P1_LineEndX, FAI12_P1_LineEndY)
      //TranslateLineInWorldCoordinateAndConvertBack (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, FAI12_LEN_P2, MapToWorld, MapToImage, 'false', FAI12_P2_LineStartX, FAI12_P2_LineStartY, FAI12_P2_LineEndX, FAI12_P2_LineEndY)

      //P1
      //intersection_lines (lineY1FAI12, lineX1FAI12, lineY2FAI12, lineX2FAI12, FAI12_P1_LineStartY, FAI12_P1_LineStartX, FAI12_P1_LineEndY, FAI12_P1_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      //***************
      ho_lineRegion1.Dispose();
      GenLineRegion(out ho_lineRegion1, hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, 5120, 5120);
      ho_Cross.Dispose();
      HOperatorSet.GenCrossContourXld(out ho_Cross, hv_rowIntersect, hv_colIntersect, 
          300, hv_Angle);
      //**************
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      //intersection_lines (lineY1FAI12, lineX1FAI12, lineY2FAI12, lineX2FAI12, FAI12_P2_LineStartY, FAI12_P2_LineStartX, FAI12_P2_LineEndY, FAI12_P2_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //********************************FAI16*************************
      hv_rectFAI16Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI16Row = 2246.47000000-hv_rowModel;
      }
      hv_rectFAI16Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI16Col = 992.65500000-hv_colModel;
      }
      hv_rectFAI16Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI16Radian = (new HTuple(-0.5)).TupleRad()
          ;
      }
      hv_rectFAI16Len1.Dispose();
      hv_rectFAI16Len1 = 125.95600000;
      hv_rectFAI16Len2.Dispose();
      hv_rectFAI16Len2 = 470.84500000;

      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI16Row, hv_rectFAI16Col, hv_rectFAI16Radian, hv_rectFAI16Len1, 
          hv_rectFAI16Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI16Row.Dispose();
      hv_rectFAI16Row = ExpTmpOutVar_0;
      hv_rectFAI16Col.Dispose();
      hv_rectFAI16Col = ExpTmpOutVar_1;
      hv_rectFAI16Radian.Dispose();
      hv_rectFAI16Radian = ExpTmpOutVar_2;
      hv_rectFAI16Len1.Dispose();
      hv_rectFAI16Len1 = ExpTmpOutVar_3;
      hv_rectFAI16Len2.Dispose();
      hv_rectFAI16Len2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("16", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'positive', rectFAI16Row, rectFAI16Col, rectFAI16Radian, rectFAI16Len1, rectFAI16Len2, 6, threshValue, 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth19, longestOnly21, lineX1FAI16, lineY1FAI16, lineX2FAI16, lineY2FAI16, XsUsed, YsUsed, XsIgnored, YsIgnored)
      //FindLineAdaptiveSingle (Image, rect, lineRegion, lineContours7, rectFAI16Row, rectFAI16Col, rectFAI16Radian, rectFAI16Len1, rectFAI16Len2, 20, 'positive', threshValue, sigma1, sigma28, 'first', widthRatio7, ignoreFraction7, newWidth8, cannyLow8, cannyHigh8, kernelWidth7, longestOnly7, XsUsed, Ys7, lineX27, lineY27, XsUsed8, YsUsed8, XsIgnored8, YsIgnored8)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate base top
      //TranslateLineInWorldCoordinateAndConvertBack (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, FAI16_LEN_P1, MapToWorld, MapToImage, 'false', FAI16_P1_LineStartX, FAI16_P1_LineStartY, FAI16_P1_LineEndX, FAI16_P1_LineEndY)
      //TranslateLineInWorldCoordinateAndConvertBack (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, FAI16_LEN_P2, MapToWorld, MapToImage, 'false', FAI16_P2_LineStartX, FAI16_P2_LineStartY, FAI16_P2_LineEndX, FAI16_P2_LineEndY)

      //P1
      //intersection_lines (lineY1FAI16, lineX1FAI16, lineY2FAI16, lineX2FAI16, FAI16_P1_LineStartY, FAI16_P1_LineStartX, FAI16_P1_LineEndY, FAI16_P1_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      //intersection_lines (lineY1FAI16, lineX1FAI16, lineY2FAI16, lineX2FAI16, FAI16_P2_LineStartY, FAI16_P2_LineStartX, FAI16_P2_LineEndY, FAI16_P2_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }


      //*************************FAI17*******************************
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 466-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 2700-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 100;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 868-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 2670-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 100;

      hv_ROW_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_3 = 1266-hv_rowModel;
      }
      hv_COL_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_3 = 2670-hv_colModel;
      }
      hv_RAD_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_3 = (new HTuple(-1)).TupleRad()
          ;
      }
      hv_LEN1_3.Dispose();
      hv_LEN1_3 = 100;
      hv_LEN2_3.Dispose();
      hv_LEN2_3 = 100;



      hv_rectFAI17Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI17Row = 1108-hv_rowModel;
      }
      hv_rectFAI17Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI17Col = 2670-hv_colModel;
      }
      hv_rectFAI17Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI17Radian = (new HTuple(0)).TupleRad()
          ;
      }
      hv_rectFAI17Len1.Dispose();
      hv_rectFAI17Len1 = 100;
      hv_rectFAI17Len2.Dispose();
      hv_rectFAI17Len2 = 300;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI17Row, hv_rectFAI17Col, hv_rectFAI17Radian, hv_rectFAI17Len1, 
          hv_rectFAI17Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI17Row.Dispose();
      hv_rectFAI17Row = ExpTmpOutVar_0;
      hv_rectFAI17Col.Dispose();
      hv_rectFAI17Col = ExpTmpOutVar_1;
      hv_rectFAI17Radian.Dispose();
      hv_rectFAI17Radian = ExpTmpOutVar_2;
      hv_rectFAI17Len1.Dispose();
      hv_rectFAI17Len1 = ExpTmpOutVar_3;
      hv_rectFAI17Len2.Dispose();
      hv_rectFAI17Len2 = ExpTmpOutVar_4;
      }
      ho_Rectangle.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle, hv_rectFAI17Row, hv_rectFAI17Col, 
          hv_rectFAI17Radian, hv_rectFAI17Len1, hv_rectFAI17Len2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("17", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'positive', rectFAI17Row, rectFAI17Col, rectFAI17Radian, rectFAI17Len1, rectFAI17Len2, numSubRects, [threshValue, threshValue, threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth20, longestOnly22, lineX1FAI17, lineY1FAI17, lineX2FAI17, lineY2FAI17, XsUsed, YsUsed, XsIgnored, YsIgnored)
      //FindLineAdaptiveSingle (Image, rect, lineRegion, lineContours8, rectFAI17Row, rectFAI17Col, rectFAI17Radian, rectFAI17Len1, rectFAI17Len2, 30, 'positive', threshValue, sigma1, sigma29, 'first', widthRatio8, ignoreFraction8, newWidth9, cannyLow9, cannyHigh9, kernelWidth8, longestOnly8, XsUsed, Ys8, lineX28, lineY28, XsUsed9, YsUsed9, XsIgnored9, YsIgnored9)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate top base
      //TranslateLineInWorldCoordinateAndConvertBack (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, FAI17_LEN_P1, MapToWorld, MapToImage, 'false', FAI17_P1_LineStartX, FAI17_P1_LineStartY, FAI17_P1_LineEndX, FAI17_P1_LineEndY)
      //TranslateLineInWorldCoordinateAndConvertBack (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, FAI17_LEN_P2, MapToWorld, MapToImage, 'false', FAI17_P2_LineStartX, FAI17_P2_LineStartY, FAI17_P2_LineEndX, FAI17_P2_LineEndY)

      //P1
      //intersection_lines (lineY1FAI17, lineX1FAI17, lineY2FAI17, lineX2FAI17, FAI17_P1_LineStartY, FAI17_P1_LineStartX, FAI17_P1_LineEndY, FAI17_P1_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      //intersection_lines (lineY1FAI17, lineX1FAI17, lineY2FAI17, lineX2FAI17, FAI17_P2_LineStartY, FAI17_P2_LineStartX, FAI17_P2_LineEndY, FAI17_P2_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }


      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }





      //*******************************FAI19**************************
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 887-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 4665-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(179.5)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 350;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 1806-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 4665-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(179)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 140;

      hv_rectFAI19Row.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI19Row = 1137-hv_rowModel;
      }
      hv_rectFAI19Col.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI19Col = 4665-hv_colModel;
      }
      hv_rectFAI19Radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI19Radian = (new HTuple(180)).TupleRad()
          ;
      }
      hv_rectFAI19Len1.Dispose();
      hv_rectFAI19Len1 = 100;
      hv_rectFAI19Len2.Dispose();
      hv_rectFAI19Len2 = 700;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI19Row, hv_rectFAI19Col, hv_rectFAI19Radian, hv_rectFAI19Len1, 
          hv_rectFAI19Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI19Row.Dispose();
      hv_rectFAI19Row = ExpTmpOutVar_0;
      hv_rectFAI19Col.Dispose();
      hv_rectFAI19Col = ExpTmpOutVar_1;
      hv_rectFAI19Radian.Dispose();
      hv_rectFAI19Radian = ExpTmpOutVar_2;
      hv_rectFAI19Len1.Dispose();
      hv_rectFAI19Len1 = ExpTmpOutVar_3;
      hv_rectFAI19Len2.Dispose();
      hv_rectFAI19Len2 = ExpTmpOutVar_4;
      }
      ho_Rectangle.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle, hv_rectFAI19Row, hv_rectFAI19Col, 
          hv_rectFAI19Radian, hv_rectFAI19Len1, hv_rectFAI19Len2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("19", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'positive', rectFAI19Row, rectFAI19Col, rectFAI19Radian, rectFAI19Len1, rectFAI19Len2, 6, [threshValue,threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth21, longestOnly23, lineX1FAI19, lineY1FAI19, lineX2FAI19, lineY2FAI19, XsUsed, YsUsed, XsIgnored, YsIgnored)
      //FindLineAdaptiveSingle (Image, rect, lineRegion, lineContours9, rectFAI19Row, rectFAI19Col, rectFAI19Radian, rectFAI19Len1, rectFAI19Len2, 6, 'positive', threshValue, sigma1, sigma210, 'first', widthRatio9, ignoreFraction9, newWidth10, cannyLow10, cannyHigh10, kernelWidth9, longestOnly9, XsUsed, Ys9, lineX29, lineY29, XsUsed10, YsUsed10, XsIgnored10, YsIgnored10)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //translate top base
      //TranslateLineInWorldCoordinateAndConvertBack (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, FAI19_LEN_P1, MapToWorld, MapToImage, 'false', FAI19_P1_LineStartX, FAI19_P1_LineStartY, FAI19_P1_LineEndX, FAI19_P1_LineEndY)
      //TranslateLineInWorldCoordinateAndConvertBack (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, FAI19_LEN_P2, MapToWorld, MapToImage, 'false', FAI19_P2_LineStartX, FAI19_P2_LineStartY, FAI19_P2_LineEndX, FAI19_P2_LineEndY)

      //P1
      //intersection_lines (lineY1FAI19, lineX1FAI19, lineY2FAI19, lineX2FAI19, FAI19_P1_LineStartY, FAI19_P1_LineStartX, FAI19_P1_LineEndY, FAI19_P1_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //P2
      //intersection_lines (lineY1FAI19, lineX1FAI19, lineY2FAI19, lineX2FAI19, FAI19_P2_LineStartY, FAI19_P2_LineStartX, FAI19_P2_LineEndY, FAI19_P2_LineEndX, rowIntersect, colIntersect, IsOverlapping2)
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_MapToWorld, out hv_distanceWorld, 
          out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colIntersect);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowIntersect);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }




      //****************************FAI20********************************
      //定圆心
      //TranslateLineInWorldCoordinateAndConvertBack (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, FAI20_LEN_Y, MapToWorld, MapToImage, 'false', FAI20_P2_LineStartX, FAI20_P2_LineStartY, FAI20_P2_LineEndX, FAI20_P2_LineEndY)
      hv_FAI20V_P1_LineStartX.Dispose();hv_FAI20V_P1_LineStartY.Dispose();hv_FAI20V_P1_LineEndX.Dispose();hv_FAI20V_P1_LineEndY.Dispose();
      TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
          hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI20_LEN_X, hv_MapToWorld, 
          hv_MapToImage, "true", out hv_FAI20V_P1_LineStartX, out hv_FAI20V_P1_LineStartY, 
          out hv_FAI20V_P1_LineEndX, out hv_FAI20V_P1_LineEndY);
      hv_rowCenterTop.Dispose();hv_colCenterTop.Dispose();hv_IsOverlapping2.Dispose();
      HOperatorSet.IntersectionLines(hv_FAI20_P2_LineStartY, hv_FAI20_P2_LineStartX, 
          hv_FAI20_P2_LineEndY, hv_FAI20_P2_LineEndX, hv_FAI20V_P1_LineStartY, hv_FAI20V_P1_LineStartX, 
          hv_FAI20V_P1_LineEndY, hv_FAI20V_P1_LineEndX, out hv_rowCenterTop, out hv_colCenterTop, 
          out hv_IsOverlapping2);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_colCenterTop);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_rowCenterTop);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      hv_rectFAI20TRRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20TRRow = 298.18300000-hv_rowModel;
      }
      hv_rectFAI20TRCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20TRCol = 4577.96000000-hv_colModel;
      }
      hv_rectFAI20TRRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20TRRadian = (new HTuple(-150.84800000)).TupleRad()
          ;
      }
      hv_rectFAI20TRLen1.Dispose();
      hv_rectFAI20TRLen1 = 40.64630000;
      hv_rectFAI20TRLen2.Dispose();
      hv_rectFAI20TRLen2 = 65.46210000;

      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI20TRRow, hv_rectFAI20TRCol, hv_rectFAI20TRRadian, 
          hv_rectFAI20TRLen1, hv_rectFAI20TRLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, 
          out ExpTmpOutVar_1, out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI20TRRow.Dispose();
      hv_rectFAI20TRRow = ExpTmpOutVar_0;
      hv_rectFAI20TRCol.Dispose();
      hv_rectFAI20TRCol = ExpTmpOutVar_1;
      hv_rectFAI20TRRadian.Dispose();
      hv_rectFAI20TRRadian = ExpTmpOutVar_2;
      hv_rectFAI20TRLen1.Dispose();
      hv_rectFAI20TRLen1 = ExpTmpOutVar_3;
      hv_rectFAI20TRLen2.Dispose();
      hv_rectFAI20TRLen2 = ExpTmpOutVar_4;
      }
      ho_Rectangle5.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle5, hv_rectFAI20TRRow, hv_rectFAI20TRCol, 
          hv_rectFAI20TRRadian, hv_rectFAI20TRLen1, hv_rectFAI20TRLen2);
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("20-topRight", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep_Pairs (Image, rect, lineRegion, rectFAI20TRRow, rectFAI20TRCol, rectFAI20TRRadian, rectFAI20TRLen1, rectFAI20TRLen2, 'negative', 6, threshValue, sigma1, sigma2, 'first', 'false', ignorePortion, 'first', 10, 50, 5120, 5120, cannyHigh, cannyLow, 'true', newWidth, kernelWidth25, longestOnly11, XsUsed, YsUsed, XsIgnored, YsIgnored, lineX1FAI20TR, lineY1FAI20TR, lineX2FAI20TR, lineY2FAI20TR)

      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'positive', rectFAI20TRRow, rectFAI20TRCol, rectFAI20TRRadian, rectFAI20TRLen1, rectFAI20TRLen2, 5, FAI20Threshold_up, 'first', 0.3, 'false', 3, sigma2, Width, Height, newWidth, 30, 15, kernelWidth22, longestOnly24, lineX1FAI20TR, lineY1FAI20TR, lineX2FAI20TR, lineY2FAI20TR, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      hv_rectFAI20BLRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20BLRow = 2078.83000000-hv_rowModel;
      }
      hv_rectFAI20BLCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20BLCol = 2775.07000000-hv_colModel;
      }
      hv_rectFAI20BLRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectFAI20BLRadian = (new HTuple(45)).TupleRad()
          ;
      }
      hv_rectFAI20BLLen1.Dispose();
      hv_rectFAI20BLLen1 = 80.07090000;
      hv_rectFAI20BLLen2.Dispose();
      hv_rectFAI20BLLen2 = 80.95030000;
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_rectFAI20BLRow, hv_rectFAI20BLCol, hv_rectFAI20BLRadian, 
          hv_rectFAI20BLLen1, hv_rectFAI20BLLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, 
          out ExpTmpOutVar_1, out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_rectFAI20BLRow.Dispose();
      hv_rectFAI20BLRow = ExpTmpOutVar_0;
      hv_rectFAI20BLCol.Dispose();
      hv_rectFAI20BLCol = ExpTmpOutVar_1;
      hv_rectFAI20BLRadian.Dispose();
      hv_rectFAI20BLRadian = ExpTmpOutVar_2;
      hv_rectFAI20BLLen1.Dispose();
      hv_rectFAI20BLLen1 = ExpTmpOutVar_3;
      hv_rectFAI20BLLen2.Dispose();
      hv_rectFAI20BLLen2 = ExpTmpOutVar_4;
      }
      hv_threshValue.Dispose();hv_ignorePortion.Dispose();hv_sigma1.Dispose();hv_sigma2.Dispose();hv_newWidth.Dispose();hv_cannyLow.Dispose();hv_cannyHigh.Dispose();
      GetFindLineParams("20-bottomLeft", hv_FindLineNames, hv_thresholds, hv_IgnorePortions, 
          hv_Sigma1s, hv_Sigma2s, hv_NewWidths, hv_CannyLows, hv_CannyHighs, out hv_threshValue, 
          out hv_ignorePortion, out hv_sigma1, out hv_sigma2, out hv_newWidth, out hv_cannyLow, 
          out hv_cannyHigh);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', rectFAI20BLRow, rectFAI20BLCol, rectFAI20BLRadian, rectFAI20BLLen1, rectFAI20BLLen2, 10, threshValue, 'first', ignorePortion, 'false', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth23, longestOnly25, lineX1FAI20BL, lineY1FAI20BL, lineX2FAI20BL, lineY2FAI20BL, XsUsed, YsUsed, XsIgnored, YsIgnored)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
      ho_FindLineRects.Dispose();
      ho_FindLineRects = ExpTmpOutVar_0;
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
          hv_XsUsed);
      hv_crossesXused.Dispose();
      hv_crossesXused = ExpTmpLocalVar_crossesXused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
          hv_YsUsed);
      hv_crossesYused.Dispose();
      hv_crossesYused = ExpTmpLocalVar_crossesYused;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
          hv_XsIgnored);
      hv_crossesXIgnored.Dispose();
      hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
          hv_YsIgnored);
      hv_crossesYIgnored.Dispose();
      hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
      }
      }

      //FAI20-1
      hv_ptX_TR.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptX_TR = (hv_lineX1FAI20TR+hv_lineX2FAI20TR)/2.0;
      }
      hv_ptY_TR.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptY_TR = (hv_lineY1FAI20TR+hv_lineY2FAI20TR)/2.0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_ptX_TR);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_ptY_TR);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_lineX1FAI20BL, hv_lineY1FAI20BL, hv_lineX2FAI20BL, hv_lineY2FAI20BL, 
          hv_ptX_TR, hv_ptY_TR, hv_MapToWorld, out hv_distanceWorld, out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      //FAI20-2
      hv_ptX_BL.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptX_BL = (hv_lineX1FAI20BL+hv_lineX2FAI20BL)/2.0;
      }
      hv_ptY_BL.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptY_BL = (hv_lineY1FAI20BL+hv_lineY2FAI20BL)/2.0;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
          hv_ptX_BL);
      hv_intersectXs.Dispose();
      hv_intersectXs = ExpTmpLocalVar_intersectXs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
          hv_ptY_BL);
      hv_intersectYs.Dispose();
      hv_intersectYs = ExpTmpLocalVar_intersectYs;
      }
      }

      hv_ptX.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptX = (hv_ptX_TR+hv_ptX_BL)/2.0;
      }
      hv_ptY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ptY = (hv_ptY_TR+hv_ptY_BL)/2.0;
      }

      //PivotLineAroundPoint(lineRegion, lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colOrigin, rowOrigin, rad(45), 'right', 5120, 5120, outLineX1, outLineY1, outLineX2, outLineY2)
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
      ho_lineRegions.Dispose();
      ho_lineRegions = ExpTmpOutVar_0;
      }
      hv_distanceWorld.Dispose();hv_distancePixel.Dispose();
      DistancePLInWorld(hv_outLineX1, hv_outLineY1, hv_outLineX2, hv_outLineY2, hv_ptX, 
          hv_ptY, hv_MapToWorld, out hv_distanceWorld, out hv_distancePixel);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_distanceWorld = ((hv_distanceWorld-12.202)).TupleAbs()
          ;
      hv_distanceWorld.Dispose();
      hv_distanceWorld = ExpTmpLocalVar_distanceWorld;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
          hv_distanceWorld);
      hv_outputs.Dispose();
      hv_outputs = ExpTmpLocalVar_outputs;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
          hv_distancePixel);
      hv_outputsPixel.Dispose();
      hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
      }
      }

      hv_numOutputs.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_numOutputs = new HTuple(hv_outputs.TupleLength()
          );
      }
      hv_numOutputPixels.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_numOutputPixels = new HTuple(hv_outputsPixel.TupleLength()
          );
      }
      ho_Image_COPY_INP_TMP.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageReduced.Dispose();
      ho_Region.Dispose();
      ho_ConnectedRegions.Dispose();
      ho_SelectedRegions.Dispose();
      ho_ImageResult.Dispose();
      ho_Rectangle1.Dispose();
      ho_rect.Dispose();
      ho_lineRegion.Dispose();
      ho_Rectangle.Dispose();
      ho_Rectangle9.Dispose();
      ho_rectFAI2.Dispose();
      ho_Rectangle7.Dispose();
      ho_rectFAI3.Dispose();
      ho_Rectangle6.Dispose();
      ho_rectFAI4.Dispose();
      ho_Rectangle2.Dispose();
      ho_lineRegion1.Dispose();
      ho_Cross.Dispose();
      ho_Rectangle5.Dispose();

      hv_CameraParameters.Dispose();
      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_MapToWorld.Dispose();
      hv_MapToImage.Dispose();
      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_crossSize.Dispose();
      hv_numSubRects.Dispose();
      hv_ModelThreshold.Dispose();
      hv_FAI2_LEN_P1.Dispose();
      hv_FAI2_LEN_P2.Dispose();
      hv_FAI2_LEN_P3.Dispose();
      hv_FAI3_LEN_P1.Dispose();
      hv_FAI3_LEN_P2.Dispose();
      hv_FAI3_LEN_P3.Dispose();
      hv_FAI4_LEN_P1.Dispose();
      hv_FAI4_LEN_P2.Dispose();
      hv_FAI4_LEN_P3.Dispose();
      hv_FAI5_LEN_P1.Dispose();
      hv_FAI5_LEN_P2.Dispose();
      hv_FAI5_LEN_P3.Dispose();
      hv_FAI6_LEN_P1.Dispose();
      hv_FAI6_LEN_P2.Dispose();
      hv_FAI6_LEN_P3.Dispose();
      hv_FAI9_LEN_P1.Dispose();
      hv_FAI9_LEN_P2.Dispose();
      hv_FAI9_LEN_P3.Dispose();
      hv_FAI12_LEN_P1.Dispose();
      hv_FAI12_LEN_P2.Dispose();
      hv_FAI16_LEN_P1.Dispose();
      hv_FAI16_LEN_P2.Dispose();
      hv_FAI17_LEN_P1.Dispose();
      hv_FAI17_LEN_P2.Dispose();
      hv_FAI19_LEN_P1.Dispose();
      hv_FAI19_LEN_P2.Dispose();
      hv_FAI20_LEN_X.Dispose();
      hv_FAI20_LEN_Y.Dispose();
      hv_Threshold.Dispose();
      hv_rowModel.Dispose();
      hv_colModel.Dispose();
      hv_UsedThreshold.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementImageToImage.Dispose();
      hv_ROW_1.Dispose();
      hv_COL_1.Dispose();
      hv_RAD_1.Dispose();
      hv_ROW1_1.Dispose();
      hv_COL1_1.Dispose();
      hv_RAD1_1.Dispose();
      hv_LEN1_1.Dispose();
      hv_LEN2_1.Dispose();
      hv_ROW1_2.Dispose();
      hv_COL1_2.Dispose();
      hv_RAD1_2.Dispose();
      hv_LEN1_2.Dispose();
      hv_LEN2_2.Dispose();
      hv_baseRightRow.Dispose();
      hv_baseRightColum.Dispose();
      hv_baseRightRadian.Dispose();
      hv_baseRightLen1.Dispose();
      hv_baseRightLen2.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_sigma2.Dispose();
      hv_newWidth.Dispose();
      hv_cannyLow.Dispose();
      hv_cannyHigh.Dispose();
      hv_lineX1RightBase.Dispose();
      hv_lineY1RightBase.Dispose();
      hv_lineX2RightBase.Dispose();
      hv_lineY2RightBase.Dispose();
      hv_XsUsed.Dispose();
      hv_YsUsed.Dispose();
      hv_XsIgnored.Dispose();
      hv_YsIgnored.Dispose();
      hv_ROW_2.Dispose();
      hv_COL_2.Dispose();
      hv_RAD_2.Dispose();
      hv_ROW_3.Dispose();
      hv_COL_3.Dispose();
      hv_RAD_3.Dispose();
      hv_LEN1_3.Dispose();
      hv_LEN2_3.Dispose();
      hv_baseTopRow.Dispose();
      hv_baseTopColumn.Dispose();
      hv_baseTopRadian.Dispose();
      hv_baseTopLen1.Dispose();
      hv_baseTopLen2.Dispose();
      hv_rowOrigin.Dispose();
      hv_colOrigin.Dispose();
      hv_ptXOnPerpenducularDir.Dispose();
      hv_ptYOnPerpenducularDir.Dispose();
      hv_FAI2_P1_LineStartX.Dispose();
      hv_FAI2_P1_LineStartY.Dispose();
      hv_FAI2_P1_LineEndX.Dispose();
      hv_FAI2_P1_LineEndY.Dispose();
      hv_FAI2_P2_LineStartX.Dispose();
      hv_FAI2_P2_LineStartY.Dispose();
      hv_FAI2_P2_LineEndX.Dispose();
      hv_FAI2_P2_LineEndY.Dispose();
      hv_FAI2_P3_LineStartX.Dispose();
      hv_FAI2_P3_LineStartY.Dispose();
      hv_FAI2_P3_LineEndX.Dispose();
      hv_FAI2_P3_LineEndY.Dispose();
      hv_rectFAI2Row.Dispose();
      hv_rectFAI2Col.Dispose();
      hv_rectFAI2Radian.Dispose();
      hv_rectFAI2Len1.Dispose();
      hv_rectFAI2Len2.Dispose();
      hv_rectFAI2Row_RIGHT.Dispose();
      hv_rectFAI2Col_RIGHT.Dispose();
      hv_rectFAI2Radian_RIGHT.Dispose();
      hv_rectFAI2Len1_RIGHT.Dispose();
      hv_rectFAI2Len2_RIGHT.Dispose();
      hv_lineStartX_FAI2H.Dispose();
      hv_lineStartY_FAI2H.Dispose();
      hv_lineEndX_FAI2H.Dispose();
      hv_lineEndY_FAI2H.Dispose();
      hv_rowIntersect.Dispose();
      hv_colIntersect.Dispose();
      hv_IsOverlapping1.Dispose();
      hv_distanceWorld.Dispose();
      hv_distancePixel.Dispose();
      hv_rectFAI3Row.Dispose();
      hv_rectFAI3Col.Dispose();
      hv_rectFAI3Radian.Dispose();
      hv_rectFAI3Len1.Dispose();
      hv_rectFAI3Len2.Dispose();
      hv_rectFAI3Row_RIGHT.Dispose();
      hv_rectFAI3Col_RIGHT.Dispose();
      hv_rectFAI3Radian_RIGHT.Dispose();
      hv_rectFAI3Len1_RIGHT.Dispose();
      hv_rectFAI3Len2_RIGHT.Dispose();
      hv_FAI3_P1_LineStartX.Dispose();
      hv_FAI3_P1_LineStartY.Dispose();
      hv_FAI3_P1_LineEndX.Dispose();
      hv_FAI3_P1_LineEndY.Dispose();
      hv_FAI3_P2_LineStartX.Dispose();
      hv_FAI3_P2_LineStartY.Dispose();
      hv_FAI3_P2_LineEndX.Dispose();
      hv_FAI3_P2_LineEndY.Dispose();
      hv_FAI3_P3_LineStartX.Dispose();
      hv_FAI3_P3_LineStartY.Dispose();
      hv_FAI3_P3_LineEndX.Dispose();
      hv_FAI3_P3_LineEndY.Dispose();
      hv_IsOverlapping2.Dispose();
      hv_rectFAI4Row.Dispose();
      hv_rectFAI4Col.Dispose();
      hv_rectFAI4Radian.Dispose();
      hv_rectFAI4Len1.Dispose();
      hv_rectFAI4Len2.Dispose();
      hv_rectFAI5Row.Dispose();
      hv_rectFAI5Col.Dispose();
      hv_rectFAI5Radian.Dispose();
      hv_rectFAI5Len1.Dispose();
      hv_rectFAI5Len2.Dispose();
      hv_lineX1FAI5.Dispose();
      hv_lineY1FAI5.Dispose();
      hv_lineX2FAI5.Dispose();
      hv_lineY2FAI5.Dispose();
      hv_rectFAI6Row.Dispose();
      hv_rectFAI6Col.Dispose();
      hv_rectFAI6Radian.Dispose();
      hv_rectFAI6Len1.Dispose();
      hv_rectFAI6Len2.Dispose();
      hv_FAI6_P1_LineStartX.Dispose();
      hv_FAI6_P1_LineStartY.Dispose();
      hv_FAI6_P1_LineEndX.Dispose();
      hv_FAI6_P1_LineEndY.Dispose();
      hv_FAI6_P2_LineStartX.Dispose();
      hv_FAI6_P2_LineStartY.Dispose();
      hv_FAI6_P2_LineEndX.Dispose();
      hv_FAI6_P2_LineEndY.Dispose();
      hv_FAI6_P3_LineStartX.Dispose();
      hv_FAI6_P3_LineStartY.Dispose();
      hv_FAI6_P3_LineEndX.Dispose();
      hv_FAI6_P3_LineEndY.Dispose();
      hv_rectFAI9Row.Dispose();
      hv_rectFAI9Col.Dispose();
      hv_rectFAI9Radian.Dispose();
      hv_rectFAI9Len1.Dispose();
      hv_rectFAI9Len2.Dispose();
      hv_FAI9_P1_LineStartX.Dispose();
      hv_FAI9_P1_LineStartY.Dispose();
      hv_FAI9_P1_LineEndX.Dispose();
      hv_FAI9_P1_LineEndY.Dispose();
      hv_FAI9_P2_LineStartX.Dispose();
      hv_FAI9_P2_LineStartY.Dispose();
      hv_FAI9_P2_LineEndX.Dispose();
      hv_FAI9_P2_LineEndY.Dispose();
      hv_FAI9_P3_LineStartX.Dispose();
      hv_FAI9_P3_LineStartY.Dispose();
      hv_FAI9_P3_LineEndX.Dispose();
      hv_FAI9_P3_LineEndY.Dispose();
      hv_rectFAI12Row.Dispose();
      hv_rectFAI12Col.Dispose();
      hv_rectFAI12Radian.Dispose();
      hv_rectFAI12Len1.Dispose();
      hv_rectFAI12Len2.Dispose();
      hv_rectFAI16Row.Dispose();
      hv_rectFAI16Col.Dispose();
      hv_rectFAI16Radian.Dispose();
      hv_rectFAI16Len1.Dispose();
      hv_rectFAI16Len2.Dispose();
      hv_rectFAI17Row.Dispose();
      hv_rectFAI17Col.Dispose();
      hv_rectFAI17Radian.Dispose();
      hv_rectFAI17Len1.Dispose();
      hv_rectFAI17Len2.Dispose();
      hv_rectFAI19Row.Dispose();
      hv_rectFAI19Col.Dispose();
      hv_rectFAI19Radian.Dispose();
      hv_rectFAI19Len1.Dispose();
      hv_rectFAI19Len2.Dispose();
      hv_FAI20_P2_LineStartX.Dispose();
      hv_FAI20_P2_LineStartY.Dispose();
      hv_FAI20_P2_LineEndX.Dispose();
      hv_FAI20_P2_LineEndY.Dispose();
      hv_FAI20V_P1_LineStartX.Dispose();
      hv_FAI20V_P1_LineStartY.Dispose();
      hv_FAI20V_P1_LineEndX.Dispose();
      hv_FAI20V_P1_LineEndY.Dispose();
      hv_rowCenterTop.Dispose();
      hv_colCenterTop.Dispose();
      hv_rectFAI20TRRow.Dispose();
      hv_rectFAI20TRCol.Dispose();
      hv_rectFAI20TRRadian.Dispose();
      hv_rectFAI20TRLen1.Dispose();
      hv_rectFAI20TRLen2.Dispose();
      hv_lineX1FAI20TR.Dispose();
      hv_lineY1FAI20TR.Dispose();
      hv_lineX2FAI20TR.Dispose();
      hv_lineY2FAI20TR.Dispose();
      hv_rectFAI20BLRow.Dispose();
      hv_rectFAI20BLCol.Dispose();
      hv_rectFAI20BLRadian.Dispose();
      hv_rectFAI20BLLen1.Dispose();
      hv_rectFAI20BLLen2.Dispose();
      hv_lineX1FAI20BL.Dispose();
      hv_lineY1FAI20BL.Dispose();
      hv_lineX2FAI20BL.Dispose();
      hv_lineY2FAI20BL.Dispose();
      hv_ptX_TR.Dispose();
      hv_ptY_TR.Dispose();
      hv_ptX_BL.Dispose();
      hv_ptY_BL.Dispose();
      hv_ptX.Dispose();
      hv_ptY.Dispose();
      hv_outLineX1.Dispose();
      hv_outLineY1.Dispose();
      hv_outLineX2.Dispose();
      hv_outLineY2.Dispose();
      hv_numOutputs.Dispose();
      hv_numOutputPixels.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Image_COPY_INP_TMP.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageReduced.Dispose();
      ho_Region.Dispose();
      ho_ConnectedRegions.Dispose();
      ho_SelectedRegions.Dispose();
      ho_ImageResult.Dispose();
      ho_Rectangle1.Dispose();
      ho_rect.Dispose();
      ho_lineRegion.Dispose();
      ho_Rectangle.Dispose();
      ho_Rectangle9.Dispose();
      ho_rectFAI2.Dispose();
      ho_Rectangle7.Dispose();
      ho_rectFAI3.Dispose();
      ho_Rectangle6.Dispose();
      ho_rectFAI4.Dispose();
      ho_Rectangle2.Dispose();
      ho_lineRegion1.Dispose();
      ho_Cross.Dispose();
      ho_Rectangle5.Dispose();

      hv_CameraParameters.Dispose();
      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_MapToWorld.Dispose();
      hv_MapToImage.Dispose();
      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_crossSize.Dispose();
      hv_numSubRects.Dispose();
      hv_ModelThreshold.Dispose();
      hv_FAI2_LEN_P1.Dispose();
      hv_FAI2_LEN_P2.Dispose();
      hv_FAI2_LEN_P3.Dispose();
      hv_FAI3_LEN_P1.Dispose();
      hv_FAI3_LEN_P2.Dispose();
      hv_FAI3_LEN_P3.Dispose();
      hv_FAI4_LEN_P1.Dispose();
      hv_FAI4_LEN_P2.Dispose();
      hv_FAI4_LEN_P3.Dispose();
      hv_FAI5_LEN_P1.Dispose();
      hv_FAI5_LEN_P2.Dispose();
      hv_FAI5_LEN_P3.Dispose();
      hv_FAI6_LEN_P1.Dispose();
      hv_FAI6_LEN_P2.Dispose();
      hv_FAI6_LEN_P3.Dispose();
      hv_FAI9_LEN_P1.Dispose();
      hv_FAI9_LEN_P2.Dispose();
      hv_FAI9_LEN_P3.Dispose();
      hv_FAI12_LEN_P1.Dispose();
      hv_FAI12_LEN_P2.Dispose();
      hv_FAI16_LEN_P1.Dispose();
      hv_FAI16_LEN_P2.Dispose();
      hv_FAI17_LEN_P1.Dispose();
      hv_FAI17_LEN_P2.Dispose();
      hv_FAI19_LEN_P1.Dispose();
      hv_FAI19_LEN_P2.Dispose();
      hv_FAI20_LEN_X.Dispose();
      hv_FAI20_LEN_Y.Dispose();
      hv_Threshold.Dispose();
      hv_rowModel.Dispose();
      hv_colModel.Dispose();
      hv_UsedThreshold.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementImageToImage.Dispose();
      hv_ROW_1.Dispose();
      hv_COL_1.Dispose();
      hv_RAD_1.Dispose();
      hv_ROW1_1.Dispose();
      hv_COL1_1.Dispose();
      hv_RAD1_1.Dispose();
      hv_LEN1_1.Dispose();
      hv_LEN2_1.Dispose();
      hv_ROW1_2.Dispose();
      hv_COL1_2.Dispose();
      hv_RAD1_2.Dispose();
      hv_LEN1_2.Dispose();
      hv_LEN2_2.Dispose();
      hv_baseRightRow.Dispose();
      hv_baseRightColum.Dispose();
      hv_baseRightRadian.Dispose();
      hv_baseRightLen1.Dispose();
      hv_baseRightLen2.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_sigma2.Dispose();
      hv_newWidth.Dispose();
      hv_cannyLow.Dispose();
      hv_cannyHigh.Dispose();
      hv_lineX1RightBase.Dispose();
      hv_lineY1RightBase.Dispose();
      hv_lineX2RightBase.Dispose();
      hv_lineY2RightBase.Dispose();
      hv_XsUsed.Dispose();
      hv_YsUsed.Dispose();
      hv_XsIgnored.Dispose();
      hv_YsIgnored.Dispose();
      hv_ROW_2.Dispose();
      hv_COL_2.Dispose();
      hv_RAD_2.Dispose();
      hv_ROW_3.Dispose();
      hv_COL_3.Dispose();
      hv_RAD_3.Dispose();
      hv_LEN1_3.Dispose();
      hv_LEN2_3.Dispose();
      hv_baseTopRow.Dispose();
      hv_baseTopColumn.Dispose();
      hv_baseTopRadian.Dispose();
      hv_baseTopLen1.Dispose();
      hv_baseTopLen2.Dispose();
      hv_rowOrigin.Dispose();
      hv_colOrigin.Dispose();
      hv_ptXOnPerpenducularDir.Dispose();
      hv_ptYOnPerpenducularDir.Dispose();
      hv_FAI2_P1_LineStartX.Dispose();
      hv_FAI2_P1_LineStartY.Dispose();
      hv_FAI2_P1_LineEndX.Dispose();
      hv_FAI2_P1_LineEndY.Dispose();
      hv_FAI2_P2_LineStartX.Dispose();
      hv_FAI2_P2_LineStartY.Dispose();
      hv_FAI2_P2_LineEndX.Dispose();
      hv_FAI2_P2_LineEndY.Dispose();
      hv_FAI2_P3_LineStartX.Dispose();
      hv_FAI2_P3_LineStartY.Dispose();
      hv_FAI2_P3_LineEndX.Dispose();
      hv_FAI2_P3_LineEndY.Dispose();
      hv_rectFAI2Row.Dispose();
      hv_rectFAI2Col.Dispose();
      hv_rectFAI2Radian.Dispose();
      hv_rectFAI2Len1.Dispose();
      hv_rectFAI2Len2.Dispose();
      hv_rectFAI2Row_RIGHT.Dispose();
      hv_rectFAI2Col_RIGHT.Dispose();
      hv_rectFAI2Radian_RIGHT.Dispose();
      hv_rectFAI2Len1_RIGHT.Dispose();
      hv_rectFAI2Len2_RIGHT.Dispose();
      hv_lineStartX_FAI2H.Dispose();
      hv_lineStartY_FAI2H.Dispose();
      hv_lineEndX_FAI2H.Dispose();
      hv_lineEndY_FAI2H.Dispose();
      hv_rowIntersect.Dispose();
      hv_colIntersect.Dispose();
      hv_IsOverlapping1.Dispose();
      hv_distanceWorld.Dispose();
      hv_distancePixel.Dispose();
      hv_rectFAI3Row.Dispose();
      hv_rectFAI3Col.Dispose();
      hv_rectFAI3Radian.Dispose();
      hv_rectFAI3Len1.Dispose();
      hv_rectFAI3Len2.Dispose();
      hv_rectFAI3Row_RIGHT.Dispose();
      hv_rectFAI3Col_RIGHT.Dispose();
      hv_rectFAI3Radian_RIGHT.Dispose();
      hv_rectFAI3Len1_RIGHT.Dispose();
      hv_rectFAI3Len2_RIGHT.Dispose();
      hv_FAI3_P1_LineStartX.Dispose();
      hv_FAI3_P1_LineStartY.Dispose();
      hv_FAI3_P1_LineEndX.Dispose();
      hv_FAI3_P1_LineEndY.Dispose();
      hv_FAI3_P2_LineStartX.Dispose();
      hv_FAI3_P2_LineStartY.Dispose();
      hv_FAI3_P2_LineEndX.Dispose();
      hv_FAI3_P2_LineEndY.Dispose();
      hv_FAI3_P3_LineStartX.Dispose();
      hv_FAI3_P3_LineStartY.Dispose();
      hv_FAI3_P3_LineEndX.Dispose();
      hv_FAI3_P3_LineEndY.Dispose();
      hv_IsOverlapping2.Dispose();
      hv_rectFAI4Row.Dispose();
      hv_rectFAI4Col.Dispose();
      hv_rectFAI4Radian.Dispose();
      hv_rectFAI4Len1.Dispose();
      hv_rectFAI4Len2.Dispose();
      hv_rectFAI5Row.Dispose();
      hv_rectFAI5Col.Dispose();
      hv_rectFAI5Radian.Dispose();
      hv_rectFAI5Len1.Dispose();
      hv_rectFAI5Len2.Dispose();
      hv_lineX1FAI5.Dispose();
      hv_lineY1FAI5.Dispose();
      hv_lineX2FAI5.Dispose();
      hv_lineY2FAI5.Dispose();
      hv_rectFAI6Row.Dispose();
      hv_rectFAI6Col.Dispose();
      hv_rectFAI6Radian.Dispose();
      hv_rectFAI6Len1.Dispose();
      hv_rectFAI6Len2.Dispose();
      hv_FAI6_P1_LineStartX.Dispose();
      hv_FAI6_P1_LineStartY.Dispose();
      hv_FAI6_P1_LineEndX.Dispose();
      hv_FAI6_P1_LineEndY.Dispose();
      hv_FAI6_P2_LineStartX.Dispose();
      hv_FAI6_P2_LineStartY.Dispose();
      hv_FAI6_P2_LineEndX.Dispose();
      hv_FAI6_P2_LineEndY.Dispose();
      hv_FAI6_P3_LineStartX.Dispose();
      hv_FAI6_P3_LineStartY.Dispose();
      hv_FAI6_P3_LineEndX.Dispose();
      hv_FAI6_P3_LineEndY.Dispose();
      hv_rectFAI9Row.Dispose();
      hv_rectFAI9Col.Dispose();
      hv_rectFAI9Radian.Dispose();
      hv_rectFAI9Len1.Dispose();
      hv_rectFAI9Len2.Dispose();
      hv_FAI9_P1_LineStartX.Dispose();
      hv_FAI9_P1_LineStartY.Dispose();
      hv_FAI9_P1_LineEndX.Dispose();
      hv_FAI9_P1_LineEndY.Dispose();
      hv_FAI9_P2_LineStartX.Dispose();
      hv_FAI9_P2_LineStartY.Dispose();
      hv_FAI9_P2_LineEndX.Dispose();
      hv_FAI9_P2_LineEndY.Dispose();
      hv_FAI9_P3_LineStartX.Dispose();
      hv_FAI9_P3_LineStartY.Dispose();
      hv_FAI9_P3_LineEndX.Dispose();
      hv_FAI9_P3_LineEndY.Dispose();
      hv_rectFAI12Row.Dispose();
      hv_rectFAI12Col.Dispose();
      hv_rectFAI12Radian.Dispose();
      hv_rectFAI12Len1.Dispose();
      hv_rectFAI12Len2.Dispose();
      hv_rectFAI16Row.Dispose();
      hv_rectFAI16Col.Dispose();
      hv_rectFAI16Radian.Dispose();
      hv_rectFAI16Len1.Dispose();
      hv_rectFAI16Len2.Dispose();
      hv_rectFAI17Row.Dispose();
      hv_rectFAI17Col.Dispose();
      hv_rectFAI17Radian.Dispose();
      hv_rectFAI17Len1.Dispose();
      hv_rectFAI17Len2.Dispose();
      hv_rectFAI19Row.Dispose();
      hv_rectFAI19Col.Dispose();
      hv_rectFAI19Radian.Dispose();
      hv_rectFAI19Len1.Dispose();
      hv_rectFAI19Len2.Dispose();
      hv_FAI20_P2_LineStartX.Dispose();
      hv_FAI20_P2_LineStartY.Dispose();
      hv_FAI20_P2_LineEndX.Dispose();
      hv_FAI20_P2_LineEndY.Dispose();
      hv_FAI20V_P1_LineStartX.Dispose();
      hv_FAI20V_P1_LineStartY.Dispose();
      hv_FAI20V_P1_LineEndX.Dispose();
      hv_FAI20V_P1_LineEndY.Dispose();
      hv_rowCenterTop.Dispose();
      hv_colCenterTop.Dispose();
      hv_rectFAI20TRRow.Dispose();
      hv_rectFAI20TRCol.Dispose();
      hv_rectFAI20TRRadian.Dispose();
      hv_rectFAI20TRLen1.Dispose();
      hv_rectFAI20TRLen2.Dispose();
      hv_lineX1FAI20TR.Dispose();
      hv_lineY1FAI20TR.Dispose();
      hv_lineX2FAI20TR.Dispose();
      hv_lineY2FAI20TR.Dispose();
      hv_rectFAI20BLRow.Dispose();
      hv_rectFAI20BLCol.Dispose();
      hv_rectFAI20BLRadian.Dispose();
      hv_rectFAI20BLLen1.Dispose();
      hv_rectFAI20BLLen2.Dispose();
      hv_lineX1FAI20BL.Dispose();
      hv_lineY1FAI20BL.Dispose();
      hv_lineX2FAI20BL.Dispose();
      hv_lineY2FAI20BL.Dispose();
      hv_ptX_TR.Dispose();
      hv_ptY_TR.Dispose();
      hv_ptX_BL.Dispose();
      hv_ptY_BL.Dispose();
      hv_ptX.Dispose();
      hv_ptY.Dispose();
      hv_outLineX1.Dispose();
      hv_outLineY1.Dispose();
      hv_outLineX2.Dispose();
      hv_outLineY2.Dispose();
      hv_numOutputs.Dispose();
      hv_numOutputPixels.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void I94TopViewChangeBase (HObject ho_Image, out HObject ho_ImageUndistorted, 
      HTuple hv_ModelHandle, out HTuple hv_ChangeOfBase, out HTuple hv_ChangeOfBaseInv, 
      out HTuple hv_RotationMat, out HTuple hv_RotationMatInv, out HTuple hv_MapToWorld, 
      out HTuple hv_MapToImage, out HTuple hv_lineX1TopBase, out HTuple hv_lineY1TopBase, 
      out HTuple hv_lineX2TopBase, out HTuple hv_lineY2TopBase, out HTuple hv_lineX1RightBase, 
      out HTuple hv_lineY1RightBase, out HTuple hv_lineX2RightBase, out HTuple hv_lineY2RightBase)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageResult, ho_Rectangle1;
    HObject ho_lineRegion, ho_findLineRegion;

    // Local copy input parameter variables 
    HObject ho_Image_COPY_INP_TMP;
    ho_Image_COPY_INP_TMP = new HObject(ho_Image);



    // Local control variables 

    HTuple hv_CameraParameters = new HTuple();
    HTuple hv_CameraPose = new HTuple(), hv_OutCameraParams = new HTuple();
    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_numSubRects = new HTuple(), hv_ModelThreshold = new HTuple();
    HTuple hv_threshValue = new HTuple(), hv_ignorePortion = new HTuple();
    HTuple hv_sigma1 = new HTuple(), hv_sigma2 = new HTuple();
    HTuple hv_cannyHigh = new HTuple(), hv_cannyLow = new HTuple();
    HTuple hv_newWidth = new HTuple(), hv_rowModel = new HTuple();
    HTuple hv_colModel = new HTuple(), hv_Row = new HTuple();
    HTuple hv_Column = new HTuple(), hv_Angle = new HTuple();
    HTuple hv_Score = new HTuple(), hv_MovementImageToImage = new HTuple();
    HTuple hv_ROW_1 = new HTuple(), hv_COL_1 = new HTuple();
    HTuple hv_RAD_1 = new HTuple(), hv_ROW1_1 = new HTuple();
    HTuple hv_COL1_1 = new HTuple(), hv_RAD1_1 = new HTuple();
    HTuple hv_LEN1_1 = new HTuple(), hv_LEN2_1 = new HTuple();
    HTuple hv_ROW1_2 = new HTuple(), hv_COL1_2 = new HTuple();
    HTuple hv_RAD1_2 = new HTuple(), hv_LEN1_2 = new HTuple();
    HTuple hv_LEN2_2 = new HTuple(), hv_baseRightRow = new HTuple();
    HTuple hv_baseRightColum = new HTuple(), hv_baseRightRadian = new HTuple();
    HTuple hv_baseRightLen1 = new HTuple(), hv_baseRightLen2 = new HTuple();
    HTuple hv_XsUsed = new HTuple(), hv_YsUsed = new HTuple();
    HTuple hv_XsIgnored = new HTuple(), hv_YsIgnored = new HTuple();
    HTuple hv_ROW_2 = new HTuple(), hv_COL_2 = new HTuple();
    HTuple hv_RAD_2 = new HTuple(), hv_ROW_3 = new HTuple();
    HTuple hv_COL_3 = new HTuple(), hv_RAD_3 = new HTuple();
    HTuple hv_LEN1_3 = new HTuple(), hv_LEN2_3 = new HTuple();
    HTuple hv_baseTopRow = new HTuple(), hv_baseTopColumn = new HTuple();
    HTuple hv_baseTopRadian = new HTuple(), hv_baseTopLen1 = new HTuple();
    HTuple hv_baseTopLen2 = new HTuple(), hv_rowOrigin = new HTuple();
    HTuple hv_colOrigin = new HTuple(), hv_IsOverlapping = new HTuple();
    HTuple hv_XLeft = new HTuple(), hv_YLeft = new HTuple();
    HTuple hv_XRight = new HTuple(), hv_YRight = new HTuple();
    HTuple hv_XUp = new HTuple(), hv_YUp = new HTuple(), hv_XDown = new HTuple();
    HTuple hv_YDown = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ImageUndistorted);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageResult);
    HOperatorSet.GenEmptyObj(out ho_Rectangle1);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    HOperatorSet.GenEmptyObj(out ho_findLineRegion);
    hv_ChangeOfBase = new HTuple();
    hv_ChangeOfBaseInv = new HTuple();
    hv_RotationMat = new HTuple();
    hv_RotationMatInv = new HTuple();
    hv_MapToWorld = new HTuple();
    hv_MapToImage = new HTuple();
    hv_lineX1TopBase = new HTuple();
    hv_lineY1TopBase = new HTuple();
    hv_lineX2TopBase = new HTuple();
    hv_lineY2TopBase = new HTuple();
    hv_lineX1RightBase = new HTuple();
    hv_lineY1RightBase = new HTuple();
    hv_lineX2RightBase = new HTuple();
    hv_lineY2RightBase = new HTuple();
    try
    {
      hv_CameraParameters.Dispose();
      hv_CameraParameters = new HTuple();
      hv_CameraParameters[0] = "area_scan_telecentric_division";
      hv_CameraParameters[1] = 0.588471;
      hv_CameraParameters[2] = 3.42746;
      hv_CameraParameters[3] = 4.4974e-006;
      hv_CameraParameters[4] = 4.5e-006;
      hv_CameraParameters[5] = 2556.48;
      hv_CameraParameters[6] = 2560.7;
      hv_CameraParameters[7] = 5120;
      hv_CameraParameters[8] = 5120;
      hv_CameraPose.Dispose();
      hv_CameraPose = new HTuple();
      hv_CameraPose[0] = 0.00180843;
      hv_CameraPose[1] = -0.000646214;
      hv_CameraPose[2] = 0.000999199;
      hv_CameraPose[3] = 0.316458;
      hv_CameraPose[4] = 2.27204;
      hv_CameraPose[5] = 180.151;
      hv_CameraPose[6] = 0;
      {
      HObject ExpTmpOutVar_0;hv_OutCameraParams.Dispose();
      UndistortImage(ho_Image_COPY_INP_TMP, out ExpTmpOutVar_0, hv_CameraParameters, 
          out hv_OutCameraParams);
      ho_Image_COPY_INP_TMP.Dispose();
      ho_Image_COPY_INP_TMP = ExpTmpOutVar_0;
      }
      ho_ImageUndistorted.Dispose();
      ho_ImageUndistorted = new HObject(ho_Image_COPY_INP_TMP);

      hv_MapToWorld.Dispose();hv_MapToImage.Dispose();
      GenCalibrationMaps(ho_Image_COPY_INP_TMP, hv_OutCameraParams, hv_CameraPose, 
          out hv_MapToWorld, out hv_MapToImage);

      hv_Width.Dispose();hv_Height.Dispose();
      HOperatorSet.GetImageSize(ho_Image_COPY_INP_TMP, out hv_Width, out hv_Height);
      hv_numSubRects.Dispose();
      hv_numSubRects = 10;

      hv_ModelThreshold.Dispose();
      hv_ModelThreshold = 160;
      hv_threshValue.Dispose();
      hv_threshValue = 20;
      hv_ignorePortion.Dispose();
      hv_ignorePortion = 0.2;
      hv_sigma1.Dispose();
      hv_sigma1 = 1;
      hv_sigma2.Dispose();
      hv_sigma2 = 1;
      hv_cannyHigh.Dispose();
      hv_cannyHigh = 40;
      hv_cannyLow.Dispose();
      hv_cannyLow = 20;
      hv_newWidth.Dispose();
      hv_newWidth = 5;




      //find model front light
      //Threshold := 128

      //gen_rectangle1 (ROI_0, 53.9, 1940.83, 2000, 3900)
      //reduce_domain (Image, ROI_0, ImageReduced)
      //binary_threshold (ImageReduced, Region, 'max_separability', 'light', UsedThreshold)
      //connection (Region, ConnectedRegions)
      //select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 800000, 99999999)
      //paint_region (SelectedRegions, ImageReduced, ImageResult, 255, 'fill')


      //find model back light
      ho_ROI_0.Dispose();
      HOperatorSet.GenRectangle1(out ho_ROI_0, 79.5, 1762.7, 2185.1, 4943.5);
      ho_ImageResult.Dispose();
      HOperatorSet.ReduceDomain(ho_Image_COPY_INP_TMP, ho_ROI_0, out ho_ImageResult
          );



      hv_rowModel.Dispose();
      hv_rowModel = 1171.5;
      hv_colModel.Dispose();
      hv_colModel = 3678.5;
      hv_Row.Dispose();hv_Column.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
      HOperatorSet.FindShapeModel(ho_ImageResult, hv_ModelHandle, -0.39, 0.79, 0.3, 
          1, 0.5, "least_squares", 0, 0.9, out hv_Row, out hv_Column, out hv_Angle, 
          out hv_Score);
      hv_MovementImageToImage.Dispose();
      HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Row, hv_Column, hv_Angle, out hv_MovementImageToImage);

      //image normalization
      //ROW_1 := 1972 - rowModel
      //COL_1 := 4257- colModel
      //RAD_1 := 0
      //LEN_1 := 150
      //LEN_2 := 150

      //AffineTransRect2 (ROW_1, COL_1, RAD_1, LEN_1, LEN_2, MovementImageToImage, ROW_1, COL_1, RAD_1, LEN_1, LEN_2)
      //gen_rectangle2 (Rectangle8, ROW_1, COL_1, RAD_1, LEN_1, LEN_2)
      //reduce_domain (ImageReduced, Rectangle8, ImageReduced1)
      //gray_features (Rectangle8, ImageReduced1, 'mean', Value)
      //standardGrayValue := 140.0
      //scaleFacotr := standardGrayValue / Value
      //scale_image (Image, Image, scaleFacotr, 0)

      hv_ROW1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW1_1 = 2684-hv_rowModel;
      }
      hv_COL1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL1_1 = 4804-hv_colModel;
      }
      hv_RAD1_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD1_1 = (new HTuple(180)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 200;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 350;

      hv_ROW1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW1_2 = 4380-hv_rowModel;
      }
      hv_COL1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL1_2 = 4804-hv_colModel;
      }
      hv_RAD1_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD1_2 = (new HTuple(180)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 200;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 350;

      hv_baseRightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightRow = new HTuple();
      hv_baseRightRow = hv_baseRightRow.TupleConcat(hv_ROW1_1, hv_ROW1_2);
      }
      hv_baseRightColum.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightColum = new HTuple();
      hv_baseRightColum = hv_baseRightColum.TupleConcat(hv_COL1_1, hv_COL1_2);
      }
      hv_baseRightRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightRadian = new HTuple();
      hv_baseRightRadian = hv_baseRightRadian.TupleConcat(hv_RAD1_1, hv_RAD1_2);
      }
      hv_baseRightLen1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightLen1 = new HTuple();
      hv_baseRightLen1 = hv_baseRightLen1.TupleConcat(hv_LEN1_1, hv_LEN1_2);
      }
      hv_baseRightLen2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseRightLen2 = new HTuple();
      hv_baseRightLen2 = hv_baseRightLen2.TupleConcat(hv_LEN2_1, hv_LEN2_2);
      }


      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_baseRightRow, hv_baseRightColum, hv_baseRightRadian, hv_baseRightLen1, 
          hv_baseRightLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_baseRightRow.Dispose();
      hv_baseRightRow = ExpTmpOutVar_0;
      hv_baseRightColum.Dispose();
      hv_baseRightColum = ExpTmpOutVar_1;
      hv_baseRightRadian.Dispose();
      hv_baseRightRadian = ExpTmpOutVar_2;
      hv_baseRightLen1.Dispose();
      hv_baseRightLen1 = ExpTmpOutVar_3;
      hv_baseRightLen2.Dispose();
      hv_baseRightLen2 = ExpTmpOutVar_4;
      }
      ho_Rectangle1.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle1, hv_baseRightRow, hv_baseRightColum, 
          hv_baseRightRadian, hv_baseRightLen1, hv_baseRightLen2);
      //VisionProStyleFindLineOneStep (Image, rect, lineRegion, 'negative', baseRightRow, baseRightColum, baseRightRadian, baseRightLen1, baseRightLen2, numSubRects, [threshValue,threshValue], 'first', ignorePortion, 'true', sigma1, sigma2, Width, Height, newWidth, cannyHigh, cannyLow, kernelWidth, longestOnly, lineX1RightBase, lineY1RightBase, lineX2RightBase, lineY2RightBase, XsUsed, YsUsed, XsIgnored, YsIgnored)
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_findLineRegion.Dispose();ho_lineRegion.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();hv_lineX1RightBase.Dispose();hv_lineY1RightBase.Dispose();hv_lineX2RightBase.Dispose();hv_lineY2RightBase.Dispose();
      FindLineGradiant(ho_Image_COPY_INP_TMP, out ho_findLineRegion, out ho_lineRegion, 
          hv_baseRightRow, hv_baseRightColum, hv_baseRightRadian, hv_baseRightLen1, 
          hv_baseRightLen2, hv_numSubRects, 0.2, "negative", hv_threshValue.TupleConcat(
          hv_threshValue), 2, "first", out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, 
          out hv_YsIgnored, out hv_lineX1RightBase, out hv_lineY1RightBase, out hv_lineX2RightBase, 
          out hv_lineY2RightBase);
      }

      //find top base line
      hv_ROW_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_1 = 162.42300000-hv_rowModel;
      }
      hv_COL_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_1 = 3050-hv_colModel;
      }
      hv_RAD_1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_1 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_1.Dispose();
      hv_LEN1_1 = 100;
      hv_LEN2_1.Dispose();
      hv_LEN2_1 = 200;

      hv_ROW_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_2 = 162.42300000-hv_rowModel;
      }
      hv_COL_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_2 = 3694-hv_colModel;
      }
      hv_RAD_2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_2 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_2.Dispose();
      hv_LEN1_2 = 100;
      hv_LEN2_2.Dispose();
      hv_LEN2_2 = 100;

      hv_ROW_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_ROW_3 = 162.42300000-hv_rowModel;
      }
      hv_COL_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_COL_3 = 4310-hv_colModel;
      }
      hv_RAD_3.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RAD_3 = (new HTuple(-90.00000000)).TupleRad()
          ;
      }
      hv_LEN1_3.Dispose();
      hv_LEN1_3 = 100;
      hv_LEN2_3.Dispose();
      hv_LEN2_3 = 100;

      hv_baseTopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopRow = new HTuple();
      hv_baseTopRow = hv_baseTopRow.TupleConcat(hv_ROW_1, hv_ROW_2, hv_ROW_3);
      }
      hv_baseTopColumn.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopColumn = new HTuple();
      hv_baseTopColumn = hv_baseTopColumn.TupleConcat(hv_COL_1, hv_COL_2, hv_COL_3);
      }
      hv_baseTopRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopRadian = new HTuple();
      hv_baseTopRadian = hv_baseTopRadian.TupleConcat(hv_RAD_1, hv_RAD_2, hv_RAD_3);
      }
      hv_baseTopLen1.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopLen1 = new HTuple();
      hv_baseTopLen1 = hv_baseTopLen1.TupleConcat(hv_LEN1_1, hv_LEN1_2, hv_LEN1_3);
      }
      hv_baseTopLen2.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_baseTopLen2 = new HTuple();
      hv_baseTopLen2 = hv_baseTopLen2.TupleConcat(hv_LEN2_1, hv_LEN2_2, hv_LEN2_3);
      }


      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
      HTuple ExpTmpOutVar_4;
      AffineTransRect2(hv_baseTopRow, hv_baseTopColumn, hv_baseTopRadian, hv_baseTopLen1, 
          hv_baseTopLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
          out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
      hv_baseTopRow.Dispose();
      hv_baseTopRow = ExpTmpOutVar_0;
      hv_baseTopColumn.Dispose();
      hv_baseTopColumn = ExpTmpOutVar_1;
      hv_baseTopRadian.Dispose();
      hv_baseTopRadian = ExpTmpOutVar_2;
      hv_baseTopLen1.Dispose();
      hv_baseTopLen1 = ExpTmpOutVar_3;
      hv_baseTopLen2.Dispose();
      hv_baseTopLen2 = ExpTmpOutVar_4;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_findLineRegion.Dispose();ho_lineRegion.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();hv_lineX1TopBase.Dispose();hv_lineY1TopBase.Dispose();hv_lineX2TopBase.Dispose();hv_lineY2TopBase.Dispose();
      FindLineGradiant(ho_Image_COPY_INP_TMP, out ho_findLineRegion, out ho_lineRegion, 
          hv_baseTopRow, hv_baseTopColumn, hv_baseTopRadian, hv_baseTopLen1, hv_baseTopLen2, 
          hv_numSubRects, 0.2, "negative", ((hv_threshValue.TupleConcat(hv_threshValue))).TupleConcat(
          hv_threshValue), 2, "first", out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, 
          out hv_YsIgnored, out hv_lineX1TopBase, out hv_lineY1TopBase, out hv_lineX2TopBase, 
          out hv_lineY2TopBase);
      }


      //make origin
      hv_rowOrigin.Dispose();hv_colOrigin.Dispose();hv_IsOverlapping.Dispose();
      HOperatorSet.IntersectionLines(hv_lineY1RightBase, hv_lineX1RightBase, hv_lineY2RightBase, 
          hv_lineX2RightBase, hv_lineY1TopBase, hv_lineX1TopBase, hv_lineY2TopBase, 
          hv_lineX2TopBase, out hv_rowOrigin, out hv_colOrigin, out hv_IsOverlapping);


      //rectify bases
      //get_perpendicular_line_that_passes (lineX1TopBase, lineY1TopBase, lineX2TopBase, lineY2TopBase, colOrigin, rowOrigin, ptXOnPerpenducularDir, ptYOnPerpenducularDir)
      //lineX1RightBase := colOrigin
      //lineY1RightBase := rowOrigin
      //lineX2RightBase := ptXOnPerpenducularDir
      //lineY2RightBase := ptYOnPerpenducularDir

      hv_XLeft.Dispose();hv_YLeft.Dispose();hv_XRight.Dispose();hv_YRight.Dispose();
      SortLineLeftRight(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
          out hv_XLeft, out hv_YLeft, out hv_XRight, out hv_YRight);
      hv_XUp.Dispose();hv_YUp.Dispose();hv_XDown.Dispose();hv_YDown.Dispose();
      SortLineUpDown(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
          hv_lineY2RightBase, out hv_XUp, out hv_YUp, out hv_XDown, out hv_YDown);
      hv_ChangeOfBase.Dispose();hv_ChangeOfBaseInv.Dispose();hv_RotationMat.Dispose();hv_RotationMatInv.Dispose();
      GetChangeOfBase(hv_XRight, hv_YRight, hv_XLeft, hv_YLeft, hv_XUp, hv_YUp, hv_XDown, 
          hv_YDown, out hv_ChangeOfBase, out hv_ChangeOfBaseInv, out hv_RotationMat, 
          out hv_RotationMatInv);
      ho_Image_COPY_INP_TMP.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageResult.Dispose();
      ho_Rectangle1.Dispose();
      ho_lineRegion.Dispose();
      ho_findLineRegion.Dispose();

      hv_CameraParameters.Dispose();
      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_numSubRects.Dispose();
      hv_ModelThreshold.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_sigma2.Dispose();
      hv_cannyHigh.Dispose();
      hv_cannyLow.Dispose();
      hv_newWidth.Dispose();
      hv_rowModel.Dispose();
      hv_colModel.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementImageToImage.Dispose();
      hv_ROW_1.Dispose();
      hv_COL_1.Dispose();
      hv_RAD_1.Dispose();
      hv_ROW1_1.Dispose();
      hv_COL1_1.Dispose();
      hv_RAD1_1.Dispose();
      hv_LEN1_1.Dispose();
      hv_LEN2_1.Dispose();
      hv_ROW1_2.Dispose();
      hv_COL1_2.Dispose();
      hv_RAD1_2.Dispose();
      hv_LEN1_2.Dispose();
      hv_LEN2_2.Dispose();
      hv_baseRightRow.Dispose();
      hv_baseRightColum.Dispose();
      hv_baseRightRadian.Dispose();
      hv_baseRightLen1.Dispose();
      hv_baseRightLen2.Dispose();
      hv_XsUsed.Dispose();
      hv_YsUsed.Dispose();
      hv_XsIgnored.Dispose();
      hv_YsIgnored.Dispose();
      hv_ROW_2.Dispose();
      hv_COL_2.Dispose();
      hv_RAD_2.Dispose();
      hv_ROW_3.Dispose();
      hv_COL_3.Dispose();
      hv_RAD_3.Dispose();
      hv_LEN1_3.Dispose();
      hv_LEN2_3.Dispose();
      hv_baseTopRow.Dispose();
      hv_baseTopColumn.Dispose();
      hv_baseTopRadian.Dispose();
      hv_baseTopLen1.Dispose();
      hv_baseTopLen2.Dispose();
      hv_rowOrigin.Dispose();
      hv_colOrigin.Dispose();
      hv_IsOverlapping.Dispose();
      hv_XLeft.Dispose();
      hv_YLeft.Dispose();
      hv_XRight.Dispose();
      hv_YRight.Dispose();
      hv_XUp.Dispose();
      hv_YUp.Dispose();
      hv_XDown.Dispose();
      hv_YDown.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Image_COPY_INP_TMP.Dispose();
      ho_ROI_0.Dispose();
      ho_ImageResult.Dispose();
      ho_Rectangle1.Dispose();
      ho_lineRegion.Dispose();
      ho_findLineRegion.Dispose();

      hv_CameraParameters.Dispose();
      hv_CameraPose.Dispose();
      hv_OutCameraParams.Dispose();
      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_numSubRects.Dispose();
      hv_ModelThreshold.Dispose();
      hv_threshValue.Dispose();
      hv_ignorePortion.Dispose();
      hv_sigma1.Dispose();
      hv_sigma2.Dispose();
      hv_cannyHigh.Dispose();
      hv_cannyLow.Dispose();
      hv_newWidth.Dispose();
      hv_rowModel.Dispose();
      hv_colModel.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Angle.Dispose();
      hv_Score.Dispose();
      hv_MovementImageToImage.Dispose();
      hv_ROW_1.Dispose();
      hv_COL_1.Dispose();
      hv_RAD_1.Dispose();
      hv_ROW1_1.Dispose();
      hv_COL1_1.Dispose();
      hv_RAD1_1.Dispose();
      hv_LEN1_1.Dispose();
      hv_LEN2_1.Dispose();
      hv_ROW1_2.Dispose();
      hv_COL1_2.Dispose();
      hv_RAD1_2.Dispose();
      hv_LEN1_2.Dispose();
      hv_LEN2_2.Dispose();
      hv_baseRightRow.Dispose();
      hv_baseRightColum.Dispose();
      hv_baseRightRadian.Dispose();
      hv_baseRightLen1.Dispose();
      hv_baseRightLen2.Dispose();
      hv_XsUsed.Dispose();
      hv_YsUsed.Dispose();
      hv_XsIgnored.Dispose();
      hv_YsIgnored.Dispose();
      hv_ROW_2.Dispose();
      hv_COL_2.Dispose();
      hv_RAD_2.Dispose();
      hv_ROW_3.Dispose();
      hv_COL_3.Dispose();
      hv_RAD_3.Dispose();
      hv_LEN1_3.Dispose();
      hv_LEN2_3.Dispose();
      hv_baseTopRow.Dispose();
      hv_baseTopColumn.Dispose();
      hv_baseTopRadian.Dispose();
      hv_baseTopLen1.Dispose();
      hv_baseTopLen2.Dispose();
      hv_rowOrigin.Dispose();
      hv_colOrigin.Dispose();
      hv_IsOverlapping.Dispose();
      hv_XLeft.Dispose();
      hv_YLeft.Dispose();
      hv_XRight.Dispose();
      hv_YRight.Dispose();
      hv_XUp.Dispose();
      hv_YUp.Dispose();
      hv_XDown.Dispose();
      hv_YDown.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void ImageLineIntersections (HTuple hv_m, HTuple hv_b, HTuple hv_imageWidth, 
      HTuple hv_imageHeight, out HTuple hv_xStart, out HTuple hv_yStart, out HTuple hv_xEnd, 
      out HTuple hv_yEnd)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_result = new HTuple(), hv_allBoundaries = new HTuple();
    HTuple hv_Index = new HTuple(), hv_boundariesLeft = new HTuple();
    // Initialize local and output iconic variables 
    hv_xStart = new HTuple();
    hv_yStart = new HTuple();
    hv_xEnd = new HTuple();
    hv_yEnd = new HTuple();
    try
    {
      hv_result.Dispose();hv_xStart.Dispose();hv_yStart.Dispose();
      _search_boundary("null", hv_m, hv_b, hv_imageWidth, hv_imageHeight, out hv_result, 
          out hv_xStart, out hv_yStart);
      hv_allBoundaries.Dispose();
      hv_allBoundaries = new HTuple();
      hv_allBoundaries[0] = "left";
      hv_allBoundaries[1] = "right";
      hv_allBoundaries[2] = "up";
      hv_allBoundaries[3] = "down";
      for (hv_Index=0; (int)hv_Index<=(int)((new HTuple(hv_allBoundaries.TupleLength()
          ))-1); hv_Index = (int)hv_Index + 1)
      {
        if ((int)(new HTuple(((hv_allBoundaries.TupleSelect(hv_Index))).TupleEqual(
            hv_result))) != 0)
        {
          hv_boundariesLeft.Dispose();
          HOperatorSet.TupleRemove(hv_allBoundaries, hv_Index, out hv_boundariesLeft);
        }
      }
      hv_result.Dispose();hv_xEnd.Dispose();hv_yEnd.Dispose();
      _search_boundary(hv_boundariesLeft, hv_m, hv_b, hv_imageWidth, hv_imageHeight, 
          out hv_result, out hv_xEnd, out hv_yEnd);

      hv_result.Dispose();
      hv_allBoundaries.Dispose();
      hv_Index.Dispose();
      hv_boundariesLeft.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_result.Dispose();
      hv_allBoundaries.Dispose();
      hv_Index.Dispose();
      hv_boundariesLeft.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void LongestXLD (HObject ho_inputContour, out HObject ho_outputContour, 
      out HTuple hv_contourLength)
  {



    // Local iconic variables 

    HObject ho_selectedContour, ho_ObjectSelected=null;

    // Local control variables 

    HTuple hv_Number = new HTuple(), hv_selectedIndex = new HTuple();
    HTuple hv_Index = new HTuple(), hv_Row = new HTuple();
    HTuple hv_Column = new HTuple(), hv_Phi1 = new HTuple();
    HTuple hv_Length = new HTuple(), hv_Length2 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_outputContour);
    HOperatorSet.GenEmptyObj(out ho_selectedContour);
    HOperatorSet.GenEmptyObj(out ho_ObjectSelected);
    hv_contourLength = new HTuple();
    try
    {
      hv_Number.Dispose();
      HOperatorSet.CountObj(ho_inputContour, out hv_Number);


      ho_selectedContour.Dispose();
      HOperatorSet.GenEmptyObj(out ho_selectedContour);
      hv_selectedIndex.Dispose();
      hv_selectedIndex = 0;
      hv_contourLength.Dispose();
      hv_contourLength = 0;
      HTuple end_val6 = hv_Number;
      HTuple step_val6 = 1;
      for (hv_Index=1; hv_Index.Continue(end_val6, step_val6); hv_Index = hv_Index.TupleAdd(step_val6))
      {
        ho_ObjectSelected.Dispose();
        HOperatorSet.SelectObj(ho_inputContour, out ho_ObjectSelected, hv_Index);
        hv_Row.Dispose();hv_Column.Dispose();hv_Phi1.Dispose();hv_Length.Dispose();hv_Length2.Dispose();
        HOperatorSet.SmallestRectangle2Xld(ho_ObjectSelected, out hv_Row, out hv_Column, 
            out hv_Phi1, out hv_Length, out hv_Length2);
        if ((int)(new HTuple(hv_Length2.TupleGreater(hv_Length))) != 0)
        {
          hv_Length.Dispose();
          hv_Length = new HTuple(hv_Length2);
        }

        if ((int)(new HTuple(hv_Length.TupleGreater(hv_contourLength))) != 0)
        {
          hv_contourLength.Dispose();
          hv_contourLength = new HTuple(hv_Length);
          ho_selectedContour.Dispose();
          ho_selectedContour = new HObject(ho_ObjectSelected);
        }
      }


      ho_outputContour.Dispose();
      ho_outputContour = new HObject(ho_selectedContour);
      ho_selectedContour.Dispose();
      ho_ObjectSelected.Dispose();

      hv_Number.Dispose();
      hv_selectedIndex.Dispose();
      hv_Index.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Phi1.Dispose();
      hv_Length.Dispose();
      hv_Length2.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_selectedContour.Dispose();
      ho_ObjectSelected.Dispose();

      hv_Number.Dispose();
      hv_selectedIndex.Dispose();
      hv_Index.Dispose();
      hv_Row.Dispose();
      hv_Column.Dispose();
      hv_Phi1.Dispose();
      hv_Length.Dispose();
      hv_Length2.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void MeanImageIAndFineEdges (HObject ho_Image, out HObject ho_Edges, HTuple hv_row, 
      HTuple hv_col, HTuple hv_radian, HTuple hv_len1, HTuple hv_len2, HTuple hv_cannyHigh, 
      HTuple hv_cannyLow, HTuple hv_sigma2, HTuple hv_kernelWidth)
  {




    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageReduced, ho_ImageMean=null;
    HObject ho_ImageAffineTrans=null, ho_Rectangle=null, ho_ImageReduced1=null;
    HObject ho_Rectangle1=null, ho_ClippedContours=null;

    // Local control variables 

    HTuple hv_padding = new HTuple(), hv_len1Padded = new HTuple();
    HTuple hv_len2Padded = new HTuple(), hv_epslon = new HTuple();
    HTuple hv_degreeAbs = new HTuple(), hv_isHorizontal = new HTuple();
    HTuple hv_isVertical = new HTuple(), hv_HomMat2D = new HTuple();
    HTuple hv_col1Clip = new HTuple(), hv_row1Clip = new HTuple();
    HTuple hv_col2Clip = new HTuple(), hv_row2Clip = new HTuple();
    HTuple hv_HomMatInv = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Edges);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_ImageMean);
    HOperatorSet.GenEmptyObj(out ho_ImageAffineTrans);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced1);
    HOperatorSet.GenEmptyObj(out ho_Rectangle1);
    HOperatorSet.GenEmptyObj(out ho_ClippedContours);
    try
    {

      hv_padding.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_padding = hv_kernelWidth+5;
      }
      hv_len1Padded.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_len1Padded = hv_len1+hv_padding;
      }
      hv_len2Padded.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_len2Padded = hv_len2+hv_padding;
      }

      ho_ROI_0.Dispose();
      HOperatorSet.GenRectangle2(out ho_ROI_0, hv_row, hv_col, hv_radian, hv_len1Padded, 
          hv_len2Padded);
      ho_ImageReduced.Dispose();
      HOperatorSet.ReduceDomain(ho_Image, ho_ROI_0, out ho_ImageReduced);


      hv_epslon.Dispose();
      hv_epslon = 5;
      hv_degreeAbs.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_degreeAbs = ((hv_radian.TupleDeg()
          )).TupleAbs();
      }
      hv_isHorizontal.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_isHorizontal = new HTuple(((((hv_degreeAbs-90)).TupleAbs()
          )).TupleLess(hv_epslon));
      }
      hv_isVertical.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_isVertical = (new HTuple(((((hv_degreeAbs-180)).TupleAbs()
          )).TupleLess(hv_epslon))).TupleOr(new HTuple(hv_degreeAbs.TupleLess(hv_epslon)));
      }

      //do not transform if the region is originally vertical or horizontal
      //if (isHorizontal or isVertical)

        //if (isHorizontal)
          //kernelWidth := kernelWidth
          //kernelHeight := 1
        //else
          //kernelHeight := kernelWidth
          //kernelWidth := 1
        //endif
        //mean_image (ImageReduced, ImageMean, kernelWidth, kernelHeight)

        //edges_sub_pix (ImageMean, Edges, 'canny', sigma2, cannyLow, cannyHigh)

      //else
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_HomMat2D.Dispose();
        HOperatorSet.VectorAngleToRigid(hv_row, hv_col, hv_radian, hv_len1Padded, 
            hv_len2Padded, (new HTuple(-90)).TupleRad(), out hv_HomMat2D);
        }
        ho_ImageAffineTrans.Dispose();
        HOperatorSet.AffineTransImage(ho_ImageReduced, out ho_ImageAffineTrans, hv_HomMat2D, 
            "bilinear", "false");

        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        ho_Rectangle.Dispose();
        HOperatorSet.GenRectangle2(out ho_Rectangle, hv_len1Padded, hv_len2Padded, 
            (new HTuple(90)).TupleRad(), hv_len1Padded, hv_len2Padded);
        }
        ho_ImageReduced1.Dispose();
        HOperatorSet.ReduceDomain(ho_ImageAffineTrans, ho_Rectangle, out ho_ImageReduced1
            );

        ho_ImageMean.Dispose();
        HOperatorSet.MeanImage(ho_ImageReduced1, out ho_ImageMean, hv_kernelWidth, 
            1);


        ho_Edges.Dispose();
        HOperatorSet.EdgesSubPix(ho_ImageMean, out ho_Edges, "canny", hv_sigma2, 
            hv_cannyLow, hv_cannyHigh);

        hv_col1Clip.Dispose();
        hv_col1Clip = new HTuple(hv_padding);
        hv_row1Clip.Dispose();
        hv_row1Clip = new HTuple(hv_padding);
        hv_col2Clip.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_col2Clip = hv_padding+(hv_len2*2);
        }
        hv_row2Clip.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_row2Clip = hv_padding+(hv_len1*2);
        }
        ho_Rectangle1.Dispose();
        HOperatorSet.GenRectangle1(out ho_Rectangle1, hv_row1Clip, hv_col1Clip, hv_row2Clip, 
            hv_col2Clip);
        ho_ClippedContours.Dispose();
        HOperatorSet.ClipContoursXld(ho_Edges, out ho_ClippedContours, hv_row1Clip, 
            hv_col1Clip, hv_row2Clip, hv_col2Clip);

        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_HomMatInv.Dispose();
        HOperatorSet.VectorAngleToRigid(hv_len1Padded, hv_len2Padded, (new HTuple(-90)).TupleRad()
            , hv_row, hv_col, hv_radian, out hv_HomMatInv);
        }

        ho_Edges.Dispose();
        HOperatorSet.AffineTransContourXld(ho_ClippedContours, out ho_Edges, hv_HomMatInv);

      //endif


      ho_ROI_0.Dispose();
      ho_ImageReduced.Dispose();
      ho_ImageMean.Dispose();
      ho_ImageAffineTrans.Dispose();
      ho_Rectangle.Dispose();
      ho_ImageReduced1.Dispose();
      ho_Rectangle1.Dispose();
      ho_ClippedContours.Dispose();

      hv_padding.Dispose();
      hv_len1Padded.Dispose();
      hv_len2Padded.Dispose();
      hv_epslon.Dispose();
      hv_degreeAbs.Dispose();
      hv_isHorizontal.Dispose();
      hv_isVertical.Dispose();
      hv_HomMat2D.Dispose();
      hv_col1Clip.Dispose();
      hv_row1Clip.Dispose();
      hv_col2Clip.Dispose();
      hv_row2Clip.Dispose();
      hv_HomMatInv.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_ROI_0.Dispose();
      ho_ImageReduced.Dispose();
      ho_ImageMean.Dispose();
      ho_ImageAffineTrans.Dispose();
      ho_Rectangle.Dispose();
      ho_ImageReduced1.Dispose();
      ho_Rectangle1.Dispose();
      ho_ClippedContours.Dispose();

      hv_padding.Dispose();
      hv_len1Padded.Dispose();
      hv_len2Padded.Dispose();
      hv_epslon.Dispose();
      hv_degreeAbs.Dispose();
      hv_isHorizontal.Dispose();
      hv_isVertical.Dispose();
      hv_HomMat2D.Dispose();
      hv_col1Clip.Dispose();
      hv_row1Clip.Dispose();
      hv_col2Clip.Dispose();
      hv_row2Clip.Dispose();
      hv_HomMatInv.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void move_point_along_line (HTuple hv_lineStartX, HTuple hv_lineStartY, 
      HTuple hv_lineDirectionX, HTuple hv_lineDirectionY, HTuple hv_distance, out HTuple hv_lineMovedX, 
      out HTuple hv_lineMovedY)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xDiff = new HTuple(), hv_yDiff = new HTuple();
    HTuple hv_totalDiff = new HTuple(), hv_xDirection = new HTuple();
    HTuple hv_yDirection = new HTuple();
    // Initialize local and output iconic variables 
    hv_lineMovedX = new HTuple();
    hv_lineMovedY = new HTuple();
    try
    {
      hv_xDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xDiff = hv_lineDirectionX-hv_lineStartX;
      }
      hv_yDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_yDiff = hv_lineDirectionY-hv_lineStartY;
      }
      hv_totalDiff.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_totalDiff = (((hv_yDiff*hv_yDiff)+(hv_xDiff*hv_xDiff))).TupleSqrt()
          ;
      }
      hv_xDirection.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xDirection = hv_xDiff/hv_totalDiff;
      }
      hv_yDirection.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_yDirection = hv_yDiff/hv_totalDiff;
      }
      hv_lineMovedX.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_lineMovedX = hv_lineStartX+(hv_xDirection*hv_distance);
      }
      hv_lineMovedY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_lineMovedY = hv_lineStartY+(hv_yDirection*hv_distance);
      }

      hv_xDiff.Dispose();
      hv_yDiff.Dispose();
      hv_totalDiff.Dispose();
      hv_xDirection.Dispose();
      hv_yDirection.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_xDiff.Dispose();
      hv_yDiff.Dispose();
      hv_totalDiff.Dispose();
      hv_xDirection.Dispose();
      hv_yDirection.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void PivotLineAroundPoint (out HObject ho_lineRegion, HTuple hv_lineX1, 
      HTuple hv_lineY1, HTuple hv_lineX2, HTuple hv_lineY2, HTuple hv_pivotX, HTuple hv_pivotY, 
      HTuple hv_radian, HTuple hv_newPointDirection, HTuple hv_imageWidth, HTuple hv_imageHeight, 
      out HTuple hv_outLineX1, out HTuple hv_outLineY1, out HTuple hv_outLineX2, out HTuple hv_outLineY2)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_initialRadian = new HTuple(), hv_newRadian = new HTuple();
    HTuple hv_m = new HTuple(), hv_b = new HTuple(), hv_dist = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    hv_outLineX1 = new HTuple();
    hv_outLineY1 = new HTuple();
    hv_outLineX2 = new HTuple();
    hv_outLineY2 = new HTuple();
    try
    {
      hv_initialRadian.Dispose();
      HOperatorSet.LineOrientation(hv_lineY1, hv_lineX1, hv_lineY2, hv_lineX2, out hv_initialRadian);
      hv_newRadian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_newRadian = hv_initialRadian+hv_radian;
      }

      hv_m.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_m = hv_newRadian.TupleTan()
          ;
      }
      hv_b.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_b = hv_pivotY-(hv_pivotX*hv_m);
      }

      hv_outLineX1.Dispose();
      hv_outLineX1 = new HTuple(hv_pivotX);
      hv_outLineY1.Dispose();
      hv_outLineY1 = new HTuple(hv_pivotY);

      hv_dist.Dispose();
      hv_dist = 10;
      if ((int)(new HTuple(hv_newPointDirection.TupleEqual("up"))) != 0)
      {
        hv_outLineY2.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_outLineY2 = hv_outLineY1+hv_dist;
        }
        hv_outLineX2.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_outLineX2 = (hv_outLineY2-hv_b)/hv_m;
        }
      }
      else if ((int)(new HTuple(hv_newPointDirection.TupleEqual("down"))) != 0)
      {
        hv_outLineY2.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_outLineY2 = hv_outLineY1-hv_dist;
        }
        hv_outLineX2.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_outLineX2 = (hv_outLineY2-hv_b)/hv_m;
        }
      }
      else if ((int)(new HTuple(hv_newPointDirection.TupleEqual("left"))) != 0)
      {
        hv_outLineX2.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_outLineX2 = hv_outLineX1-hv_dist;
        }
        hv_outLineY2.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_outLineY2 = (hv_outLineX2*hv_m)+hv_b;
        }
      }
      else if ((int)(new HTuple(hv_newPointDirection.TupleEqual("right"))) != 0)
      {
        hv_outLineX2.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_outLineX2 = hv_outLineX1+hv_dist;
        }
        hv_outLineY2.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_outLineY2 = (hv_outLineX2*hv_m)+hv_b;
        }
      }
      else
      {
        throw new HalconException("Invalid Direction");
      }

      ho_lineRegion.Dispose();
      GenLineRegion(out ho_lineRegion, hv_outLineX1, hv_outLineY1, hv_outLineX2, 
          hv_outLineY2, hv_imageWidth, hv_imageHeight);


      hv_initialRadian.Dispose();
      hv_newRadian.Dispose();
      hv_m.Dispose();
      hv_b.Dispose();
      hv_dist.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_initialRadian.Dispose();
      hv_newRadian.Dispose();
      hv_m.Dispose();
      hv_b.Dispose();
      hv_dist.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void PointRelativeToAbs (HTuple hv_XRelative, HTuple hv_YRelative, HTuple hv_ChangeOfBase, 
      out HTuple hv_XAbs, out HTuple hv_YAbs)
  {


    // Initialize local and output iconic variables 
    hv_XAbs = new HTuple();
    hv_YAbs = new HTuple();
    hv_XAbs.Dispose();hv_YAbs.Dispose();
    HOperatorSet.AffineTransPoint2d(hv_ChangeOfBase, hv_XRelative, hv_YRelative, 
        out hv_XAbs, out hv_YAbs);



    return;
  }

  public void ProjectionFilter (HTuple hv_Xs, HTuple hv_Ys, HTuple hv_lineX1, HTuple hv_lineY1, 
      HTuple hv_lineX2, HTuple hv_lineY2, HTuple hv_ignorePortion, out HTuple hv_XsOut, 
      out HTuple hv_YsOut)
  {



    // Local iconic variables 

    HObject ho_Cross, ho_Cross2;

    // Local control variables 

    HTuple hv_numInputs = new HTuple(), hv_lineProjectionXs = new HTuple();
    HTuple hv_lineProjectionYs = new HTuple(), hv_i = new HTuple();
    HTuple hv_X1 = new HTuple(), hv_Y1 = new HTuple(), hv_X2 = new HTuple();
    HTuple hv_Y2 = new HTuple(), hv_intersectionY = new HTuple();
    HTuple hv_intersectionX = new HTuple(), hv_IsOverlapping = new HTuple();
    HTuple hv_distances = new HTuple(), hv_Indices = new HTuple();
    HTuple hv_numChoose = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Cross);
    HOperatorSet.GenEmptyObj(out ho_Cross2);
    hv_XsOut = new HTuple();
    hv_YsOut = new HTuple();
    try
    {
      hv_numInputs.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_numInputs = new HTuple(hv_Xs.TupleLength()
          );
      }

      hv_lineProjectionXs.Dispose();
      hv_lineProjectionXs = new HTuple();
      hv_lineProjectionYs.Dispose();
      hv_lineProjectionYs = new HTuple();

      HTuple end_val5 = hv_numInputs-1;
      HTuple step_val5 = 1;
      for (hv_i=0; hv_i.Continue(end_val5, step_val5); hv_i = hv_i.TupleAdd(step_val5))
      {
        hv_X1.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_X1 = hv_Xs.TupleSelect(
            hv_i);
        }
        hv_Y1.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_Y1 = hv_Ys.TupleSelect(
            hv_i);
        }
        hv_X2.Dispose();hv_Y2.Dispose();
        get_perpendicular_line_that_passes(hv_lineX1, hv_lineY1, hv_lineX2, hv_lineY2, 
            hv_X1, hv_Y1, out hv_X2, out hv_Y2);
        hv_intersectionY.Dispose();hv_intersectionX.Dispose();hv_IsOverlapping.Dispose();
        HOperatorSet.IntersectionLines(hv_lineY1, hv_lineX1, hv_lineY2, hv_lineX2, 
            hv_Y1, hv_X1, hv_Y2, hv_X2, out hv_intersectionY, out hv_intersectionX, 
            out hv_IsOverlapping);
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_lineProjectionXs = hv_lineProjectionXs.TupleConcat(
            hv_intersectionX);
        hv_lineProjectionXs.Dispose();
        hv_lineProjectionXs = ExpTmpLocalVar_lineProjectionXs;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_lineProjectionYs = hv_lineProjectionYs.TupleConcat(
            hv_intersectionY);
        hv_lineProjectionYs.Dispose();
        hv_lineProjectionYs = ExpTmpLocalVar_lineProjectionYs;
        }
        }
      }

      hv_distances.Dispose();
      GetDistancesToDistributionCenter(hv_lineProjectionXs, hv_lineProjectionYs, 
          out hv_distances);

      hv_Indices.Dispose();
      HOperatorSet.TupleSortIndex(hv_distances, out hv_Indices);

      hv_numChoose.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_numChoose = (new HTuple(hv_Xs.TupleLength()
          ))*(1-hv_ignorePortion);
      }




      hv_XsOut.Dispose();
      hv_XsOut = new HTuple();
      hv_YsOut.Dispose();
      hv_YsOut = new HTuple();

      //take data points that are within 2 deviations away, that is 95% range
      for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_Xs.TupleLength()))-1); hv_i = (int)hv_i + 1)
      {
        if ((int)(new HTuple(((hv_Indices.TupleSelect(hv_i))).TupleLess(hv_numChoose))) != 0)
        {
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_XsOut = hv_XsOut.TupleConcat(
              hv_Xs.TupleSelect(hv_Indices.TupleSelect(hv_i)));
          hv_XsOut.Dispose();
          hv_XsOut = ExpTmpLocalVar_XsOut;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_YsOut = hv_YsOut.TupleConcat(
              hv_Ys.TupleSelect(hv_Indices.TupleSelect(hv_i)));
          hv_YsOut.Dispose();
          hv_YsOut = ExpTmpLocalVar_YsOut;
          }
          }
        }
      }


      HOperatorSet.SetColor(hv_ExpDefaultWinHandle, "red");
      ho_Cross.Dispose();
      HOperatorSet.GenCrossContourXld(out ho_Cross, hv_YsOut, hv_XsOut, 1, 0);
      HOperatorSet.SetColor(hv_ExpDefaultWinHandle, "green");
      ho_Cross2.Dispose();
      HOperatorSet.GenCrossContourXld(out ho_Cross2, hv_Ys, hv_Xs, 1, 0.785398);

      ho_Cross.Dispose();
      ho_Cross2.Dispose();

      hv_numInputs.Dispose();
      hv_lineProjectionXs.Dispose();
      hv_lineProjectionYs.Dispose();
      hv_i.Dispose();
      hv_X1.Dispose();
      hv_Y1.Dispose();
      hv_X2.Dispose();
      hv_Y2.Dispose();
      hv_intersectionY.Dispose();
      hv_intersectionX.Dispose();
      hv_IsOverlapping.Dispose();
      hv_distances.Dispose();
      hv_Indices.Dispose();
      hv_numChoose.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Cross.Dispose();
      ho_Cross2.Dispose();

      hv_numInputs.Dispose();
      hv_lineProjectionXs.Dispose();
      hv_lineProjectionYs.Dispose();
      hv_i.Dispose();
      hv_X1.Dispose();
      hv_Y1.Dispose();
      hv_X2.Dispose();
      hv_Y2.Dispose();
      hv_intersectionY.Dispose();
      hv_intersectionX.Dispose();
      hv_IsOverlapping.Dispose();
      hv_distances.Dispose();
      hv_Indices.Dispose();
      hv_numChoose.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void SortLineLeftRight (HTuple hv_X1, HTuple hv_Y1, HTuple hv_X2, HTuple hv_Y2, 
      out HTuple hv_XLeft, out HTuple hv_YLeft, out HTuple hv_XRight, out HTuple hv_YRight)
  {



    // Local iconic variables 
    // Initialize local and output iconic variables 
    hv_XLeft = new HTuple();
    hv_YLeft = new HTuple();
    hv_XRight = new HTuple();
    hv_YRight = new HTuple();
    hv_XLeft.Dispose();
    hv_XLeft = new HTuple(hv_X1);
    hv_XRight.Dispose();
    hv_XRight = new HTuple(hv_X2);
    hv_YLeft.Dispose();
    hv_YLeft = new HTuple(hv_Y1);
    hv_YRight.Dispose();
    hv_YRight = new HTuple(hv_Y2);
    //
    if ((int)(new HTuple(hv_X1.TupleGreater(hv_X2))) != 0)
    {
      hv_XLeft.Dispose();
      hv_XLeft = new HTuple(hv_X2);
      hv_XRight.Dispose();
      hv_XRight = new HTuple(hv_X1);
      hv_YLeft.Dispose();
      hv_YLeft = new HTuple(hv_Y2);
      hv_YRight.Dispose();
      hv_YRight = new HTuple(hv_Y1);
    }
    //


    return;
  }

  public void SortLineUpDown (HTuple hv_X1, HTuple hv_Y1, HTuple hv_X2, HTuple hv_Y2, 
      out HTuple hv_XUp, out HTuple hv_YUp, out HTuple hv_XDown, out HTuple hv_YDown)
  {



    // Local iconic variables 
    // Initialize local and output iconic variables 
    hv_XUp = new HTuple();
    hv_YUp = new HTuple();
    hv_XDown = new HTuple();
    hv_YDown = new HTuple();
    hv_XUp.Dispose();
    hv_XUp = new HTuple(hv_X1);
    hv_XDown.Dispose();
    hv_XDown = new HTuple(hv_X2);
    hv_YUp.Dispose();
    hv_YUp = new HTuple(hv_Y1);
    hv_YDown.Dispose();
    hv_YDown = new HTuple(hv_Y2);
    //
    if ((int)(new HTuple(hv_Y1.TupleGreater(hv_Y2))) != 0)
    {
      hv_XUp.Dispose();
      hv_XUp = new HTuple(hv_X2);
      hv_XDown.Dispose();
      hv_XDown = new HTuple(hv_X1);
      hv_YUp.Dispose();
      hv_YUp = new HTuple(hv_Y2);
      hv_YDown.Dispose();
      hv_YDown = new HTuple(hv_Y1);
    }
    //


    return;
  }

  public void StringTupleContains (HTuple hv_listOfString, HTuple hv_targetString, 
      out HTuple hv_hasElement)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_i = new HTuple();
    // Initialize local and output iconic variables 
    hv_hasElement = new HTuple();
    try
    {
      for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_listOfString.TupleLength()))-1); hv_i = (int)hv_i + 1)
      {
        if ((int)(new HTuple(((hv_listOfString.TupleSelect(hv_i))).TupleEqual(hv_targetString))) != 0)
        {
          hv_hasElement.Dispose();
          hv_hasElement = "true";

          hv_i.Dispose();

          return;
        }
      }

      hv_hasElement.Dispose();
      hv_hasElement = "false";


      hv_i.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_i.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void swap (HTuple hv_a, HTuple hv_b, out HTuple hv_newA, out HTuple hv_newB)
  {



    // Local iconic variables 
    // Initialize local and output iconic variables 
    hv_newA = new HTuple();
    hv_newB = new HTuple();
    hv_newA.Dispose();
    hv_newA = new HTuple(hv_b);
    hv_newB.Dispose();
    hv_newB = new HTuple(hv_a);



    return;
  }

  public void TranslateLineInWorldCoordinateAndConvertBack (HTuple hv_lineStartX, 
      HTuple hv_lineStartY, HTuple hv_lineEndX, HTuple hv_lineEndY, HTuple hv_distance, 
      HTuple hv_mapToWorld, HTuple hv_mapToImage, HTuple hv_isVertical, out HTuple hv_outLineStartX, 
      out HTuple hv_outLineStartY, out HTuple hv_outLineEndX, out HTuple hv_outLineEndY)
  {



    // Local control variables 

    HTuple hv_X1World = new HTuple(), hv_Y1World = new HTuple();
    HTuple hv_X2World = new HTuple(), hv_Y2World = new HTuple();
    HTuple hv_X1WorldTranslated = new HTuple(), hv_Y1WorldTranslated = new HTuple();
    HTuple hv_X2WorldTranslated = new HTuple(), hv_Y2WorldTranslated = new HTuple();
    HTuple   hv_lineEndX_COPY_INP_TMP = new HTuple(hv_lineEndX);
    HTuple   hv_lineEndY_COPY_INP_TMP = new HTuple(hv_lineEndY);
    HTuple   hv_lineStartX_COPY_INP_TMP = new HTuple(hv_lineStartX);
    HTuple   hv_lineStartY_COPY_INP_TMP = new HTuple(hv_lineStartY);

    // Initialize local and output iconic variables 
    hv_outLineStartX = new HTuple();
    hv_outLineStartY = new HTuple();
    hv_outLineEndX = new HTuple();
    hv_outLineEndY = new HTuple();
    try
    {
      if ((int)(new HTuple(hv_isVertical.TupleEqual("true"))) != 0)
      {
        {
        HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
        SortLineUpDown(hv_lineStartX_COPY_INP_TMP, hv_lineStartY_COPY_INP_TMP, hv_lineEndX_COPY_INP_TMP, 
            hv_lineEndY_COPY_INP_TMP, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out ExpTmpOutVar_2, 
            out ExpTmpOutVar_3);
        hv_lineStartX_COPY_INP_TMP.Dispose();
        hv_lineStartX_COPY_INP_TMP = ExpTmpOutVar_0;
        hv_lineStartY_COPY_INP_TMP.Dispose();
        hv_lineStartY_COPY_INP_TMP = ExpTmpOutVar_1;
        hv_lineEndX_COPY_INP_TMP.Dispose();
        hv_lineEndX_COPY_INP_TMP = ExpTmpOutVar_2;
        hv_lineEndY_COPY_INP_TMP.Dispose();
        hv_lineEndY_COPY_INP_TMP = ExpTmpOutVar_3;
        }
      }
      else if ((int)(new HTuple(hv_isVertical.TupleEqual("false"))) != 0)
      {
        {
        HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
        SortLineLeftRight(hv_lineStartX_COPY_INP_TMP, hv_lineStartY_COPY_INP_TMP, 
            hv_lineEndX_COPY_INP_TMP, hv_lineEndY_COPY_INP_TMP, out ExpTmpOutVar_0, 
            out ExpTmpOutVar_1, out ExpTmpOutVar_2, out ExpTmpOutVar_3);
        hv_lineStartX_COPY_INP_TMP.Dispose();
        hv_lineStartX_COPY_INP_TMP = ExpTmpOutVar_0;
        hv_lineStartY_COPY_INP_TMP.Dispose();
        hv_lineStartY_COPY_INP_TMP = ExpTmpOutVar_1;
        hv_lineEndX_COPY_INP_TMP.Dispose();
        hv_lineEndX_COPY_INP_TMP = ExpTmpOutVar_2;
        hv_lineEndY_COPY_INP_TMP.Dispose();
        hv_lineEndY_COPY_INP_TMP = ExpTmpOutVar_3;
        }
      }
      else
      {
        throw new HalconException("Unknow param <isVertical>");
      }

      hv_X1World.Dispose();hv_Y1World.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_mapToWorld, hv_lineStartX_COPY_INP_TMP, 
          hv_lineStartY_COPY_INP_TMP, out hv_X1World, out hv_Y1World);
      hv_X2World.Dispose();hv_Y2World.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_mapToWorld, hv_lineEndX_COPY_INP_TMP, hv_lineEndY_COPY_INP_TMP, 
          out hv_X2World, out hv_Y2World);

      hv_X1WorldTranslated.Dispose();hv_Y1WorldTranslated.Dispose();hv_X2WorldTranslated.Dispose();hv_Y2WorldTranslated.Dispose();
      GetParallelLine(hv_X1World, hv_Y1World, hv_X2World, hv_Y2World, hv_distance, 
          out hv_X1WorldTranslated, out hv_Y1WorldTranslated, out hv_X2WorldTranslated, 
          out hv_Y2WorldTranslated);

      hv_outLineStartX.Dispose();hv_outLineStartY.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_mapToImage, hv_X1WorldTranslated, hv_Y1WorldTranslated, 
          out hv_outLineStartX, out hv_outLineStartY);
      hv_outLineEndX.Dispose();hv_outLineEndY.Dispose();
      HOperatorSet.AffineTransPoint2d(hv_mapToImage, hv_X2WorldTranslated, hv_Y2WorldTranslated, 
          out hv_outLineEndX, out hv_outLineEndY);


      hv_lineEndX_COPY_INP_TMP.Dispose();
      hv_lineEndY_COPY_INP_TMP.Dispose();
      hv_lineStartX_COPY_INP_TMP.Dispose();
      hv_lineStartY_COPY_INP_TMP.Dispose();
      hv_X1World.Dispose();
      hv_Y1World.Dispose();
      hv_X2World.Dispose();
      hv_Y2World.Dispose();
      hv_X1WorldTranslated.Dispose();
      hv_Y1WorldTranslated.Dispose();
      hv_X2WorldTranslated.Dispose();
      hv_Y2WorldTranslated.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {

      hv_lineEndX_COPY_INP_TMP.Dispose();
      hv_lineEndY_COPY_INP_TMP.Dispose();
      hv_lineStartX_COPY_INP_TMP.Dispose();
      hv_lineStartY_COPY_INP_TMP.Dispose();
      hv_X1World.Dispose();
      hv_Y1World.Dispose();
      hv_X2World.Dispose();
      hv_Y2World.Dispose();
      hv_X1WorldTranslated.Dispose();
      hv_Y1WorldTranslated.Dispose();
      hv_X2WorldTranslated.Dispose();
      hv_Y2WorldTranslated.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void UndistortImage (HObject ho_ImageRaw, out HObject ho_ImageUndistorted, 
      HTuple hv_CameraParams, out HTuple hv_OutCameraParams)
  {




    // Local iconic variables 

    HObject ho_Map;
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ImageUndistorted);
    HOperatorSet.GenEmptyObj(out ho_Map);
    hv_OutCameraParams = new HTuple();
    try
    {
      hv_OutCameraParams.Dispose();
      HOperatorSet.ChangeRadialDistortionCamPar("adaptive", hv_CameraParams, 0, out hv_OutCameraParams);
      ho_Map.Dispose();
      HOperatorSet.GenRadialDistortionMap(out ho_Map, hv_CameraParams, hv_OutCameraParams, 
          "bilinear");

      ho_ImageUndistorted.Dispose();
      HOperatorSet.MapImage(ho_ImageRaw, ho_Map, out ho_ImageUndistorted);

      ho_Map.Dispose();


      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Map.Dispose();


      throw HDevExpDefaultException;
    }
  }

  public void VisionProStyleFindLine (HObject ho_Image, out HObject ho_ROI_0, HTuple hv_transition, 
      HTuple hv_rect1_row, HTuple hv_rect1_col, HTuple hv_rect1_rad, HTuple hv_rect1_len1, 
      HTuple hv_rect1_len2, HTuple hv_numSubRects, HTuple hv_threshold, HTuple hv_sigma, 
      HTuple hv_firstOrLast, HTuple hv_usingPairs, HTuple hv_whichEdgePair, HTuple hv_minEdge, 
      HTuple hv_maxEdge, out HTuple hv_Xs, out HTuple hv_Ys)
  {




    // Local iconic variables 

    HObject ho_Rectangle=null;

    // Local control variables 

    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_leftFaced = new HTuple(), hv_rect1_deg = new HTuple();
    HTuple hv_widthSubRects = new HTuple(), hv_heightSubRects = new HTuple();
    HTuple hv_betaDeg = new HTuple(), hv_rectStartX = new HTuple();
    HTuple hv_rectStartY = new HTuple(), hv_subRectXIncrement = new HTuple();
    HTuple hv_subRectYIncrement = new HTuple(), hv_firstSubRectCenterX = new HTuple();
    HTuple hv_firstSubRectCenterY = new HTuple(), hv_Index = new HTuple();
    HTuple hv_subRectCenterX = new HTuple(), hv_subRectCenterY = new HTuple();
    HTuple hv_subRectLen1 = new HTuple(), hv_subRectLen2 = new HTuple();
    HTuple hv_subRectPhi = new HTuple(), hv_MeasureHandle1 = new HTuple();
    HTuple hv_RowEdge1 = new HTuple(), hv_ColumnEdge1 = new HTuple();
    HTuple hv_Amplitude1 = new HTuple(), hv_Distance1 = new HTuple();
    HTuple hv_RowEdgeFirst = new HTuple(), hv_ColumnEdgeFirst = new HTuple();
    HTuple hv_AmplitudeFirst = new HTuple(), hv_RowEdgeSecond = new HTuple();
    HTuple hv_ColumnEdgeSecond = new HTuple(), hv_AmplitudeSecond = new HTuple();
    HTuple hv_IntraDistance = new HTuple(), hv_InterDistance = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    hv_Xs = new HTuple();
    hv_Ys = new HTuple();
    try
    {

      hv_Xs.Dispose();
      hv_Xs = new HTuple();
      hv_Ys.Dispose();
      hv_Ys = new HTuple();


      hv_Width.Dispose();hv_Height.Dispose();
      HOperatorSet.GetImageSize(ho_Image, out hv_Width, out hv_Height);


      hv_leftFaced.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_leftFaced = (new HTuple(hv_rect1_rad.TupleLess(
          (new HTuple(-90)).TupleRad()))).TupleOr(new HTuple(hv_rect1_rad.TupleGreater(
          (new HTuple(90)).TupleRad())));
      }
      hv_rect1_deg.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rect1_deg = hv_rect1_rad.TupleDeg()
          ;
      }

      ho_ROI_0.Dispose();
      HOperatorSet.GenRectangle2(out ho_ROI_0, hv_rect1_row, hv_rect1_col, hv_rect1_rad, 
          hv_rect1_len1, hv_rect1_len2);
      hv_widthSubRects.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_widthSubRects = (hv_rect1_len2/hv_numSubRects)*2;
      }
      hv_heightSubRects.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_heightSubRects = hv_rect1_len1*2;
      }

      if ((int)(hv_leftFaced) != 0)
      {
        hv_betaDeg.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_betaDeg = (-hv_rect1_deg)-90;
        }
        hv_rectStartX.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_rectStartX = hv_rect1_col-(hv_rect1_len2*(((hv_betaDeg.TupleRad()
            )).TupleCos()));
        }
        hv_rectStartY.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_rectStartY = hv_rect1_row-(hv_rect1_len2*(((hv_betaDeg.TupleRad()
            )).TupleSin()));
        }
        hv_subRectXIncrement.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_subRectXIncrement = hv_widthSubRects*(((hv_betaDeg.TupleRad()
            )).TupleCos());
        }
        hv_subRectYIncrement.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_subRectYIncrement = (((hv_widthSubRects*hv_widthSubRects)-(hv_subRectXIncrement*hv_subRectXIncrement))).TupleSqrt()
            ;
        }
        hv_firstSubRectCenterX.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_firstSubRectCenterX = hv_rectStartX+(hv_subRectXIncrement*0.5);
        }
        hv_firstSubRectCenterY.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_firstSubRectCenterY = hv_rectStartY+(hv_subRectYIncrement*0.5);
        }
      }
      else
      {
        hv_betaDeg.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_betaDeg = 90+hv_rect1_deg;
        }
        hv_rectStartX.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_rectStartX = hv_rect1_col+(hv_rect1_len2*(((hv_betaDeg.TupleRad()
            )).TupleCos()));
        }
        hv_rectStartY.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_rectStartY = hv_rect1_row-(hv_rect1_len2*(((hv_betaDeg.TupleRad()
            )).TupleSin()));
        }
        hv_subRectXIncrement.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_subRectXIncrement = (-hv_widthSubRects)*(((hv_betaDeg.TupleRad()
            )).TupleCos());
        }
        hv_subRectYIncrement.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_subRectYIncrement = (((hv_widthSubRects*hv_widthSubRects)-(hv_subRectXIncrement*hv_subRectXIncrement))).TupleSqrt()
            ;
        }
        hv_firstSubRectCenterX.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_firstSubRectCenterX = hv_rectStartX+(hv_subRectXIncrement*0.5);
        }
        hv_firstSubRectCenterY.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_firstSubRectCenterY = hv_rectStartY+(hv_subRectYIncrement*0.5);
        }
      }


      HTuple end_val34 = hv_numSubRects-1;
      HTuple step_val34 = 1;
      for (hv_Index=0; hv_Index.Continue(end_val34, step_val34); hv_Index = hv_Index.TupleAdd(step_val34))
      {

        if ((int)(hv_leftFaced) != 0)
        {
          hv_subRectCenterX.Dispose();
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          hv_subRectCenterX = hv_firstSubRectCenterX+(hv_Index*hv_subRectXIncrement);
          }
          hv_subRectCenterY.Dispose();
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          hv_subRectCenterY = hv_firstSubRectCenterY+(hv_Index*hv_subRectYIncrement);
          }
          hv_subRectLen1.Dispose();
          hv_subRectLen1 = new HTuple(hv_rect1_len1);
          hv_subRectLen2.Dispose();
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          hv_subRectLen2 = hv_rect1_len2/hv_numSubRects;
          }
          hv_subRectPhi.Dispose();
          hv_subRectPhi = new HTuple(hv_rect1_rad);
        }
        else
        {
          hv_subRectCenterX.Dispose();
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          hv_subRectCenterX = hv_firstSubRectCenterX+(hv_Index*hv_subRectXIncrement);
          }
          hv_subRectCenterY.Dispose();
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          hv_subRectCenterY = hv_firstSubRectCenterY+(hv_Index*hv_subRectYIncrement);
          }
          hv_subRectLen1.Dispose();
          hv_subRectLen1 = new HTuple(hv_rect1_len1);
          hv_subRectLen2.Dispose();
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          hv_subRectLen2 = hv_rect1_len2/hv_numSubRects;
          }
          hv_subRectPhi.Dispose();
          hv_subRectPhi = new HTuple(hv_rect1_rad);
        }

        ho_Rectangle.Dispose();
        HOperatorSet.GenRectangle2(out ho_Rectangle, hv_subRectCenterY, hv_subRectCenterX, 
            hv_subRectPhi, hv_subRectLen1, hv_subRectLen2);
        hv_MeasureHandle1.Dispose();
        HOperatorSet.GenMeasureRectangle2(hv_subRectCenterY, hv_subRectCenterX, hv_subRectPhi, 
            hv_subRectLen1, hv_subRectLen2, hv_Width, hv_Height, "nearest_neighbor", 
            out hv_MeasureHandle1);

        if ((int)(new HTuple(hv_usingPairs.TupleEqual("false"))) != 0)
        {
          hv_RowEdge1.Dispose();hv_ColumnEdge1.Dispose();hv_Amplitude1.Dispose();hv_Distance1.Dispose();
          HOperatorSet.MeasurePos(ho_Image, hv_MeasureHandle1, hv_sigma, hv_threshold, 
              hv_transition, hv_firstOrLast, out hv_RowEdge1, out hv_ColumnEdge1, 
              out hv_Amplitude1, out hv_Distance1);
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_Xs = hv_Xs.TupleConcat(
              hv_ColumnEdge1);
          hv_Xs.Dispose();
          hv_Xs = ExpTmpLocalVar_Xs;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_Ys = hv_Ys.TupleConcat(
              hv_RowEdge1);
          hv_Ys.Dispose();
          hv_Ys = ExpTmpLocalVar_Ys;
          }
          }
        }
        else
        {
          hv_RowEdgeFirst.Dispose();hv_ColumnEdgeFirst.Dispose();hv_AmplitudeFirst.Dispose();hv_RowEdgeSecond.Dispose();hv_ColumnEdgeSecond.Dispose();hv_AmplitudeSecond.Dispose();hv_IntraDistance.Dispose();hv_InterDistance.Dispose();
          HOperatorSet.MeasurePairs(ho_Image, hv_MeasureHandle1, hv_sigma, hv_threshold, 
              hv_transition, hv_whichEdgePair, out hv_RowEdgeFirst, out hv_ColumnEdgeFirst, 
              out hv_AmplitudeFirst, out hv_RowEdgeSecond, out hv_ColumnEdgeSecond, 
              out hv_AmplitudeSecond, out hv_IntraDistance, out hv_InterDistance);
          //only count if edge with is within range
          if ((int)((new HTuple((new HTuple((new HTuple(hv_IntraDistance.TupleLength()
              )).TupleGreater(0))).TupleAnd(new HTuple(hv_IntraDistance.TupleGreater(
              hv_minEdge))))).TupleAnd(new HTuple(hv_IntraDistance.TupleLess(hv_maxEdge)))) != 0)
          {
            if ((int)(new HTuple(hv_firstOrLast.TupleEqual("first"))) != 0)
            {
              using (HDevDisposeHelper dh = new HDevDisposeHelper())
              {
              {
              HTuple 
                ExpTmpLocalVar_Xs = hv_Xs.TupleConcat(
                  hv_ColumnEdgeFirst);
              hv_Xs.Dispose();
              hv_Xs = ExpTmpLocalVar_Xs;
              }
              }
              using (HDevDisposeHelper dh = new HDevDisposeHelper())
              {
              {
              HTuple 
                ExpTmpLocalVar_Ys = hv_Ys.TupleConcat(
                  hv_RowEdgeFirst);
              hv_Ys.Dispose();
              hv_Ys = ExpTmpLocalVar_Ys;
              }
              }
            }
            else
            {
              using (HDevDisposeHelper dh = new HDevDisposeHelper())
              {
              {
              HTuple 
                ExpTmpLocalVar_Xs = hv_Xs.TupleConcat(
                  hv_ColumnEdgeSecond);
              hv_Xs.Dispose();
              hv_Xs = ExpTmpLocalVar_Xs;
              }
              }
              using (HDevDisposeHelper dh = new HDevDisposeHelper())
              {
              {
              HTuple 
                ExpTmpLocalVar_Ys = hv_Ys.TupleConcat(
                  hv_RowEdgeSecond);
              hv_Ys.Dispose();
              hv_Ys = ExpTmpLocalVar_Ys;
              }
              }
              //Xs := [Xs,(ColumnEdgeSecond + ColumnEdgeFirst) / 2.0]
              //Ys := [Ys, (RowEdgeSecond+RowEdgeFirst)/2.0]
            }
          }

        }
        HOperatorSet.CloseMeasure(hv_MeasureHandle1);



      }


      ho_Rectangle.Dispose();

      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_leftFaced.Dispose();
      hv_rect1_deg.Dispose();
      hv_widthSubRects.Dispose();
      hv_heightSubRects.Dispose();
      hv_betaDeg.Dispose();
      hv_rectStartX.Dispose();
      hv_rectStartY.Dispose();
      hv_subRectXIncrement.Dispose();
      hv_subRectYIncrement.Dispose();
      hv_firstSubRectCenterX.Dispose();
      hv_firstSubRectCenterY.Dispose();
      hv_Index.Dispose();
      hv_subRectCenterX.Dispose();
      hv_subRectCenterY.Dispose();
      hv_subRectLen1.Dispose();
      hv_subRectLen2.Dispose();
      hv_subRectPhi.Dispose();
      hv_MeasureHandle1.Dispose();
      hv_RowEdge1.Dispose();
      hv_ColumnEdge1.Dispose();
      hv_Amplitude1.Dispose();
      hv_Distance1.Dispose();
      hv_RowEdgeFirst.Dispose();
      hv_ColumnEdgeFirst.Dispose();
      hv_AmplitudeFirst.Dispose();
      hv_RowEdgeSecond.Dispose();
      hv_ColumnEdgeSecond.Dispose();
      hv_AmplitudeSecond.Dispose();
      hv_IntraDistance.Dispose();
      hv_InterDistance.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Rectangle.Dispose();

      hv_Width.Dispose();
      hv_Height.Dispose();
      hv_leftFaced.Dispose();
      hv_rect1_deg.Dispose();
      hv_widthSubRects.Dispose();
      hv_heightSubRects.Dispose();
      hv_betaDeg.Dispose();
      hv_rectStartX.Dispose();
      hv_rectStartY.Dispose();
      hv_subRectXIncrement.Dispose();
      hv_subRectYIncrement.Dispose();
      hv_firstSubRectCenterX.Dispose();
      hv_firstSubRectCenterY.Dispose();
      hv_Index.Dispose();
      hv_subRectCenterX.Dispose();
      hv_subRectCenterY.Dispose();
      hv_subRectLen1.Dispose();
      hv_subRectLen2.Dispose();
      hv_subRectPhi.Dispose();
      hv_MeasureHandle1.Dispose();
      hv_RowEdge1.Dispose();
      hv_ColumnEdge1.Dispose();
      hv_Amplitude1.Dispose();
      hv_Distance1.Dispose();
      hv_RowEdgeFirst.Dispose();
      hv_ColumnEdgeFirst.Dispose();
      hv_AmplitudeFirst.Dispose();
      hv_RowEdgeSecond.Dispose();
      hv_ColumnEdgeSecond.Dispose();
      hv_AmplitudeSecond.Dispose();
      hv_IntraDistance.Dispose();
      hv_InterDistance.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void VisionProStyleFindLineOneStep (HObject ho_inputImage, out HObject ho_findLineRegion, 
      out HObject ho_lineRegion, HTuple hv_transition, HTuple hv_row, HTuple hv_col, 
      HTuple hv_radian, HTuple hv_len1, HTuple hv_len2, HTuple hv_numSubRects, HTuple hv_threshold, 
      HTuple hv_firstOrLast, HTuple hv_ignoreFraction, HTuple hv_isVertical, HTuple hv_sigma1, 
      HTuple hv_sigma2, HTuple hv_imageWidth, HTuple hv_imageHeight, HTuple hv_newWidth, 
      HTuple hv_cannyHigh, HTuple hv_cannyLow, HTuple hv_kernelWidth, HTuple hv_longestOnly, 
      out HTuple hv_lineX1, out HTuple hv_lineY1, out HTuple hv_lineX2, out HTuple hv_lineY2, 
      out HTuple hv_XsUsed, out HTuple hv_YsUsed, out HTuple hv_XsIgnored, out HTuple hv_YsIgnored)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_findLineRegions, ho_lineRegions;
    HObject ho_findLineRegion1=null;

    // Local control variables 

    HTuple hv_MultipleLines = new HTuple(), hv_EdgesX = new HTuple();
    HTuple hv_EdgesY = new HTuple(), hv_AllXsUsed = new HTuple();
    HTuple hv_AllYsUsed = new HTuple(), hv_AllXsIgnored = new HTuple();
    HTuple hv_AllYsIgnored = new HTuple(), hv_i = new HTuple();
    HTuple hv_Xs = new HTuple(), hv_Ys = new HTuple(), hv_RowBegin = new HTuple();
    HTuple hv_ColBegin = new HTuple(), hv_RowEnd = new HTuple();
    HTuple hv_ColEnd = new HTuple(), hv_EdgesXStep = new HTuple();
    HTuple hv_EdgesYStep = new HTuple(), hv__ = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_findLineRegion);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    HOperatorSet.GenEmptyObj(out ho_findLineRegions);
    HOperatorSet.GenEmptyObj(out ho_lineRegions);
    HOperatorSet.GenEmptyObj(out ho_findLineRegion1);
    hv_lineX1 = new HTuple();
    hv_lineY1 = new HTuple();
    hv_lineX2 = new HTuple();
    hv_lineY2 = new HTuple();
    hv_XsUsed = new HTuple();
    hv_YsUsed = new HTuple();
    hv_XsIgnored = new HTuple();
    hv_YsIgnored = new HTuple();
    try
    {

      hv_MultipleLines.Dispose();
      hv_MultipleLines = "false";
      if ((int)(new HTuple((new HTuple(hv_row.TupleLength())).TupleGreater(1))) != 0)
      {
        hv_MultipleLines.Dispose();
        hv_MultipleLines = "true";
      }

      hv_EdgesX.Dispose();
      hv_EdgesX = new HTuple();
      hv_EdgesY.Dispose();
      hv_EdgesY = new HTuple();
      hv_AllXsUsed.Dispose();
      hv_AllXsUsed = new HTuple();
      hv_AllYsUsed.Dispose();
      hv_AllYsUsed = new HTuple();
      hv_AllXsIgnored.Dispose();
      hv_AllXsIgnored = new HTuple();
      hv_AllYsIgnored.Dispose();
      hv_AllYsIgnored = new HTuple();

      ho_findLineRegions.Dispose();
      HOperatorSet.GenEmptyObj(out ho_findLineRegions);
      ho_lineRegions.Dispose();
      HOperatorSet.GenEmptyObj(out ho_lineRegions);

      for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_row.TupleLength()))-1); hv_i = (int)hv_i + 1)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        ho_findLineRegion.Dispose();hv_Xs.Dispose();hv_Ys.Dispose();
        VisionProStyleFindLine(ho_inputImage, out ho_findLineRegion, hv_transition, 
            hv_row.TupleSelect(hv_i), hv_col.TupleSelect(hv_i), hv_radian.TupleSelect(
            hv_i), hv_len1.TupleSelect(hv_i), hv_len2.TupleSelect(hv_i), hv_numSubRects, 
            hv_threshold.TupleSelect(hv_i), hv_sigma1, hv_firstOrLast, "false", "first", 
            0, 100, out hv_Xs, out hv_Ys);
        }

        if ((int)(new HTuple(hv_isVertical.TupleEqual("true"))) != 0)
        {
          hv_lineY1.Dispose();hv_lineX1.Dispose();hv_lineY2.Dispose();hv_lineX2.Dispose();hv_YsUsed.Dispose();hv_XsUsed.Dispose();hv_YsIgnored.Dispose();hv_XsIgnored.Dispose();
          FitLine2D(hv_Ys, hv_Xs, hv_ignoreFraction, out hv_lineY1, out hv_lineX1, 
              out hv_lineY2, out hv_lineX2, out hv_YsUsed, out hv_XsUsed, out hv_YsIgnored, 
              out hv_XsIgnored);
        }
        else
        {
          hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
          FitLine2D(hv_Xs, hv_Ys, hv_ignoreFraction, out hv_lineX1, out hv_lineY1, 
              out hv_lineX2, out hv_lineY2, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, 
              out hv_YsIgnored);
        }

        //_genSubRect2 (findLineRegion, row[i], col[i], radian[i], len1[i], len2[i], lineX1, lineY1, lineX2, lineY2, newWidth)
        ho_findLineRegion1.Dispose();hv_RowBegin.Dispose();hv_ColBegin.Dispose();hv_RowEnd.Dispose();hv_ColEnd.Dispose();hv_EdgesXStep.Dispose();hv_EdgesYStep.Dispose();
        _pinPointFindLine(ho_inputImage, out ho_findLineRegion1, hv_lineX1, hv_lineX2, 
            hv_lineY1, hv_lineY2, hv_radian, hv_newWidth, hv_MultipleLines, hv_cannyHigh, 
            hv_cannyLow, hv_sigma2, hv_kernelWidth, hv_longestOnly, out hv_RowBegin, 
            out hv_ColBegin, out hv_RowEnd, out hv_ColEnd, out hv_EdgesXStep, out hv_EdgesYStep);

        if ((int)(new HTuple(hv_MultipleLines.TupleEqual("true"))) != 0)
        {
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_EdgesX = hv_EdgesX.TupleConcat(
              hv_EdgesXStep);
          hv_EdgesX.Dispose();
          hv_EdgesX = ExpTmpLocalVar_EdgesX;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_EdgesY = hv_EdgesY.TupleConcat(
              hv_EdgesYStep);
          hv_EdgesY.Dispose();
          hv_EdgesY = ExpTmpLocalVar_EdgesY;
          }
          }
          {
          HObject ExpTmpOutVar_0;
          HOperatorSet.ConcatObj(ho_findLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
              );
          ho_findLineRegions.Dispose();
          ho_findLineRegions = ExpTmpOutVar_0;
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_AllXsUsed = hv_AllXsUsed.TupleConcat(
              hv_Xs);
          hv_AllXsUsed.Dispose();
          hv_AllXsUsed = ExpTmpLocalVar_AllXsUsed;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_AllYsUsed = hv_AllYsUsed.TupleConcat(
              hv_Ys);
          hv_AllYsUsed.Dispose();
          hv_AllYsUsed = ExpTmpLocalVar_AllYsUsed;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_AllXsIgnored = hv_AllXsIgnored.TupleConcat(
              hv_XsIgnored);
          hv_AllXsIgnored.Dispose();
          hv_AllXsIgnored = ExpTmpLocalVar_AllXsIgnored;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_AllYsIgnored = hv_AllYsIgnored.TupleConcat(
              hv_YsIgnored);
          hv_AllYsIgnored.Dispose();
          hv_AllYsIgnored = ExpTmpLocalVar_AllYsIgnored;
          }
          }
        }

      }

      if ((int)(new HTuple(hv_MultipleLines.TupleEqual("true"))) != 0)
      {
        hv_ColBegin.Dispose();hv_RowBegin.Dispose();hv_ColEnd.Dispose();hv_RowEnd.Dispose();hv__.Dispose();hv__.Dispose();hv__.Dispose();hv__.Dispose();
        FitLine2D(hv_EdgesX, hv_EdgesY, hv_ignoreFraction, out hv_ColBegin, out hv_RowBegin, 
            out hv_ColEnd, out hv_RowEnd, out hv__, out hv__, out hv__, out hv__);
        ho_findLineRegion.Dispose();
        ho_findLineRegion = new HObject(ho_findLineRegions);
        hv_XsUsed.Dispose();
        hv_XsUsed = new HTuple(hv_AllXsUsed);
        hv_YsUsed.Dispose();
        hv_YsUsed = new HTuple(hv_AllYsUsed);
        hv_XsIgnored.Dispose();
        hv_XsIgnored = new HTuple(hv_AllXsIgnored);
        hv_YsIgnored.Dispose();
        hv_YsIgnored = new HTuple(hv_AllYsIgnored);
      }


      ho_lineRegion.Dispose();
      GenLineRegion(out ho_lineRegion, hv_ColBegin, hv_RowBegin, hv_ColEnd, hv_RowEnd, 
          hv_imageWidth, hv_imageHeight);
      hv_lineX1.Dispose();
      hv_lineX1 = new HTuple(hv_ColBegin);
      hv_lineY1.Dispose();
      hv_lineY1 = new HTuple(hv_RowBegin);
      hv_lineX2.Dispose();
      hv_lineX2 = new HTuple(hv_ColEnd);
      hv_lineY2.Dispose();
      hv_lineY2 = new HTuple(hv_RowEnd);
      ho_findLineRegions.Dispose();
      ho_lineRegions.Dispose();
      ho_findLineRegion1.Dispose();

      hv_MultipleLines.Dispose();
      hv_EdgesX.Dispose();
      hv_EdgesY.Dispose();
      hv_AllXsUsed.Dispose();
      hv_AllYsUsed.Dispose();
      hv_AllXsIgnored.Dispose();
      hv_AllYsIgnored.Dispose();
      hv_i.Dispose();
      hv_Xs.Dispose();
      hv_Ys.Dispose();
      hv_RowBegin.Dispose();
      hv_ColBegin.Dispose();
      hv_RowEnd.Dispose();
      hv_ColEnd.Dispose();
      hv_EdgesXStep.Dispose();
      hv_EdgesYStep.Dispose();
      hv__.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_findLineRegions.Dispose();
      ho_lineRegions.Dispose();
      ho_findLineRegion1.Dispose();

      hv_MultipleLines.Dispose();
      hv_EdgesX.Dispose();
      hv_EdgesY.Dispose();
      hv_AllXsUsed.Dispose();
      hv_AllYsUsed.Dispose();
      hv_AllXsIgnored.Dispose();
      hv_AllYsIgnored.Dispose();
      hv_i.Dispose();
      hv_Xs.Dispose();
      hv_Ys.Dispose();
      hv_RowBegin.Dispose();
      hv_ColBegin.Dispose();
      hv_RowEnd.Dispose();
      hv_ColEnd.Dispose();
      hv_EdgesXStep.Dispose();
      hv_EdgesYStep.Dispose();
      hv__.Dispose();

      throw HDevExpDefaultException;
    }
  }

  public void VisionProStyleFindLineOneStep_Pairs (HObject ho_inputImage, out HObject ho_findLineRegion, 
      out HObject ho_lineRegion, HTuple hv_row, HTuple hv_col, HTuple hv_radian, HTuple hv_len1, 
      HTuple hv_len2, HTuple hv_transition, HTuple hv_numSubRects, HTuple hv_threshold, 
      HTuple hv_sigma1, HTuple hv_sigma2, HTuple hv_firstOrLast, HTuple hv_isVertical, 
      HTuple hv_ignoreFraction, HTuple hv_whichEdgePair, HTuple hv_minEdge, HTuple hv_maxEdge, 
      HTuple hv_imageWidth, HTuple hv_imageHeight, HTuple hv_cannyHigh, HTuple hv_cannyLow, 
      HTuple hv_useXLD, HTuple hv_newWidth, HTuple hv_kernelWidth, HTuple hv_longestOnly, 
      out HTuple hv_XsUsed, out HTuple hv_YsUsed, out HTuple hv_XsIgnored, out HTuple hv_YsIgnored, 
      out HTuple hv_lineX1, out HTuple hv_lineY1, out HTuple hv_lineX2, out HTuple hv_lineY2)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_findLineRegions, ho_lineRegions;

    // Local control variables 

    HTuple hv_MultipleLines = new HTuple(), hv_EdgesX = new HTuple();
    HTuple hv_EdgesY = new HTuple(), hv_AllXsUsed = new HTuple();
    HTuple hv_AllYsUsed = new HTuple(), hv_AllXsIgnored = new HTuple();
    HTuple hv_AllYsIgnored = new HTuple(), hv_i = new HTuple();
    HTuple hv_Xs = new HTuple(), hv_Ys = new HTuple(), hv_RowBegin = new HTuple();
    HTuple hv_ColBegin = new HTuple(), hv_RowEnd = new HTuple();
    HTuple hv_ColEnd = new HTuple(), hv_EdgesXStep = new HTuple();
    HTuple hv_EdgesYStep = new HTuple(), hv__ = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_findLineRegion);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    HOperatorSet.GenEmptyObj(out ho_findLineRegions);
    HOperatorSet.GenEmptyObj(out ho_lineRegions);
    hv_XsUsed = new HTuple();
    hv_YsUsed = new HTuple();
    hv_XsIgnored = new HTuple();
    hv_YsIgnored = new HTuple();
    hv_lineX1 = new HTuple();
    hv_lineY1 = new HTuple();
    hv_lineX2 = new HTuple();
    hv_lineY2 = new HTuple();
    try
    {

      hv_MultipleLines.Dispose();
      hv_MultipleLines = "false";
      if ((int)(new HTuple((new HTuple(hv_row.TupleLength())).TupleGreater(1))) != 0)
      {
        hv_MultipleLines.Dispose();
        hv_MultipleLines = "true";
      }

      hv_EdgesX.Dispose();
      hv_EdgesX = new HTuple();
      hv_EdgesY.Dispose();
      hv_EdgesY = new HTuple();
      hv_AllXsUsed.Dispose();
      hv_AllXsUsed = new HTuple();
      hv_AllYsUsed.Dispose();
      hv_AllYsUsed = new HTuple();
      hv_AllXsIgnored.Dispose();
      hv_AllXsIgnored = new HTuple();
      hv_AllYsIgnored.Dispose();
      hv_AllYsIgnored = new HTuple();

      ho_findLineRegions.Dispose();
      HOperatorSet.GenEmptyObj(out ho_findLineRegions);
      ho_lineRegions.Dispose();
      HOperatorSet.GenEmptyObj(out ho_lineRegions);

      for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_row.TupleLength()))-1); hv_i = (int)hv_i + 1)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        ho_findLineRegion.Dispose();hv_Xs.Dispose();hv_Ys.Dispose();
        VisionProStyleFindLine(ho_inputImage, out ho_findLineRegion, hv_transition, 
            hv_row.TupleSelect(hv_i), hv_col.TupleSelect(hv_i), hv_radian.TupleSelect(
            hv_i), hv_len1.TupleSelect(hv_i), hv_len2.TupleSelect(hv_i), hv_numSubRects, 
            hv_threshold.TupleSelect(hv_i), hv_sigma1, hv_firstOrLast, "true", hv_whichEdgePair, 
            hv_minEdge, hv_maxEdge, out hv_Xs, out hv_Ys);
        }

        if ((int)(new HTuple(hv_isVertical.TupleEqual("true"))) != 0)
        {
          hv_lineY1.Dispose();hv_lineX1.Dispose();hv_lineY2.Dispose();hv_lineX2.Dispose();hv_YsUsed.Dispose();hv_XsUsed.Dispose();hv_YsIgnored.Dispose();hv_XsIgnored.Dispose();
          FitLine2D(hv_Ys, hv_Xs, hv_ignoreFraction, out hv_lineY1, out hv_lineX1, 
              out hv_lineY2, out hv_lineX2, out hv_YsUsed, out hv_XsUsed, out hv_YsIgnored, 
              out hv_XsIgnored);
        }
        else
        {
          hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
          FitLine2D(hv_Xs, hv_Ys, hv_ignoreFraction, out hv_lineX1, out hv_lineY1, 
              out hv_lineX2, out hv_lineY2, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, 
              out hv_YsIgnored);
        }

        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        ho_findLineRegion.Dispose();
        _genSubRect2(out ho_findLineRegion, hv_row.TupleSelect(hv_i), hv_col.TupleSelect(
            hv_i), hv_radian.TupleSelect(hv_i), hv_len1.TupleSelect(hv_i), hv_len2.TupleSelect(
            hv_i), hv_lineX1, hv_lineY1, hv_lineX2, hv_lineY2, hv_newWidth);
        }

        ho_findLineRegion.Dispose();hv_RowBegin.Dispose();hv_ColBegin.Dispose();hv_RowEnd.Dispose();hv_ColEnd.Dispose();hv_EdgesXStep.Dispose();hv_EdgesYStep.Dispose();
        _pinPointFindLine(ho_inputImage, out ho_findLineRegion, hv_lineX1, hv_lineX2, 
            hv_lineY1, hv_lineY2, hv_radian, 5, hv_MultipleLines, hv_cannyHigh, hv_cannyLow, 
            hv_sigma2, hv_kernelWidth, hv_longestOnly, out hv_RowBegin, out hv_ColBegin, 
            out hv_RowEnd, out hv_ColEnd, out hv_EdgesXStep, out hv_EdgesYStep);

        if ((int)(new HTuple(hv_MultipleLines.TupleEqual("true"))) != 0)
        {
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_EdgesX = hv_EdgesX.TupleConcat(
              hv_EdgesXStep);
          hv_EdgesX.Dispose();
          hv_EdgesX = ExpTmpLocalVar_EdgesX;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_EdgesY = hv_EdgesY.TupleConcat(
              hv_EdgesYStep);
          hv_EdgesY.Dispose();
          hv_EdgesY = ExpTmpLocalVar_EdgesY;
          }
          }
          {
          HObject ExpTmpOutVar_0;
          HOperatorSet.ConcatObj(ho_findLineRegions, ho_findLineRegion, out ExpTmpOutVar_0
              );
          ho_findLineRegions.Dispose();
          ho_findLineRegions = ExpTmpOutVar_0;
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_AllXsUsed = hv_AllXsUsed.TupleConcat(
              hv_Xs);
          hv_AllXsUsed.Dispose();
          hv_AllXsUsed = ExpTmpLocalVar_AllXsUsed;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_AllYsUsed = hv_AllYsUsed.TupleConcat(
              hv_Ys);
          hv_AllYsUsed.Dispose();
          hv_AllYsUsed = ExpTmpLocalVar_AllYsUsed;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_AllXsIgnored = hv_AllXsIgnored.TupleConcat(
              hv_XsIgnored);
          hv_AllXsIgnored.Dispose();
          hv_AllXsIgnored = ExpTmpLocalVar_AllXsIgnored;
          }
          }
          using (HDevDisposeHelper dh = new HDevDisposeHelper())
          {
          {
          HTuple 
            ExpTmpLocalVar_AllYsIgnored = hv_AllYsIgnored.TupleConcat(
              hv_YsIgnored);
          hv_AllYsIgnored.Dispose();
          hv_AllYsIgnored = ExpTmpLocalVar_AllYsIgnored;
          }
          }
        }

      }

      if ((int)(new HTuple(hv_MultipleLines.TupleEqual("true"))) != 0)
      {
        if ((int)(new HTuple(hv_useXLD.TupleEqual("false"))) != 0)
        {
          hv_EdgesX.Dispose();
          hv_EdgesX = new HTuple(hv_XsUsed);
          hv_EdgesY.Dispose();
          hv_EdgesY = new HTuple(hv_YsUsed);
        }
        hv_ColBegin.Dispose();hv_RowBegin.Dispose();hv_ColEnd.Dispose();hv_RowEnd.Dispose();hv__.Dispose();hv__.Dispose();hv__.Dispose();hv__.Dispose();
        FitLine2D(hv_EdgesX, hv_EdgesY, 0, out hv_ColBegin, out hv_RowBegin, out hv_ColEnd, 
            out hv_RowEnd, out hv__, out hv__, out hv__, out hv__);
        ho_findLineRegion.Dispose();
        ho_findLineRegion = new HObject(ho_findLineRegions);
        hv_XsUsed.Dispose();
        hv_XsUsed = new HTuple(hv_AllXsUsed);
        hv_YsUsed.Dispose();
        hv_YsUsed = new HTuple(hv_AllYsUsed);
        hv_XsIgnored.Dispose();
        hv_XsIgnored = new HTuple(hv_AllXsIgnored);
        hv_YsIgnored.Dispose();
        hv_YsIgnored = new HTuple(hv_AllYsIgnored);
      }


      ho_lineRegion.Dispose();
      GenLineRegion(out ho_lineRegion, hv_ColBegin, hv_RowBegin, hv_ColEnd, hv_RowEnd, 
          hv_imageWidth, hv_imageHeight);
      hv_lineX1.Dispose();
      hv_lineX1 = new HTuple(hv_ColBegin);
      hv_lineY1.Dispose();
      hv_lineY1 = new HTuple(hv_RowBegin);
      hv_lineX2.Dispose();
      hv_lineX2 = new HTuple(hv_ColEnd);
      hv_lineY2.Dispose();
      hv_lineY2 = new HTuple(hv_RowEnd);
      ho_findLineRegions.Dispose();
      ho_lineRegions.Dispose();

      hv_MultipleLines.Dispose();
      hv_EdgesX.Dispose();
      hv_EdgesY.Dispose();
      hv_AllXsUsed.Dispose();
      hv_AllYsUsed.Dispose();
      hv_AllXsIgnored.Dispose();
      hv_AllYsIgnored.Dispose();
      hv_i.Dispose();
      hv_Xs.Dispose();
      hv_Ys.Dispose();
      hv_RowBegin.Dispose();
      hv_ColBegin.Dispose();
      hv_RowEnd.Dispose();
      hv_ColEnd.Dispose();
      hv_EdgesXStep.Dispose();
      hv_EdgesYStep.Dispose();
      hv__.Dispose();

      return;
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_findLineRegions.Dispose();
      ho_lineRegions.Dispose();

      hv_MultipleLines.Dispose();
      hv_EdgesX.Dispose();
      hv_EdgesY.Dispose();
      hv_AllXsUsed.Dispose();
      hv_AllYsUsed.Dispose();
      hv_AllXsIgnored.Dispose();
      hv_AllYsIgnored.Dispose();
      hv_i.Dispose();
      hv_Xs.Dispose();
      hv_Ys.Dispose();
      hv_RowBegin.Dispose();
      hv_ColBegin.Dispose();
      hv_RowEnd.Dispose();
      hv_ColEnd.Dispose();
      hv_EdgesXStep.Dispose();
      hv_EdgesYStep.Dispose();
      hv__.Dispose();

      throw HDevExpDefaultException;
    }
  }

  // Main procedure 
  private void action()
  {


    // Local iconic variables 

    HObject ho_Image, ho_Edges;

    // Local control variables 

    HTuple hv_row = new HTuple(), hv_col = new HTuple();
    HTuple hv_radian = new HTuple(), hv_len1 = new HTuple();
    HTuple hv_len2 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Image);
    HOperatorSet.GenEmptyObj(out ho_Edges);
    try
    {
      ho_Image.Dispose();
      HOperatorSet.ReadImage(out ho_Image, "C:/Users/afterbunny/Desktop/1013/1/新建文件夹/MV-CH250-20TM-F-NF (00D46076741)/00-1.bmp");
      hv_row.Dispose();
      hv_row = 2089;
      hv_col.Dispose();
      hv_col = 2551;
      hv_radian.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radian = (new HTuple(45)).TupleRad()
          ;
      }
      hv_len1.Dispose();
      hv_len1 = 20;
      hv_len2.Dispose();
      hv_len2 = 72;

      ho_Edges.Dispose();
      MeanImageIAndFineEdges(ho_Image, out ho_Edges, hv_row, hv_col, hv_radian, hv_len1, 
          hv_len2, 40, 20, 2, 9);
    }
    catch (HalconException HDevExpDefaultException)
    {
      ho_Image.Dispose();
      ho_Edges.Dispose();

      hv_row.Dispose();
      hv_col.Dispose();
      hv_radian.Dispose();
      hv_len1.Dispose();
      hv_len2.Dispose();

      throw HDevExpDefaultException;
    }
    ho_Image.Dispose();
    ho_Edges.Dispose();

    hv_row.Dispose();
    hv_col.Dispose();
    hv_radian.Dispose();
    hv_len1.Dispose();
    hv_len2.Dispose();

  }





}

